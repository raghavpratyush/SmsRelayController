
./objs/SmsController.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002d48  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000010e  00800060  00002d48  00002ddc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000004ad  0080016e  0080016e  00002eea  2**0
                  ALLOC
  3 .stab         00000390  00000000  00000000  00002eec  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000059  00000000  00000000  0000327c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d5 02 	jmp	0x5aa	; 0x5aa <__ctors_end>
       4:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__bad_interrupt>
       8:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__bad_interrupt>
       c:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__bad_interrupt>
      10:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__bad_interrupt>
      14:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__bad_interrupt>
      18:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__bad_interrupt>
      1c:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__bad_interrupt>
      20:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__bad_interrupt>
      24:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__bad_interrupt>
      28:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__bad_interrupt>
      2c:	0c 94 db 15 	jmp	0x2bb6	; 0x2bb6 <OSTickISR>
      30:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__bad_interrupt>
      34:	0c 94 10 0b 	jmp	0x1620	; 0x1620 <__vector_13>
      38:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__bad_interrupt>
      3c:	0c 94 67 0b 	jmp	0x16ce	; 0x16ce <__vector_15>
      40:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__bad_interrupt>
      44:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__bad_interrupt>
      48:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__bad_interrupt>
      4c:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__bad_interrupt>
      50:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__bad_interrupt>

00000054 <__c.1751>:
      54:	4b 4e 41 20 42 75 67 00                             KNA Bug.

0000005c <__c.1749>:
      5c:	54 69 6d 65 6f 75 74 00                             Timeout.

00000064 <__c.1736>:
      64:	52 75 6e 6e 69 6e 67 2e 2e 2e 00                    Running....

0000006f <__c.1734>:
      6f:	75 43 4f 53 69 69 00                                uCOSii.

00000076 <Arial_Bold_14>:
      76:	22 08 0a 0e 20 60 04 02 05 06 07 08 09 02 03 03     "... `..........
      86:	05 08 02 04 02 04 07 04 07 07 07 07 07 07 07 07     ................
      96:	02 02 07 07 07 08 0e 09 08 08 08 07 07 09 08 02     ................
      a6:	07 08 07 0b 08 09 07 09 09 07 08 08 09 0d 07 08     ................
      b6:	08 04 04 04 06 08 03 07 07 06 07 07 05 07 07 02     ................
      c6:	03 06 02 0a 07 07 07 07 05 06 05 07 07 0b 06 07     ................
      d6:	05 05 01 05 07 08 00 00 00 00 00 00 00 00 fe fe     ................
      e6:	18 18 1e 1e 00 1e 1e 00 00 00 00 00 90 f8 9e 90     ................
      f6:	f8 9e 1c 00 00 1c 00 00 18 3c 26 ff 66 cc 88 04     .........<&.f...
     106:	0c 18 3c 18 0c 04 1c 22 1c c0 30 8e 40 80 00 00     ..<...."..0.@...
     116:	18 04 00 0c 10 0c 80 cc 7e 72 f2 de 0c 80 00 0c     ........~r......
     126:	1c 10 10 10 1c 0c 1c 10 1e 1e 00 00 f0 fc 06 1c     ................
     136:	7c c0 06 fc f0 c0 7c 1c 14 14 0e 14 14 00 00 00     |.....|.........
     146:	00 00 60 60 60 fc fc 60 60 60 00 00 00 0c 0c 00     ..```..```......
     156:	00 00 00 00 58 38 c0 c0 c0 c0 00 00 00 00 00 00     ....X8..........
     166:	18 18 00 c0 38 06 18 04 00 00 f8 fc 0e 06 0e fc     ....8...........
     176:	f8 04 0c 1c 18 1c 0c 04 18 0c fe fe 00 00 1c 1c     ................
     186:	18 1c 86 c6 66 3e 1c 18 1c 1c 18 18 18 18 88 8c     ....f>..........
     196:	06 26 26 fe dc 04 0c 1c 18 18 0c 04 c0 e0 b8 8c     .&&.............
     1a6:	fe fe 80 04 04 04 04 1c 1c 04 70 7e 3e 36 36 f6     ..........p~>66.
     1b6:	c6 0c 1c 18 18 18 0c 04 f8 fc 6e 66 66 ee cc 04     ..........nff...
     1c6:	0c 18 18 18 1c 0c 06 06 06 e6 76 1e 06 00 00 1c     ..........v.....
     1d6:	1c 00 00 00 9c fe 66 66 66 fe 9c 0c 1c 18 18 18     ......fff.......
     1e6:	1c 0c 3c 7e 66 66 66 fc f8 0c 1c 18 18 1c 0c 04     ..<~fff.........
     1f6:	18 18 18 18 18 18 58 38 60 60 f0 f0 98 98 0c 00     ......X8``......
     206:	00 00 00 04 04 0c d8 d8 d8 d8 d8 d8 d8 00 00 00     ................
     216:	00 00 00 00 0c 98 98 f0 f0 60 60 0c 04 04 00 00     .........``.....
     226:	00 00 08 0c 06 c6 e6 76 3c 18 00 00 00 18 18 00     .......v<.......
     236:	00 00 e0 30 08 c4 f6 3a 1a 1a f2 fa 7e 04 08 f0     ...0...:....~...
     246:	0c 30 60 4c 9c 98 98 8c 9c 9c 90 48 4c 20 00 c0     .0`L.......HL ..
     256:	f8 be 86 be f8 c0 00 18 1c 04 04 04 04 04 1c 18     ................
     266:	fe fe 66 66 66 66 fe dc 1c 1c 18 18 18 18 1c 0c     ..ffff..........
     276:	f8 fc 0e 06 06 0e 9c 08 04 0c 1c 18 18 1c 0c 04     ................
     286:	fe fe 06 06 06 0e fc f8 1c 1c 18 18 18 1c 0c 04     ................
     296:	fe fe 66 66 66 66 66 1c 1c 18 18 18 18 18 fe fe     ..fffff.........
     2a6:	66 66 66 66 06 1c 1c 00 00 00 00 00 f8 fc 0e 06     ffff............
     2b6:	06 c6 ce dc c8 04 0c 1c 18 18 18 18 0c 04 fe fe     ................
     2c6:	60 60 60 60 fe fe 1c 1c 00 00 00 00 1c 1c fe fe     ````............
     2d6:	1c 1c 80 80 00 00 00 fe fe 0c 1c 18 18 18 1c 0c     ................
     2e6:	fe fe 60 30 78 ec 86 02 1c 1c 00 00 00 04 1c 18     ..`0x...........
     2f6:	fe fe 00 00 00 00 00 1c 1c 18 18 18 18 18 fe fe     ................
     306:	0e 7c e0 00 e0 7c 0e fe fe 1c 1c 00 00 0c 1c 0c     .|...|..........
     316:	00 00 1c 1c fe fe 1c 78 e0 80 fe fe 1c 1c 00 00     .......x........
     326:	04 0c 1c 1c f8 fc 0e 06 06 06 0e fc f8 04 0c 1c     ................
     336:	18 18 18 1c 0c 04 fe fe 66 66 66 7e 3c 1c 1c 00     ........fff~<...
     346:	00 00 00 00 f8 fc 0e 06 86 06 0e fc f8 04 0c 1c     ................
     356:	18 18 1c 0c 1c 24 fe fe 66 66 e6 e6 be 1c 00 1c     .....$..ff......
     366:	1c 00 00 00 0c 1c 18 10 3c 7e 66 66 66 ee cc 0c     ........<~fff...
     376:	1c 18 18 18 1c 0c 06 06 06 fe fe 06 06 06 00 00     ................
     386:	00 1c 1c 00 00 00 fe fe 00 00 00 00 fe fe 04 0c     ................
     396:	1c 18 18 1c 0c 04 02 1e fc e0 00 e0 fc 1e 02 00     ................
     3a6:	00 00 1c 1c 1c 00 00 00 06 fe f8 00 f0 fe 0e fe     ................
     3b6:	f0 00 f8 fe 06 00 00 1c 1c 1c 00 00 00 1c 1c 1c     ................
     3c6:	00 00 06 0e f8 f0 f8 0e 06 18 1c 04 00 04 1c 18     ................
     3d6:	06 0e 38 f0 f0 38 0e 06 00 00 00 1c 1c 00 00 00     ..8..8..........
     3e6:	06 06 86 e6 76 1e 0e 06 18 1c 1c 18 18 18 18 18     ....v...........
     3f6:	fe fe 06 06 fc fc c0 c0 06 38 c0 00 00 00 04 18     .........8......
     406:	06 06 fe fe c0 c0 fc fc 20 38 0e 0e 38 20 00 00     ........ 8..8 ..
	...
     422:	80 80 80 80 80 80 80 80 02 06 04 00 00 00 10 98     ................
     432:	d8 58 f8 f0 00 0c 1c 18 18 0c 1c 10 fe fe 30 18     .X............0.
     442:	38 f0 e0 1c 1c 0c 18 1c 0c 04 e0 f0 18 18 38 30     8.............80
     452:	04 0c 18 18 1c 0c e0 f0 38 18 30 fe fe 04 0c 1c     ........8.0.....
     462:	18 0c 1c 1c e0 f0 d8 d8 d8 f0 e0 04 0c 18 18 18     ................
     472:	18 08 18 fc fe 1a 1a 00 1c 1c 00 00 e0 f0 38 18     ..............8.
     482:	30 f8 f8 64 ec dc d8 cc fc 7c fe fe 30 18 18 f8     0..d.....|..0...
     492:	f0 1c 1c 00 00 00 1c 1c fa fa 1c 1c 00 fa fa c0     ................
     4a2:	fc 7c fe fe e0 f0 98 08 1c 1c 00 04 1c 18 fe fe     .|..............
     4b2:	1c 1c f8 f8 10 18 f8 f0 18 18 f8 f0 1c 1c 00 00     ................
     4c2:	1c 1c 00 00 1c 1c f8 f8 30 18 18 f8 f0 1c 1c 00     ........0.......
     4d2:	00 00 1c 1c e0 f0 38 18 38 f0 e0 04 0c 1c 18 1c     ......8.8.......
     4e2:	0c 04 f8 f8 30 18 38 f0 e0 fc fc 0c 18 1c 0c 04     ....0.8.........
     4f2:	e0 f0 38 18 30 f8 f8 04 0c 1c 18 0c fc fc f8 f8     ..8.0...........
     502:	30 18 18 1c 1c 00 00 00 70 f8 d8 d8 d8 90 08 18     0.......p.......
     512:	18 18 1c 0c 18 fc fe 18 18 00 0c 1c 18 18 f8 f8     ................
     522:	00 00 00 f8 f8 0c 1c 18 18 0c 1c 1c 38 f8 c0 00     ............8...
     532:	c0 f8 38 00 00 1c 1c 1c 00 00 18 f8 e0 00 f0 38     ..8............8
     542:	f0 00 e0 f8 18 00 00 1c 1c 0c 00 0c 1c 1c 00 00     ................
     552:	18 38 e0 e0 38 18 18 1c 04 04 1c 18 18 f8 e0 00     .8..8...........
     562:	e0 f8 18 00 84 fc f8 3c 04 00 18 98 d8 78 38 1c     .......<.....x8.
     572:	1c 18 18 18 80 fc 7e 06 06 00 7c fc c0 c0 fe fc     ......~...|.....
     582:	06 06 7e fc 80 c0 c0 fc 7c 00 60 30 30 70 60 60     ..~.....|.`00p``
     592:	30 00 00 00 00 00 00 00 fe 02 02 02 02 02 02 fe     0...............
     5a2:	1c 10 10 10 10 10 10 1c                             ........

000005aa <__ctors_end>:
     5aa:	11 24       	eor	r1, r1
     5ac:	1f be       	out	0x3f, r1	; 63
     5ae:	cf e5       	ldi	r28, 0x5F	; 95
     5b0:	d8 e0       	ldi	r29, 0x08	; 8
     5b2:	de bf       	out	0x3e, r29	; 62
     5b4:	cd bf       	out	0x3d, r28	; 61

000005b6 <__do_copy_data>:
     5b6:	11 e0       	ldi	r17, 0x01	; 1
     5b8:	a0 e6       	ldi	r26, 0x60	; 96
     5ba:	b0 e0       	ldi	r27, 0x00	; 0
     5bc:	e8 e4       	ldi	r30, 0x48	; 72
     5be:	fd e2       	ldi	r31, 0x2D	; 45
     5c0:	02 c0       	rjmp	.+4      	; 0x5c6 <.do_copy_data_start>

000005c2 <.do_copy_data_loop>:
     5c2:	05 90       	lpm	r0, Z+
     5c4:	0d 92       	st	X+, r0

000005c6 <.do_copy_data_start>:
     5c6:	ae 36       	cpi	r26, 0x6E	; 110
     5c8:	b1 07       	cpc	r27, r17
     5ca:	d9 f7       	brne	.-10     	; 0x5c2 <.do_copy_data_loop>

000005cc <__do_clear_bss>:
     5cc:	16 e0       	ldi	r17, 0x06	; 6
     5ce:	ae e6       	ldi	r26, 0x6E	; 110
     5d0:	b1 e0       	ldi	r27, 0x01	; 1
     5d2:	01 c0       	rjmp	.+2      	; 0x5d6 <.do_clear_bss_start>

000005d4 <.do_clear_bss_loop>:
     5d4:	1d 92       	st	X+, r1

000005d6 <.do_clear_bss_start>:
     5d6:	ab 31       	cpi	r26, 0x1B	; 27
     5d8:	b1 07       	cpc	r27, r17
     5da:	e1 f7       	brne	.-8      	; 0x5d4 <.do_clear_bss_loop>
     5dc:	0e 94 92 03 	call	0x724	; 0x724 <main>
     5e0:	0c 94 a2 16 	jmp	0x2d44	; 0x2d44 <_exit>

000005e4 <__bad_interrupt>:
     5e4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000005e8 <ks0108ReadFontData>:
     5e8:	fc 01       	movw	r30, r24
     5ea:	84 91       	lpm	r24, Z+
     5ec:	08 95       	ret

000005ee <ks0108SelectFont>:
     5ee:	90 93 a1 02 	sts	0x02A1, r25
     5f2:	80 93 a0 02 	sts	0x02A0, r24
     5f6:	70 93 9f 02 	sts	0x029F, r23
     5fa:	60 93 9e 02 	sts	0x029E, r22
     5fe:	40 93 9a 02 	sts	0x029A, r20
     602:	08 95       	ret

00000604 <ks0108CharWidth>:
     604:	0f 93       	push	r16
     606:	1f 93       	push	r17
     608:	08 2f       	mov	r16, r24
     60a:	80 91 a0 02 	lds	r24, 0x02A0
     60e:	90 91 a1 02 	lds	r25, 0x02A1
     612:	e0 91 9e 02 	lds	r30, 0x029E
     616:	f0 91 9f 02 	lds	r31, 0x029F
     61a:	04 96       	adiw	r24, 0x04	; 4
     61c:	09 95       	icall
     61e:	18 2f       	mov	r17, r24
     620:	80 91 a0 02 	lds	r24, 0x02A0
     624:	90 91 a1 02 	lds	r25, 0x02A1
     628:	e0 91 9e 02 	lds	r30, 0x029E
     62c:	f0 91 9f 02 	lds	r31, 0x029F
     630:	05 96       	adiw	r24, 0x05	; 5
     632:	09 95       	icall
     634:	48 2f       	mov	r20, r24
     636:	01 17       	cp	r16, r17
     638:	48 f0       	brcs	.+18     	; 0x64c <ks0108CharWidth+0x48>
     63a:	20 2f       	mov	r18, r16
     63c:	30 e0       	ldi	r19, 0x00	; 0
     63e:	81 2f       	mov	r24, r17
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	84 0f       	add	r24, r20
     644:	91 1d       	adc	r25, r1
     646:	28 17       	cp	r18, r24
     648:	39 07       	cpc	r19, r25
     64a:	24 f0       	brlt	.+8      	; 0x654 <ks0108CharWidth+0x50>
     64c:	80 e0       	ldi	r24, 0x00	; 0
     64e:	1f 91       	pop	r17
     650:	0f 91       	pop	r16
     652:	08 95       	ret
     654:	01 1b       	sub	r16, r17
     656:	20 2f       	mov	r18, r16
     658:	30 e0       	ldi	r19, 0x00	; 0
     65a:	2a 5f       	subi	r18, 0xFA	; 250
     65c:	3f 4f       	sbci	r19, 0xFF	; 255
     65e:	80 91 a0 02 	lds	r24, 0x02A0
     662:	90 91 a1 02 	lds	r25, 0x02A1
     666:	e0 91 9e 02 	lds	r30, 0x029E
     66a:	f0 91 9f 02 	lds	r31, 0x029F
     66e:	82 0f       	add	r24, r18
     670:	93 1f       	adc	r25, r19
     672:	09 95       	icall
     674:	8f 5f       	subi	r24, 0xFF	; 255
     676:	1f 91       	pop	r17
     678:	0f 91       	pop	r16
     67a:	08 95       	ret

0000067c <ks0108StringWidth>:
     67c:	0f 93       	push	r16
     67e:	1f 93       	push	r17
     680:	cf 93       	push	r28
     682:	df 93       	push	r29
     684:	ec 01       	movw	r28, r24
     686:	88 81       	ld	r24, Y
     688:	88 23       	and	r24, r24
     68a:	81 f0       	breq	.+32     	; 0x6ac <ks0108StringWidth+0x30>
     68c:	00 e0       	ldi	r16, 0x00	; 0
     68e:	10 e0       	ldi	r17, 0x00	; 0
     690:	21 96       	adiw	r28, 0x01	; 1
     692:	0e 94 02 03 	call	0x604	; 0x604 <ks0108CharWidth>
     696:	08 0f       	add	r16, r24
     698:	11 1d       	adc	r17, r1
     69a:	88 81       	ld	r24, Y
     69c:	88 23       	and	r24, r24
     69e:	c1 f7       	brne	.-16     	; 0x690 <ks0108StringWidth+0x14>
     6a0:	c8 01       	movw	r24, r16
     6a2:	df 91       	pop	r29
     6a4:	cf 91       	pop	r28
     6a6:	1f 91       	pop	r17
     6a8:	0f 91       	pop	r16
     6aa:	08 95       	ret
     6ac:	00 e0       	ldi	r16, 0x00	; 0
     6ae:	10 e0       	ldi	r17, 0x00	; 0
     6b0:	f7 cf       	rjmp	.-18     	; 0x6a0 <ks0108StringWidth+0x24>

000006b2 <ks0108StringWidth_P>:
     6b2:	0f 93       	push	r16
     6b4:	1f 93       	push	r17
     6b6:	cf 93       	push	r28
     6b8:	df 93       	push	r29
     6ba:	ec 01       	movw	r28, r24
     6bc:	9c 01       	movw	r18, r24
     6be:	fc 01       	movw	r30, r24
     6c0:	84 91       	lpm	r24, Z+
     6c2:	88 23       	and	r24, r24
     6c4:	a1 f0       	breq	.+40     	; 0x6ee <ks0108StringWidth_P+0x3c>
     6c6:	00 e0       	ldi	r16, 0x00	; 0
     6c8:	10 e0       	ldi	r17, 0x00	; 0
     6ca:	21 96       	adiw	r28, 0x01	; 1
     6cc:	f9 01       	movw	r30, r18
     6ce:	84 91       	lpm	r24, Z+
     6d0:	0e 94 02 03 	call	0x604	; 0x604 <ks0108CharWidth>
     6d4:	08 0f       	add	r16, r24
     6d6:	11 1d       	adc	r17, r1
     6d8:	9e 01       	movw	r18, r28
     6da:	fe 01       	movw	r30, r28
     6dc:	84 91       	lpm	r24, Z+
     6de:	88 23       	and	r24, r24
     6e0:	a1 f7       	brne	.-24     	; 0x6ca <ks0108StringWidth_P+0x18>
     6e2:	c8 01       	movw	r24, r16
     6e4:	df 91       	pop	r29
     6e6:	cf 91       	pop	r28
     6e8:	1f 91       	pop	r17
     6ea:	0f 91       	pop	r16
     6ec:	08 95       	ret
     6ee:	00 e0       	ldi	r16, 0x00	; 0
     6f0:	10 e0       	ldi	r17, 0x00	; 0
     6f2:	f7 cf       	rjmp	.-18     	; 0x6e2 <ks0108StringWidth_P+0x30>

000006f4 <ks0108Enable>:
     6f4:	df 93       	push	r29
     6f6:	cf 93       	push	r28
     6f8:	0f 92       	push	r0
     6fa:	cd b7       	in	r28, 0x3d	; 61
     6fc:	de b7       	in	r29, 0x3e	; 62
     6fe:	92 9a       	sbi	0x12, 2	; 18
     700:	00 00       	nop
     702:	00 00       	nop
     704:	00 00       	nop
     706:	92 98       	cbi	0x12, 2	; 18
     708:	19 82       	std	Y+1, r1	; 0x01
     70a:	89 81       	ldd	r24, Y+1	; 0x01
     70c:	88 30       	cpi	r24, 0x08	; 8
     70e:	30 f4       	brcc	.+12     	; 0x71c <ks0108Enable+0x28>
     710:	89 81       	ldd	r24, Y+1	; 0x01
     712:	8f 5f       	subi	r24, 0xFF	; 255
     714:	89 83       	std	Y+1, r24	; 0x01
     716:	89 81       	ldd	r24, Y+1	; 0x01
     718:	88 30       	cpi	r24, 0x08	; 8
     71a:	d0 f3       	brcs	.-12     	; 0x710 <ks0108Enable+0x1c>
     71c:	0f 90       	pop	r0
     71e:	cf 91       	pop	r28
     720:	df 91       	pop	r29
     722:	08 95       	ret

00000724 <main>:
     724:	0e 94 6c 14 	call	0x28d8	; 0x28d8 <OSInit>
     728:	0e 94 cb 0a 	call	0x1596	; 0x1596 <BoardInit>
     72c:	82 ea       	ldi	r24, 0xA2	; 162
     72e:	96 e0       	ldi	r25, 0x06	; 6
     730:	60 e0       	ldi	r22, 0x00	; 0
     732:	70 e0       	ldi	r23, 0x00	; 0
     734:	41 e2       	ldi	r20, 0x21	; 33
     736:	53 e0       	ldi	r21, 0x03	; 3
     738:	20 e0       	ldi	r18, 0x00	; 0
     73a:	0e 94 61 12 	call	0x24c2	; 0x24c2 <OSTaskCreate>
     73e:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <OSStart>
     742:	80 e0       	ldi	r24, 0x00	; 0
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	08 95       	ret

00000748 <ks0108WriteCommand>:
     748:	df 93       	push	r29
     74a:	cf 93       	push	r28
     74c:	0f 92       	push	r0
     74e:	cd b7       	in	r28, 0x3d	; 61
     750:	de b7       	in	r29, 0x3e	; 62
     752:	98 2f       	mov	r25, r24
     754:	66 23       	and	r22, r22
     756:	d9 f0       	breq	.+54     	; 0x78e <ks0108WriteCommand+0x46>
     758:	61 30       	cpi	r22, 0x01	; 1
     75a:	e1 f0       	breq	.+56     	; 0x794 <ks0108WriteCommand+0x4c>
     75c:	94 98       	cbi	0x12, 4	; 18
     75e:	93 98       	cbi	0x12, 3	; 18
     760:	8f ef       	ldi	r24, 0xFF	; 255
     762:	84 bb       	out	0x14, r24	; 20
     764:	95 bb       	out	0x15, r25	; 21
     766:	92 9a       	sbi	0x12, 2	; 18
     768:	00 00       	nop
     76a:	00 00       	nop
     76c:	00 00       	nop
     76e:	92 98       	cbi	0x12, 2	; 18
     770:	19 82       	std	Y+1, r1	; 0x01
     772:	89 81       	ldd	r24, Y+1	; 0x01
     774:	88 30       	cpi	r24, 0x08	; 8
     776:	30 f4       	brcc	.+12     	; 0x784 <ks0108WriteCommand+0x3c>
     778:	89 81       	ldd	r24, Y+1	; 0x01
     77a:	8f 5f       	subi	r24, 0xFF	; 255
     77c:	89 83       	std	Y+1, r24	; 0x01
     77e:	89 81       	ldd	r24, Y+1	; 0x01
     780:	88 30       	cpi	r24, 0x08	; 8
     782:	d0 f3       	brcs	.-12     	; 0x778 <ks0108WriteCommand+0x30>
     784:	15 ba       	out	0x15, r1	; 21
     786:	0f 90       	pop	r0
     788:	cf 91       	pop	r28
     78a:	df 91       	pop	r29
     78c:	08 95       	ret
     78e:	96 98       	cbi	0x12, 6	; 18
     790:	97 9a       	sbi	0x12, 7	; 18
     792:	e4 cf       	rjmp	.-56     	; 0x75c <ks0108WriteCommand+0x14>
     794:	97 98       	cbi	0x12, 7	; 18
     796:	96 9a       	sbi	0x12, 6	; 18
     798:	e1 cf       	rjmp	.-62     	; 0x75c <ks0108WriteCommand+0x14>

0000079a <ks0108GotoXY>:
     79a:	1f 93       	push	r17
     79c:	87 fd       	sbrc	r24, 7
     79e:	25 c0       	rjmp	.+74     	; 0x7ea <ks0108GotoXY+0x50>
     7a0:	60 34       	cpi	r22, 0x40	; 64
     7a2:	e0 f0       	brcs	.+56     	; 0x7dc <ks0108GotoXY+0x42>
     7a4:	60 e0       	ldi	r22, 0x00	; 0
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	80 93 9b 02 	sts	0x029B, r24
     7ac:	60 93 9c 02 	sts	0x029C, r22
     7b0:	90 93 9d 02 	sts	0x029D, r25
     7b4:	80 34       	cpi	r24, 0x40	; 64
     7b6:	b8 f0       	brcs	.+46     	; 0x7e6 <ks0108GotoXY+0x4c>
     7b8:	80 54       	subi	r24, 0x40	; 64
     7ba:	61 e0       	ldi	r22, 0x01	; 1
     7bc:	80 64       	ori	r24, 0x40	; 64
     7be:	0e 94 a4 03 	call	0x748	; 0x748 <ks0108WriteCommand>
     7c2:	10 91 9d 02 	lds	r17, 0x029D
     7c6:	18 6b       	ori	r17, 0xB8	; 184
     7c8:	81 2f       	mov	r24, r17
     7ca:	60 e0       	ldi	r22, 0x00	; 0
     7cc:	0e 94 a4 03 	call	0x748	; 0x748 <ks0108WriteCommand>
     7d0:	81 2f       	mov	r24, r17
     7d2:	61 e0       	ldi	r22, 0x01	; 1
     7d4:	0e 94 a4 03 	call	0x748	; 0x748 <ks0108WriteCommand>
     7d8:	1f 91       	pop	r17
     7da:	08 95       	ret
     7dc:	96 2f       	mov	r25, r22
     7de:	96 95       	lsr	r25
     7e0:	96 95       	lsr	r25
     7e2:	96 95       	lsr	r25
     7e4:	e1 cf       	rjmp	.-62     	; 0x7a8 <ks0108GotoXY+0xe>
     7e6:	60 e0       	ldi	r22, 0x00	; 0
     7e8:	e9 cf       	rjmp	.-46     	; 0x7bc <ks0108GotoXY+0x22>
     7ea:	80 e0       	ldi	r24, 0x00	; 0
     7ec:	d9 cf       	rjmp	.-78     	; 0x7a0 <ks0108GotoXY+0x6>

000007ee <ks0108DoReadData>:
     7ee:	1f 93       	push	r17
     7f0:	df 93       	push	r29
     7f2:	cf 93       	push	r28
     7f4:	0f 92       	push	r0
     7f6:	cd b7       	in	r28, 0x3d	; 61
     7f8:	de b7       	in	r29, 0x3e	; 62
     7fa:	15 ba       	out	0x15, r1	; 21
     7fc:	14 ba       	out	0x14, r1	; 20
     7fe:	90 91 9b 02 	lds	r25, 0x029B
     802:	90 34       	cpi	r25, 0x40	; 64
     804:	38 f5       	brcc	.+78     	; 0x854 <ks0108DoReadData+0x66>
     806:	96 98       	cbi	0x12, 6	; 18
     808:	97 9a       	sbi	0x12, 7	; 18
     80a:	90 34       	cpi	r25, 0x40	; 64
     80c:	39 f1       	breq	.+78     	; 0x85c <ks0108DoReadData+0x6e>
     80e:	94 9a       	sbi	0x12, 4	; 18
     810:	93 9a       	sbi	0x12, 3	; 18
     812:	92 9a       	sbi	0x12, 2	; 18
     814:	00 00       	nop
     816:	00 00       	nop
     818:	00 00       	nop
     81a:	13 b3       	in	r17, 0x13	; 19
     81c:	92 98       	cbi	0x12, 2	; 18
     81e:	19 82       	std	Y+1, r1	; 0x01
     820:	89 81       	ldd	r24, Y+1	; 0x01
     822:	88 30       	cpi	r24, 0x08	; 8
     824:	30 f4       	brcc	.+12     	; 0x832 <ks0108DoReadData+0x44>
     826:	89 81       	ldd	r24, Y+1	; 0x01
     828:	8f 5f       	subi	r24, 0xFF	; 255
     82a:	89 83       	std	Y+1, r24	; 0x01
     82c:	89 81       	ldd	r24, Y+1	; 0x01
     82e:	88 30       	cpi	r24, 0x08	; 8
     830:	d0 f3       	brcs	.-12     	; 0x826 <ks0108DoReadData+0x38>
     832:	8f ef       	ldi	r24, 0xFF	; 255
     834:	84 bb       	out	0x14, r24	; 20
     836:	89 2f       	mov	r24, r25
     838:	60 91 9c 02 	lds	r22, 0x029C
     83c:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
     840:	80 91 6e 01 	lds	r24, 0x016E
     844:	81 11       	cpse	r24, r1
     846:	10 95       	com	r17
     848:	81 2f       	mov	r24, r17
     84a:	0f 90       	pop	r0
     84c:	cf 91       	pop	r28
     84e:	df 91       	pop	r29
     850:	1f 91       	pop	r17
     852:	08 95       	ret
     854:	97 98       	cbi	0x12, 7	; 18
     856:	96 9a       	sbi	0x12, 6	; 18
     858:	90 34       	cpi	r25, 0x40	; 64
     85a:	c9 f6       	brne	.-78     	; 0x80e <ks0108DoReadData+0x20>
     85c:	88 23       	and	r24, r24
     85e:	b9 f2       	breq	.-82     	; 0x80e <ks0108DoReadData+0x20>
     860:	80 e4       	ldi	r24, 0x40	; 64
     862:	61 e0       	ldi	r22, 0x01	; 1
     864:	0e 94 a4 03 	call	0x748	; 0x748 <ks0108WriteCommand>
     868:	90 91 9b 02 	lds	r25, 0x029B
     86c:	d0 cf       	rjmp	.-96     	; 0x80e <ks0108DoReadData+0x20>

0000086e <ks0108ReadData>:
     86e:	81 e0       	ldi	r24, 0x01	; 1
     870:	0e 94 f7 03 	call	0x7ee	; 0x7ee <ks0108DoReadData>
     874:	80 e0       	ldi	r24, 0x00	; 0
     876:	0e 94 f7 03 	call	0x7ee	; 0x7ee <ks0108DoReadData>
     87a:	08 95       	ret

0000087c <ks0108WriteData>:
     87c:	df 92       	push	r13
     87e:	ef 92       	push	r14
     880:	ff 92       	push	r15
     882:	0f 93       	push	r16
     884:	1f 93       	push	r17
     886:	df 93       	push	r29
     888:	cf 93       	push	r28
     88a:	0f 92       	push	r0
     88c:	cd b7       	in	r28, 0x3d	; 61
     88e:	de b7       	in	r29, 0x3e	; 62
     890:	08 2f       	mov	r16, r24
     892:	80 91 9b 02 	lds	r24, 0x029B
     896:	87 fd       	sbrc	r24, 7
     898:	29 c0       	rjmp	.+82     	; 0x8ec <ks0108WriteData+0x70>
     89a:	80 34       	cpi	r24, 0x40	; 64
     89c:	80 f1       	brcs	.+96     	; 0x8fe <ks0108WriteData+0x82>
     89e:	97 98       	cbi	0x12, 7	; 18
     8a0:	96 9a       	sbi	0x12, 6	; 18
     8a2:	80 34       	cpi	r24, 0x40	; 64
     8a4:	81 f1       	breq	.+96     	; 0x906 <ks0108WriteData+0x8a>
     8a6:	94 9a       	sbi	0x12, 4	; 18
     8a8:	93 98       	cbi	0x12, 3	; 18
     8aa:	ff 24       	eor	r15, r15
     8ac:	fa 94       	dec	r15
     8ae:	f4 ba       	out	0x14, r15	; 20
     8b0:	10 91 9c 02 	lds	r17, 0x029C
     8b4:	17 70       	andi	r17, 0x07	; 7
     8b6:	59 f5       	brne	.+86     	; 0x90e <ks0108WriteData+0x92>
     8b8:	80 91 6e 01 	lds	r24, 0x016E
     8bc:	81 11       	cpse	r24, r1
     8be:	00 95       	com	r16
     8c0:	05 bb       	out	0x15, r16	; 21
     8c2:	92 9a       	sbi	0x12, 2	; 18
     8c4:	00 00       	nop
     8c6:	00 00       	nop
     8c8:	00 00       	nop
     8ca:	92 98       	cbi	0x12, 2	; 18
     8cc:	19 82       	std	Y+1, r1	; 0x01
     8ce:	89 81       	ldd	r24, Y+1	; 0x01
     8d0:	88 30       	cpi	r24, 0x08	; 8
     8d2:	30 f4       	brcc	.+12     	; 0x8e0 <ks0108WriteData+0x64>
     8d4:	89 81       	ldd	r24, Y+1	; 0x01
     8d6:	8f 5f       	subi	r24, 0xFF	; 255
     8d8:	89 83       	std	Y+1, r24	; 0x01
     8da:	89 81       	ldd	r24, Y+1	; 0x01
     8dc:	88 30       	cpi	r24, 0x08	; 8
     8de:	d0 f3       	brcs	.-12     	; 0x8d4 <ks0108WriteData+0x58>
     8e0:	80 91 9b 02 	lds	r24, 0x029B
     8e4:	8f 5f       	subi	r24, 0xFF	; 255
     8e6:	80 93 9b 02 	sts	0x029B, r24
     8ea:	15 ba       	out	0x15, r1	; 21
     8ec:	0f 90       	pop	r0
     8ee:	cf 91       	pop	r28
     8f0:	df 91       	pop	r29
     8f2:	1f 91       	pop	r17
     8f4:	0f 91       	pop	r16
     8f6:	ff 90       	pop	r15
     8f8:	ef 90       	pop	r14
     8fa:	df 90       	pop	r13
     8fc:	08 95       	ret
     8fe:	96 98       	cbi	0x12, 6	; 18
     900:	97 9a       	sbi	0x12, 7	; 18
     902:	80 34       	cpi	r24, 0x40	; 64
     904:	81 f6       	brne	.-96     	; 0x8a6 <ks0108WriteData+0x2a>
     906:	61 e0       	ldi	r22, 0x01	; 1
     908:	0e 94 a4 03 	call	0x748	; 0x748 <ks0108WriteCommand>
     90c:	cc cf       	rjmp	.-104    	; 0x8a6 <ks0108WriteData+0x2a>
     90e:	d2 b2       	in	r13, 0x12	; 18
     910:	81 e0       	ldi	r24, 0x01	; 1
     912:	0e 94 f7 03 	call	0x7ee	; 0x7ee <ks0108DoReadData>
     916:	80 e0       	ldi	r24, 0x00	; 0
     918:	0e 94 f7 03 	call	0x7ee	; 0x7ee <ks0108DoReadData>
     91c:	d2 ba       	out	0x12, r13	; 18
     91e:	f4 ba       	out	0x14, r15	; 20
     920:	e0 2e       	mov	r14, r16
     922:	ff 24       	eor	r15, r15
     924:	01 2f       	mov	r16, r17
     926:	10 e0       	ldi	r17, 0x00	; 0
     928:	97 01       	movw	r18, r14
     92a:	00 2e       	mov	r0, r16
     92c:	02 c0       	rjmp	.+4      	; 0x932 <ks0108WriteData+0xb6>
     92e:	22 0f       	add	r18, r18
     930:	33 1f       	adc	r19, r19
     932:	0a 94       	dec	r0
     934:	e2 f7       	brpl	.-8      	; 0x92e <ks0108WriteData+0xb2>
     936:	98 2f       	mov	r25, r24
     938:	92 2b       	or	r25, r18
     93a:	80 91 6e 01 	lds	r24, 0x016E
     93e:	88 23       	and	r24, r24
     940:	09 f0       	breq	.+2      	; 0x944 <ks0108WriteData+0xc8>
     942:	4b c0       	rjmp	.+150    	; 0x9da <ks0108WriteData+0x15e>
     944:	95 bb       	out	0x15, r25	; 21
     946:	92 9a       	sbi	0x12, 2	; 18
     948:	00 00       	nop
     94a:	00 00       	nop
     94c:	00 00       	nop
     94e:	92 98       	cbi	0x12, 2	; 18
     950:	19 82       	std	Y+1, r1	; 0x01
     952:	89 81       	ldd	r24, Y+1	; 0x01
     954:	88 30       	cpi	r24, 0x08	; 8
     956:	30 f4       	brcc	.+12     	; 0x964 <ks0108WriteData+0xe8>
     958:	89 81       	ldd	r24, Y+1	; 0x01
     95a:	8f 5f       	subi	r24, 0xFF	; 255
     95c:	89 83       	std	Y+1, r24	; 0x01
     95e:	89 81       	ldd	r24, Y+1	; 0x01
     960:	88 30       	cpi	r24, 0x08	; 8
     962:	d0 f3       	brcs	.-12     	; 0x958 <ks0108WriteData+0xdc>
     964:	60 91 9c 02 	lds	r22, 0x029C
     968:	68 5f       	subi	r22, 0xF8	; 248
     96a:	80 91 9b 02 	lds	r24, 0x029B
     96e:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
     972:	81 e0       	ldi	r24, 0x01	; 1
     974:	0e 94 f7 03 	call	0x7ee	; 0x7ee <ks0108DoReadData>
     978:	80 e0       	ldi	r24, 0x00	; 0
     97a:	0e 94 f7 03 	call	0x7ee	; 0x7ee <ks0108DoReadData>
     97e:	d2 ba       	out	0x12, r13	; 18
     980:	9f ef       	ldi	r25, 0xFF	; 255
     982:	94 bb       	out	0x14, r25	; 20
     984:	28 e0       	ldi	r18, 0x08	; 8
     986:	30 e0       	ldi	r19, 0x00	; 0
     988:	20 1b       	sub	r18, r16
     98a:	31 0b       	sbc	r19, r17
     98c:	02 c0       	rjmp	.+4      	; 0x992 <ks0108WriteData+0x116>
     98e:	f5 94       	asr	r15
     990:	e7 94       	ror	r14
     992:	2a 95       	dec	r18
     994:	e2 f7       	brpl	.-8      	; 0x98e <ks0108WriteData+0x112>
     996:	28 2f       	mov	r18, r24
     998:	2e 29       	or	r18, r14
     99a:	80 91 6e 01 	lds	r24, 0x016E
     99e:	88 23       	and	r24, r24
     9a0:	d1 f4       	brne	.+52     	; 0x9d6 <ks0108WriteData+0x15a>
     9a2:	25 bb       	out	0x15, r18	; 21
     9a4:	92 9a       	sbi	0x12, 2	; 18
     9a6:	00 00       	nop
     9a8:	00 00       	nop
     9aa:	00 00       	nop
     9ac:	92 98       	cbi	0x12, 2	; 18
     9ae:	19 82       	std	Y+1, r1	; 0x01
     9b0:	89 81       	ldd	r24, Y+1	; 0x01
     9b2:	88 30       	cpi	r24, 0x08	; 8
     9b4:	30 f4       	brcc	.+12     	; 0x9c2 <ks0108WriteData+0x146>
     9b6:	89 81       	ldd	r24, Y+1	; 0x01
     9b8:	8f 5f       	subi	r24, 0xFF	; 255
     9ba:	89 83       	std	Y+1, r24	; 0x01
     9bc:	89 81       	ldd	r24, Y+1	; 0x01
     9be:	88 30       	cpi	r24, 0x08	; 8
     9c0:	d0 f3       	brcs	.-12     	; 0x9b6 <ks0108WriteData+0x13a>
     9c2:	80 91 9b 02 	lds	r24, 0x029B
     9c6:	60 91 9c 02 	lds	r22, 0x029C
     9ca:	68 50       	subi	r22, 0x08	; 8
     9cc:	8f 5f       	subi	r24, 0xFF	; 255
     9ce:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
     9d2:	15 ba       	out	0x15, r1	; 21
     9d4:	8b cf       	rjmp	.-234    	; 0x8ec <ks0108WriteData+0x70>
     9d6:	20 95       	com	r18
     9d8:	e4 cf       	rjmp	.-56     	; 0x9a2 <ks0108WriteData+0x126>
     9da:	90 95       	com	r25
     9dc:	b3 cf       	rjmp	.-154    	; 0x944 <ks0108WriteData+0xc8>

000009de <ks0108PutChar>:
     9de:	2f 92       	push	r2
     9e0:	3f 92       	push	r3
     9e2:	4f 92       	push	r4
     9e4:	5f 92       	push	r5
     9e6:	6f 92       	push	r6
     9e8:	7f 92       	push	r7
     9ea:	8f 92       	push	r8
     9ec:	9f 92       	push	r9
     9ee:	af 92       	push	r10
     9f0:	bf 92       	push	r11
     9f2:	cf 92       	push	r12
     9f4:	df 92       	push	r13
     9f6:	ef 92       	push	r14
     9f8:	ff 92       	push	r15
     9fa:	0f 93       	push	r16
     9fc:	1f 93       	push	r17
     9fe:	df 93       	push	r29
     a00:	cf 93       	push	r28
     a02:	00 d0       	rcall	.+0      	; 0xa04 <ks0108PutChar+0x26>
     a04:	00 d0       	rcall	.+0      	; 0xa06 <ks0108PutChar+0x28>
     a06:	00 d0       	rcall	.+0      	; 0xa08 <ks0108PutChar+0x2a>
     a08:	cd b7       	in	r28, 0x3d	; 61
     a0a:	de b7       	in	r29, 0x3e	; 62
     a0c:	08 2f       	mov	r16, r24
     a0e:	80 91 a0 02 	lds	r24, 0x02A0
     a12:	90 91 a1 02 	lds	r25, 0x02A1
     a16:	e0 91 9e 02 	lds	r30, 0x029E
     a1a:	f0 91 9f 02 	lds	r31, 0x029F
     a1e:	03 96       	adiw	r24, 0x03	; 3
     a20:	09 95       	icall
     a22:	f8 2e       	mov	r15, r24
     a24:	28 2f       	mov	r18, r24
     a26:	27 70       	andi	r18, 0x07	; 7
     a28:	2b 83       	std	Y+3, r18	; 0x03
     a2a:	80 91 a0 02 	lds	r24, 0x02A0
     a2e:	90 91 a1 02 	lds	r25, 0x02A1
     a32:	e0 91 9e 02 	lds	r30, 0x029E
     a36:	f0 91 9f 02 	lds	r31, 0x029F
     a3a:	04 96       	adiw	r24, 0x04	; 4
     a3c:	09 95       	icall
     a3e:	18 2f       	mov	r17, r24
     a40:	80 91 a0 02 	lds	r24, 0x02A0
     a44:	90 91 a1 02 	lds	r25, 0x02A1
     a48:	e0 91 9e 02 	lds	r30, 0x029E
     a4c:	f0 91 9f 02 	lds	r31, 0x029F
     a50:	05 96       	adiw	r24, 0x05	; 5
     a52:	09 95       	icall
     a54:	30 91 9b 02 	lds	r19, 0x029B
     a58:	3a 83       	std	Y+2, r19	; 0x02
     a5a:	90 91 9c 02 	lds	r25, 0x029C
     a5e:	99 83       	std	Y+1, r25	; 0x01
     a60:	01 17       	cp	r16, r17
     a62:	08 f4       	brcc	.+2      	; 0xa66 <ks0108PutChar+0x88>
     a64:	96 c0       	rjmp	.+300    	; 0xb92 <ks0108PutChar+0x1b4>
     a66:	20 2f       	mov	r18, r16
     a68:	30 e0       	ldi	r19, 0x00	; 0
     a6a:	c8 2e       	mov	r12, r24
     a6c:	dd 24       	eor	r13, r13
     a6e:	c6 01       	movw	r24, r12
     a70:	81 0f       	add	r24, r17
     a72:	91 1d       	adc	r25, r1
     a74:	28 17       	cp	r18, r24
     a76:	39 07       	cpc	r19, r25
     a78:	0c f0       	brlt	.+2      	; 0xa7c <ks0108PutChar+0x9e>
     a7a:	8b c0       	rjmp	.+278    	; 0xb92 <ks0108PutChar+0x1b4>
     a7c:	8f 2d       	mov	r24, r15
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	07 96       	adiw	r24, 0x07	; 7
     a82:	95 95       	asr	r25
     a84:	87 95       	ror	r24
     a86:	95 95       	asr	r25
     a88:	87 95       	ror	r24
     a8a:	95 95       	asr	r25
     a8c:	87 95       	ror	r24
     a8e:	8c 83       	std	Y+4, r24	; 0x04
     a90:	f0 2e       	mov	r15, r16
     a92:	f1 1a       	sub	r15, r17
     a94:	09 f4       	brne	.+2      	; 0xa98 <ks0108PutChar+0xba>
     a96:	e6 c0       	rjmp	.+460    	; 0xc64 <ks0108PutChar+0x286>
     a98:	00 e0       	ldi	r16, 0x00	; 0
     a9a:	10 e0       	ldi	r17, 0x00	; 0
     a9c:	96 e0       	ldi	r25, 0x06	; 6
     a9e:	a9 2e       	mov	r10, r25
     aa0:	b1 2c       	mov	r11, r1
     aa2:	80 91 a0 02 	lds	r24, 0x02A0
     aa6:	90 91 a1 02 	lds	r25, 0x02A1
     aaa:	e0 91 9e 02 	lds	r30, 0x029E
     aae:	f0 91 9f 02 	lds	r31, 0x029F
     ab2:	8a 0d       	add	r24, r10
     ab4:	9b 1d       	adc	r25, r11
     ab6:	09 95       	icall
     ab8:	08 0f       	add	r16, r24
     aba:	11 1d       	adc	r17, r1
     abc:	08 94       	sec
     abe:	a1 1c       	adc	r10, r1
     ac0:	b1 1c       	adc	r11, r1
     ac2:	8a 2d       	mov	r24, r10
     ac4:	86 50       	subi	r24, 0x06	; 6
     ac6:	8f 15       	cp	r24, r15
     ac8:	60 f3       	brcs	.-40     	; 0xaa2 <ks0108PutChar+0xc4>
     aca:	ec 81       	ldd	r30, Y+4	; 0x04
     acc:	8e 2f       	mov	r24, r30
     ace:	90 e0       	ldi	r25, 0x00	; 0
     ad0:	08 9f       	mul	r16, r24
     ad2:	90 01       	movw	r18, r0
     ad4:	09 9f       	mul	r16, r25
     ad6:	30 0d       	add	r19, r0
     ad8:	18 9f       	mul	r17, r24
     ada:	30 0d       	add	r19, r0
     adc:	11 24       	eor	r1, r1
     ade:	86 e0       	ldi	r24, 0x06	; 6
     ae0:	48 2e       	mov	r4, r24
     ae2:	51 2c       	mov	r5, r1
     ae4:	4c 0c       	add	r4, r12
     ae6:	5d 1c       	adc	r5, r13
     ae8:	42 0e       	add	r4, r18
     aea:	53 1e       	adc	r5, r19
     aec:	2f 2d       	mov	r18, r15
     aee:	30 e0       	ldi	r19, 0x00	; 0
     af0:	2a 5f       	subi	r18, 0xFA	; 250
     af2:	3f 4f       	sbci	r19, 0xFF	; 255
     af4:	80 91 a0 02 	lds	r24, 0x02A0
     af8:	90 91 a1 02 	lds	r25, 0x02A1
     afc:	e0 91 9e 02 	lds	r30, 0x029E
     b00:	f0 91 9f 02 	lds	r31, 0x029F
     b04:	82 0f       	add	r24, r18
     b06:	93 1f       	adc	r25, r19
     b08:	09 95       	icall
     b0a:	08 2f       	mov	r16, r24
     b0c:	fc 81       	ldd	r31, Y+4	; 0x04
     b0e:	ff 23       	and	r31, r31
     b10:	09 f4       	brne	.+2      	; 0xb14 <ks0108PutChar+0x136>
     b12:	92 c0       	rjmp	.+292    	; 0xc38 <ks0108PutChar+0x25a>
     b14:	8f 2e       	mov	r8, r31
     b16:	99 24       	eor	r9, r9
     b18:	28 2e       	mov	r2, r24
     b1a:	21 94       	neg	r2
     b1c:	aa 24       	eor	r10, r10
     b1e:	bb 24       	eor	r11, r11
     b20:	33 24       	eor	r3, r3
     b22:	00 23       	and	r16, r16
     b24:	09 f4       	brne	.+2      	; 0xb28 <ks0108PutChar+0x14a>
     b26:	69 c0       	rjmp	.+210    	; 0xbfa <ks0108PutChar+0x21c>
     b28:	62 01       	movw	r12, r4
     b2a:	c3 0c       	add	r12, r3
     b2c:	d1 1c       	adc	r13, r1
     b2e:	32 01       	movw	r6, r4
     b30:	62 0c       	add	r6, r2
     b32:	71 1c       	adc	r7, r1
     b34:	1e 82       	std	Y+6, r1	; 0x06
     b36:	1d 82       	std	Y+5, r1	; 0x05
     b38:	75 01       	movw	r14, r10
     b3a:	08 94       	sec
     b3c:	e1 1c       	adc	r14, r1
     b3e:	f1 1c       	adc	r15, r1
     b40:	0d c0       	rjmp	.+26     	; 0xb5c <ks0108PutChar+0x17e>
     b42:	81 2f       	mov	r24, r17
     b44:	80 95       	com	r24
     b46:	0e 94 3e 04 	call	0x87c	; 0x87c <ks0108WriteData>
     b4a:	2d 81       	ldd	r18, Y+5	; 0x05
     b4c:	3e 81       	ldd	r19, Y+6	; 0x06
     b4e:	2f 5f       	subi	r18, 0xFF	; 255
     b50:	3f 4f       	sbci	r19, 0xFF	; 255
     b52:	3e 83       	std	Y+6, r19	; 0x06
     b54:	2d 83       	std	Y+5, r18	; 0x05
     b56:	20 17       	cp	r18, r16
     b58:	08 f0       	brcs	.+2      	; 0xb5c <ks0108PutChar+0x17e>
     b5a:	53 c0       	rjmp	.+166    	; 0xc02 <ks0108PutChar+0x224>
     b5c:	2d 81       	ldd	r18, Y+5	; 0x05
     b5e:	3e 81       	ldd	r19, Y+6	; 0x06
     b60:	2c 0d       	add	r18, r12
     b62:	3d 1d       	adc	r19, r13
     b64:	80 91 a0 02 	lds	r24, 0x02A0
     b68:	90 91 a1 02 	lds	r25, 0x02A1
     b6c:	e0 91 9e 02 	lds	r30, 0x029E
     b70:	f0 91 9f 02 	lds	r31, 0x029F
     b74:	82 0f       	add	r24, r18
     b76:	93 1f       	adc	r25, r19
     b78:	09 95       	icall
     b7a:	18 2f       	mov	r17, r24
     b7c:	8e 14       	cp	r8, r14
     b7e:	9f 04       	cpc	r9, r15
     b80:	21 f1       	breq	.+72     	; 0xbca <ks0108PutChar+0x1ec>
     b82:	80 91 9a 02 	lds	r24, 0x029A
     b86:	8f 3f       	cpi	r24, 0xFF	; 255
     b88:	e1 f6       	brne	.-72     	; 0xb42 <ks0108PutChar+0x164>
     b8a:	81 2f       	mov	r24, r17
     b8c:	0e 94 3e 04 	call	0x87c	; 0x87c <ks0108WriteData>
     b90:	dc cf       	rjmp	.-72     	; 0xb4a <ks0108PutChar+0x16c>
     b92:	21 e0       	ldi	r18, 0x01	; 1
     b94:	30 e0       	ldi	r19, 0x00	; 0
     b96:	c9 01       	movw	r24, r18
     b98:	26 96       	adiw	r28, 0x06	; 6
     b9a:	0f b6       	in	r0, 0x3f	; 63
     b9c:	f8 94       	cli
     b9e:	de bf       	out	0x3e, r29	; 62
     ba0:	0f be       	out	0x3f, r0	; 63
     ba2:	cd bf       	out	0x3d, r28	; 61
     ba4:	cf 91       	pop	r28
     ba6:	df 91       	pop	r29
     ba8:	1f 91       	pop	r17
     baa:	0f 91       	pop	r16
     bac:	ff 90       	pop	r15
     bae:	ef 90       	pop	r14
     bb0:	df 90       	pop	r13
     bb2:	cf 90       	pop	r12
     bb4:	bf 90       	pop	r11
     bb6:	af 90       	pop	r10
     bb8:	9f 90       	pop	r9
     bba:	8f 90       	pop	r8
     bbc:	7f 90       	pop	r7
     bbe:	6f 90       	pop	r6
     bc0:	5f 90       	pop	r5
     bc2:	4f 90       	pop	r4
     bc4:	3f 90       	pop	r3
     bc6:	2f 90       	pop	r2
     bc8:	08 95       	ret
     bca:	2d 81       	ldd	r18, Y+5	; 0x05
     bcc:	3e 81       	ldd	r19, Y+6	; 0x06
     bce:	26 0d       	add	r18, r6
     bd0:	37 1d       	adc	r19, r7
     bd2:	80 91 a0 02 	lds	r24, 0x02A0
     bd6:	90 91 a1 02 	lds	r25, 0x02A1
     bda:	e0 91 9e 02 	lds	r30, 0x029E
     bde:	f0 91 9f 02 	lds	r31, 0x029F
     be2:	82 0f       	add	r24, r18
     be4:	93 1f       	adc	r25, r19
     be6:	09 95       	icall
     be8:	90 e0       	ldi	r25, 0x00	; 0
     bea:	0b 80       	ldd	r0, Y+3	; 0x03
     bec:	02 c0       	rjmp	.+4      	; 0xbf2 <ks0108PutChar+0x214>
     bee:	95 95       	asr	r25
     bf0:	87 95       	ror	r24
     bf2:	0a 94       	dec	r0
     bf4:	e2 f7       	brpl	.-8      	; 0xbee <ks0108PutChar+0x210>
     bf6:	18 2b       	or	r17, r24
     bf8:	c4 cf       	rjmp	.-120    	; 0xb82 <ks0108PutChar+0x1a4>
     bfa:	75 01       	movw	r14, r10
     bfc:	08 94       	sec
     bfe:	e1 1c       	adc	r14, r1
     c00:	f1 1c       	adc	r15, r1
     c02:	80 91 9a 02 	lds	r24, 0x029A
     c06:	8f 3f       	cpi	r24, 0xFF	; 255
     c08:	49 f1       	breq	.+82     	; 0xc5c <ks0108PutChar+0x27e>
     c0a:	8f ef       	ldi	r24, 0xFF	; 255
     c0c:	0e 94 3e 04 	call	0x87c	; 0x87c <ks0108WriteData>
     c10:	82 e0       	ldi	r24, 0x02	; 2
     c12:	90 e0       	ldi	r25, 0x00	; 0
     c14:	a8 0e       	add	r10, r24
     c16:	b9 1e       	adc	r11, r25
     c18:	a8 14       	cp	r10, r8
     c1a:	b9 04       	cpc	r11, r9
     c1c:	bc f4       	brge	.+46     	; 0xc4c <ks0108PutChar+0x26e>
     c1e:	60 91 9c 02 	lds	r22, 0x029C
     c22:	68 5f       	subi	r22, 0xF8	; 248
     c24:	8a 81       	ldd	r24, Y+2	; 0x02
     c26:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
     c2a:	57 01       	movw	r10, r14
     c2c:	30 0e       	add	r3, r16
     c2e:	20 0e       	add	r2, r16
     c30:	ec 81       	ldd	r30, Y+4	; 0x04
     c32:	ee 16       	cp	r14, r30
     c34:	08 f4       	brcc	.+2      	; 0xc38 <ks0108PutChar+0x25a>
     c36:	75 cf       	rjmp	.-278    	; 0xb22 <ks0108PutChar+0x144>
     c38:	fa 81       	ldd	r31, Y+2	; 0x02
     c3a:	ff 5f       	subi	r31, 0xFF	; 255
     c3c:	8f 2f       	mov	r24, r31
     c3e:	80 0f       	add	r24, r16
     c40:	69 81       	ldd	r22, Y+1	; 0x01
     c42:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
     c46:	20 e0       	ldi	r18, 0x00	; 0
     c48:	30 e0       	ldi	r19, 0x00	; 0
     c4a:	a5 cf       	rjmp	.-182    	; 0xb96 <ks0108PutChar+0x1b8>
     c4c:	60 91 9c 02 	lds	r22, 0x029C
     c50:	9b 81       	ldd	r25, Y+3	; 0x03
     c52:	69 0f       	add	r22, r25
     c54:	8a 81       	ldd	r24, Y+2	; 0x02
     c56:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
     c5a:	e7 cf       	rjmp	.-50     	; 0xc2a <ks0108PutChar+0x24c>
     c5c:	80 e0       	ldi	r24, 0x00	; 0
     c5e:	0e 94 3e 04 	call	0x87c	; 0x87c <ks0108WriteData>
     c62:	d6 cf       	rjmp	.-84     	; 0xc10 <ks0108PutChar+0x232>
     c64:	20 e0       	ldi	r18, 0x00	; 0
     c66:	30 e0       	ldi	r19, 0x00	; 0
     c68:	3a cf       	rjmp	.-396    	; 0xade <ks0108PutChar+0x100>

00000c6a <ks0108Puts_P>:
     c6a:	0f 93       	push	r16
     c6c:	1f 93       	push	r17
     c6e:	cf 93       	push	r28
     c70:	df 93       	push	r29
     c72:	ec 01       	movw	r28, r24
     c74:	00 91 9b 02 	lds	r16, 0x029B
     c78:	fc 01       	movw	r30, r24
     c7a:	84 91       	lpm	r24, Z+
     c7c:	88 23       	and	r24, r24
     c7e:	41 f4       	brne	.+16     	; 0xc90 <ks0108Puts_P+0x26>
     c80:	21 c0       	rjmp	.+66     	; 0xcc4 <ks0108Puts_P+0x5a>
     c82:	0e 94 ef 04 	call	0x9de	; 0x9de <ks0108PutChar>
     c86:	21 96       	adiw	r28, 0x01	; 1
     c88:	fe 01       	movw	r30, r28
     c8a:	84 91       	lpm	r24, Z+
     c8c:	88 23       	and	r24, r24
     c8e:	d1 f0       	breq	.+52     	; 0xcc4 <ks0108Puts_P+0x5a>
     c90:	fe 01       	movw	r30, r28
     c92:	84 91       	lpm	r24, Z+
     c94:	8a 30       	cpi	r24, 0x0A	; 10
     c96:	a9 f7       	brne	.-22     	; 0xc82 <ks0108Puts_P+0x18>
     c98:	10 91 9c 02 	lds	r17, 0x029C
     c9c:	80 91 a0 02 	lds	r24, 0x02A0
     ca0:	90 91 a1 02 	lds	r25, 0x02A1
     ca4:	e0 91 9e 02 	lds	r30, 0x029E
     ca8:	f0 91 9f 02 	lds	r31, 0x029F
     cac:	03 96       	adiw	r24, 0x03	; 3
     cae:	09 95       	icall
     cb0:	18 0f       	add	r17, r24
     cb2:	80 2f       	mov	r24, r16
     cb4:	61 2f       	mov	r22, r17
     cb6:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
     cba:	21 96       	adiw	r28, 0x01	; 1
     cbc:	fe 01       	movw	r30, r28
     cbe:	84 91       	lpm	r24, Z+
     cc0:	88 23       	and	r24, r24
     cc2:	31 f7       	brne	.-52     	; 0xc90 <ks0108Puts_P+0x26>
     cc4:	df 91       	pop	r29
     cc6:	cf 91       	pop	r28
     cc8:	1f 91       	pop	r17
     cca:	0f 91       	pop	r16
     ccc:	08 95       	ret

00000cce <TaskGsm>:
     cce:	0f 93       	push	r16
     cd0:	1f 93       	push	r17
     cd2:	df 93       	push	r29
     cd4:	cf 93       	push	r28
     cd6:	0f 92       	push	r0
     cd8:	cd b7       	in	r28, 0x3d	; 61
     cda:	de b7       	in	r29, 0x3e	; 62
     cdc:	80 e6       	ldi	r24, 0x60	; 96
     cde:	90 e0       	ldi	r25, 0x00	; 0
     ce0:	90 93 96 02 	sts	0x0296, r25
     ce4:	80 93 95 02 	sts	0x0295, r24
     ce8:	8a e0       	ldi	r24, 0x0A	; 10
     cea:	90 e0       	ldi	r25, 0x00	; 0
     cec:	90 93 98 02 	sts	0x0298, r25
     cf0:	80 93 97 02 	sts	0x0297, r24
     cf4:	81 e0       	ldi	r24, 0x01	; 1
     cf6:	80 93 99 02 	sts	0x0299, r24
     cfa:	8e 01       	movw	r16, r28
     cfc:	0f 5f       	subi	r16, 0xFF	; 255
     cfe:	1f 4f       	sbci	r17, 0xFF	; 255
     d00:	85 e9       	ldi	r24, 0x95	; 149
     d02:	92 e0       	ldi	r25, 0x02	; 2
     d04:	61 e0       	ldi	r22, 0x01	; 1
     d06:	a8 01       	movw	r20, r16
     d08:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <SendAtCommand>
     d0c:	89 81       	ldd	r24, Y+1	; 0x01
     d0e:	88 23       	and	r24, r24
     d10:	29 f4       	brne	.+10     	; 0xd1c <TaskGsm+0x4e>
     d12:	88 b3       	in	r24, 0x18	; 24
     d14:	91 e0       	ldi	r25, 0x01	; 1
     d16:	89 27       	eor	r24, r25
     d18:	88 bb       	out	0x18, r24	; 24
     d1a:	f2 cf       	rjmp	.-28     	; 0xd00 <TaskGsm+0x32>
     d1c:	81 30       	cpi	r24, 0x01	; 1
     d1e:	49 f0       	breq	.+18     	; 0xd32 <TaskGsm+0x64>
     d20:	80 e0       	ldi	r24, 0x00	; 0
     d22:	60 e3       	ldi	r22, 0x30	; 48
     d24:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
     d28:	84 e5       	ldi	r24, 0x54	; 84
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	0e 94 35 06 	call	0xc6a	; 0xc6a <ks0108Puts_P>
     d30:	e7 cf       	rjmp	.-50     	; 0xd00 <TaskGsm+0x32>
     d32:	80 e0       	ldi	r24, 0x00	; 0
     d34:	60 e3       	ldi	r22, 0x30	; 48
     d36:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
     d3a:	8c e5       	ldi	r24, 0x5C	; 92
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	0e 94 35 06 	call	0xc6a	; 0xc6a <ks0108Puts_P>
     d42:	de cf       	rjmp	.-68     	; 0xd00 <TaskGsm+0x32>

00000d44 <TaskMain>:
     d44:	f8 94       	cli
     d46:	85 e0       	ldi	r24, 0x05	; 5
     d48:	83 bf       	out	0x33, r24	; 51
     d4a:	81 e0       	ldi	r24, 0x01	; 1
     d4c:	89 bf       	out	0x39, r24	; 57
     d4e:	12 be       	out	0x32, r1	; 50
     d50:	78 94       	sei
     d52:	80 e0       	ldi	r24, 0x00	; 0
     d54:	60 e0       	ldi	r22, 0x00	; 0
     d56:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
     d5a:	8f e6       	ldi	r24, 0x6F	; 111
     d5c:	90 e0       	ldi	r25, 0x00	; 0
     d5e:	0e 94 35 06 	call	0xc6a	; 0xc6a <ks0108Puts_P>
     d62:	80 e0       	ldi	r24, 0x00	; 0
     d64:	60 e1       	ldi	r22, 0x10	; 16
     d66:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
     d6a:	84 e6       	ldi	r24, 0x64	; 100
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	0e 94 35 06 	call	0xc6a	; 0xc6a <ks0108Puts_P>
     d72:	87 e6       	ldi	r24, 0x67	; 103
     d74:	96 e0       	ldi	r25, 0x06	; 6
     d76:	60 e0       	ldi	r22, 0x00	; 0
     d78:	70 e0       	ldi	r23, 0x00	; 0
     d7a:	41 ea       	ldi	r20, 0xA1	; 161
     d7c:	53 e0       	ldi	r21, 0x03	; 3
     d7e:	23 e0       	ldi	r18, 0x03	; 3
     d80:	0e 94 61 12 	call	0x24c2	; 0x24c2 <OSTaskCreate>
     d84:	81 e3       	ldi	r24, 0x31	; 49
     d86:	91 e0       	ldi	r25, 0x01	; 1
     d88:	0e 94 68 10 	call	0x20d0	; 0x20d0 <OSTimeDly>
     d8c:	fb cf       	rjmp	.-10     	; 0xd84 <TaskMain+0x40>

00000d8e <ks0108Puts>:
     d8e:	0f 93       	push	r16
     d90:	1f 93       	push	r17
     d92:	cf 93       	push	r28
     d94:	df 93       	push	r29
     d96:	ec 01       	movw	r28, r24
     d98:	00 91 9b 02 	lds	r16, 0x029B
     d9c:	88 81       	ld	r24, Y
     d9e:	88 23       	and	r24, r24
     da0:	39 f4       	brne	.+14     	; 0xdb0 <ks0108Puts+0x22>
     da2:	1d c0       	rjmp	.+58     	; 0xdde <ks0108Puts+0x50>
     da4:	0e 94 ef 04 	call	0x9de	; 0x9de <ks0108PutChar>
     da8:	21 96       	adiw	r28, 0x01	; 1
     daa:	88 81       	ld	r24, Y
     dac:	88 23       	and	r24, r24
     dae:	b9 f0       	breq	.+46     	; 0xdde <ks0108Puts+0x50>
     db0:	8a 30       	cpi	r24, 0x0A	; 10
     db2:	c1 f7       	brne	.-16     	; 0xda4 <ks0108Puts+0x16>
     db4:	10 91 9c 02 	lds	r17, 0x029C
     db8:	80 91 a0 02 	lds	r24, 0x02A0
     dbc:	90 91 a1 02 	lds	r25, 0x02A1
     dc0:	e0 91 9e 02 	lds	r30, 0x029E
     dc4:	f0 91 9f 02 	lds	r31, 0x029F
     dc8:	03 96       	adiw	r24, 0x03	; 3
     dca:	09 95       	icall
     dcc:	18 0f       	add	r17, r24
     dce:	80 2f       	mov	r24, r16
     dd0:	61 2f       	mov	r22, r17
     dd2:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
     dd6:	21 96       	adiw	r28, 0x01	; 1
     dd8:	88 81       	ld	r24, Y
     dda:	88 23       	and	r24, r24
     ddc:	49 f7       	brne	.-46     	; 0xdb0 <ks0108Puts+0x22>
     dde:	df 91       	pop	r29
     de0:	cf 91       	pop	r28
     de2:	1f 91       	pop	r17
     de4:	0f 91       	pop	r16
     de6:	08 95       	ret

00000de8 <ks0108SetDot>:
     de8:	0f 93       	push	r16
     dea:	1f 93       	push	r17
     dec:	06 2f       	mov	r16, r22
     dee:	14 2f       	mov	r17, r20
     df0:	68 7f       	andi	r22, 0xF8	; 248
     df2:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
     df6:	81 e0       	ldi	r24, 0x01	; 1
     df8:	0e 94 f7 03 	call	0x7ee	; 0x7ee <ks0108DoReadData>
     dfc:	80 e0       	ldi	r24, 0x00	; 0
     dfe:	0e 94 f7 03 	call	0x7ee	; 0x7ee <ks0108DoReadData>
     e02:	28 2f       	mov	r18, r24
     e04:	1f 3f       	cpi	r17, 0xFF	; 255
     e06:	79 f0       	breq	.+30     	; 0xe26 <ks0108SetDot+0x3e>
     e08:	07 70       	andi	r16, 0x07	; 7
     e0a:	81 e0       	ldi	r24, 0x01	; 1
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	02 c0       	rjmp	.+4      	; 0xe14 <ks0108SetDot+0x2c>
     e10:	88 0f       	add	r24, r24
     e12:	99 1f       	adc	r25, r25
     e14:	0a 95       	dec	r16
     e16:	e2 f7       	brpl	.-8      	; 0xe10 <ks0108SetDot+0x28>
     e18:	80 95       	com	r24
     e1a:	82 23       	and	r24, r18
     e1c:	0e 94 3e 04 	call	0x87c	; 0x87c <ks0108WriteData>
     e20:	1f 91       	pop	r17
     e22:	0f 91       	pop	r16
     e24:	08 95       	ret
     e26:	07 70       	andi	r16, 0x07	; 7
     e28:	81 e0       	ldi	r24, 0x01	; 1
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	02 c0       	rjmp	.+4      	; 0xe32 <ks0108SetDot+0x4a>
     e2e:	88 0f       	add	r24, r24
     e30:	99 1f       	adc	r25, r25
     e32:	0a 95       	dec	r16
     e34:	e2 f7       	brpl	.-8      	; 0xe2e <ks0108SetDot+0x46>
     e36:	82 2b       	or	r24, r18
     e38:	0e 94 3e 04 	call	0x87c	; 0x87c <ks0108WriteData>
     e3c:	1f 91       	pop	r17
     e3e:	0f 91       	pop	r16
     e40:	08 95       	ret

00000e42 <ks0108InvertRect>:
     e42:	af 92       	push	r10
     e44:	bf 92       	push	r11
     e46:	cf 92       	push	r12
     e48:	df 92       	push	r13
     e4a:	ef 92       	push	r14
     e4c:	ff 92       	push	r15
     e4e:	0f 93       	push	r16
     e50:	1f 93       	push	r17
     e52:	cf 93       	push	r28
     e54:	df 93       	push	r29
     e56:	b8 2e       	mov	r11, r24
     e58:	c4 2e       	mov	r12, r20
     e5a:	a2 2e       	mov	r10, r18
     e5c:	a3 94       	inc	r10
     e5e:	46 2f       	mov	r20, r22
     e60:	47 70       	andi	r20, 0x07	; 7
     e62:	06 2f       	mov	r16, r22
     e64:	04 1b       	sub	r16, r20
     e66:	ca 2d       	mov	r28, r10
     e68:	d0 e0       	ldi	r29, 0x00	; 0
     e6a:	64 2f       	mov	r22, r20
     e6c:	70 e0       	ldi	r23, 0x00	; 0
     e6e:	28 e0       	ldi	r18, 0x08	; 8
     e70:	30 e0       	ldi	r19, 0x00	; 0
     e72:	c9 01       	movw	r24, r18
     e74:	86 1b       	sub	r24, r22
     e76:	97 0b       	sbc	r25, r23
     e78:	c8 17       	cp	r28, r24
     e7a:	d9 07       	cpc	r29, r25
     e7c:	0c f0       	brlt	.+2      	; 0xe80 <ks0108InvertRect+0x3e>
     e7e:	58 c0       	rjmp	.+176    	; 0xf30 <ks0108InvertRect+0xee>
     e80:	2c 1b       	sub	r18, r28
     e82:	3d 0b       	sbc	r19, r29
     e84:	8f ef       	ldi	r24, 0xFF	; 255
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	02 c0       	rjmp	.+4      	; 0xe8e <ks0108InvertRect+0x4c>
     e8a:	95 95       	asr	r25
     e8c:	87 95       	ror	r24
     e8e:	2a 95       	dec	r18
     e90:	e2 f7       	brpl	.-8      	; 0xe8a <ks0108InvertRect+0x48>
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	fa 2c       	mov	r15, r10
     e96:	02 c0       	rjmp	.+4      	; 0xe9c <ks0108InvertRect+0x5a>
     e98:	88 0f       	add	r24, r24
     e9a:	99 1f       	adc	r25, r25
     e9c:	6a 95       	dec	r22
     e9e:	e2 f7       	brpl	.-8      	; 0xe98 <ks0108InvertRect+0x56>
     ea0:	d8 2e       	mov	r13, r24
     ea2:	8b 2d       	mov	r24, r11
     ea4:	60 2f       	mov	r22, r16
     ea6:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
     eaa:	ed 2c       	mov	r14, r13
     eac:	e0 94       	com	r14
     eae:	10 e0       	ldi	r17, 0x00	; 0
     eb0:	81 e0       	ldi	r24, 0x01	; 1
     eb2:	0e 94 f7 03 	call	0x7ee	; 0x7ee <ks0108DoReadData>
     eb6:	80 e0       	ldi	r24, 0x00	; 0
     eb8:	0e 94 f7 03 	call	0x7ee	; 0x7ee <ks0108DoReadData>
     ebc:	98 2f       	mov	r25, r24
     ebe:	8e 2d       	mov	r24, r14
     ec0:	89 23       	and	r24, r25
     ec2:	90 95       	com	r25
     ec4:	9d 21       	and	r25, r13
     ec6:	89 2b       	or	r24, r25
     ec8:	0e 94 3e 04 	call	0x87c	; 0x87c <ks0108WriteData>
     ecc:	1f 5f       	subi	r17, 0xFF	; 255
     ece:	c1 16       	cp	r12, r17
     ed0:	78 f7       	brcc	.-34     	; 0xeb0 <ks0108InvertRect+0x6e>
     ed2:	2f 2d       	mov	r18, r15
     ed4:	30 e0       	ldi	r19, 0x00	; 0
     ed6:	c9 01       	movw	r24, r18
     ed8:	07 96       	adiw	r24, 0x07	; 7
     eda:	8c 17       	cp	r24, r28
     edc:	9d 07       	cpc	r25, r29
     ede:	dc f4       	brge	.+54     	; 0xf16 <ks0108InvertRect+0xd4>
     ee0:	08 5f       	subi	r16, 0xF8	; 248
     ee2:	8b 2d       	mov	r24, r11
     ee4:	60 2f       	mov	r22, r16
     ee6:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
     eea:	10 e0       	ldi	r17, 0x00	; 0
     eec:	81 e0       	ldi	r24, 0x01	; 1
     eee:	0e 94 f7 03 	call	0x7ee	; 0x7ee <ks0108DoReadData>
     ef2:	80 e0       	ldi	r24, 0x00	; 0
     ef4:	0e 94 f7 03 	call	0x7ee	; 0x7ee <ks0108DoReadData>
     ef8:	80 95       	com	r24
     efa:	0e 94 3e 04 	call	0x87c	; 0x87c <ks0108WriteData>
     efe:	1f 5f       	subi	r17, 0xFF	; 255
     f00:	c1 16       	cp	r12, r17
     f02:	a0 f7       	brcc	.-24     	; 0xeec <ks0108InvertRect+0xaa>
     f04:	88 e0       	ldi	r24, 0x08	; 8
     f06:	f8 0e       	add	r15, r24
     f08:	2f 2d       	mov	r18, r15
     f0a:	30 e0       	ldi	r19, 0x00	; 0
     f0c:	c9 01       	movw	r24, r18
     f0e:	07 96       	adiw	r24, 0x07	; 7
     f10:	8c 17       	cp	r24, r28
     f12:	9d 07       	cpc	r25, r29
     f14:	2c f3       	brlt	.-54     	; 0xee0 <ks0108InvertRect+0x9e>
     f16:	fa 14       	cp	r15, r10
     f18:	88 f0       	brcs	.+34     	; 0xf3c <ks0108InvertRect+0xfa>
     f1a:	df 91       	pop	r29
     f1c:	cf 91       	pop	r28
     f1e:	1f 91       	pop	r17
     f20:	0f 91       	pop	r16
     f22:	ff 90       	pop	r15
     f24:	ef 90       	pop	r14
     f26:	df 90       	pop	r13
     f28:	cf 90       	pop	r12
     f2a:	bf 90       	pop	r11
     f2c:	af 90       	pop	r10
     f2e:	08 95       	ret
     f30:	38 e0       	ldi	r19, 0x08	; 8
     f32:	f3 2e       	mov	r15, r19
     f34:	f4 1a       	sub	r15, r20
     f36:	8f ef       	ldi	r24, 0xFF	; 255
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	ad cf       	rjmp	.-166    	; 0xe96 <ks0108InvertRect+0x54>
     f3c:	c2 1b       	sub	r28, r18
     f3e:	d3 0b       	sbc	r29, r19
     f40:	8f ef       	ldi	r24, 0xFF	; 255
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	02 c0       	rjmp	.+4      	; 0xf4a <ks0108InvertRect+0x108>
     f46:	88 0f       	add	r24, r24
     f48:	99 1f       	adc	r25, r25
     f4a:	ca 95       	dec	r28
     f4c:	e2 f7       	brpl	.-8      	; 0xf46 <ks0108InvertRect+0x104>
     f4e:	f8 2e       	mov	r15, r24
     f50:	f0 94       	com	r15
     f52:	08 5f       	subi	r16, 0xF8	; 248
     f54:	8b 2d       	mov	r24, r11
     f56:	60 2f       	mov	r22, r16
     f58:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
     f5c:	0f 2d       	mov	r16, r15
     f5e:	00 95       	com	r16
     f60:	10 e0       	ldi	r17, 0x00	; 0
     f62:	81 e0       	ldi	r24, 0x01	; 1
     f64:	0e 94 f7 03 	call	0x7ee	; 0x7ee <ks0108DoReadData>
     f68:	80 e0       	ldi	r24, 0x00	; 0
     f6a:	0e 94 f7 03 	call	0x7ee	; 0x7ee <ks0108DoReadData>
     f6e:	98 2f       	mov	r25, r24
     f70:	80 2f       	mov	r24, r16
     f72:	89 23       	and	r24, r25
     f74:	90 95       	com	r25
     f76:	9f 21       	and	r25, r15
     f78:	89 2b       	or	r24, r25
     f7a:	0e 94 3e 04 	call	0x87c	; 0x87c <ks0108WriteData>
     f7e:	1f 5f       	subi	r17, 0xFF	; 255
     f80:	c1 16       	cp	r12, r17
     f82:	78 f7       	brcc	.-34     	; 0xf62 <ks0108InvertRect+0x120>
     f84:	ca cf       	rjmp	.-108    	; 0xf1a <ks0108InvertRect+0xd8>

00000f86 <ks0108SetInverted>:
     f86:	1f 93       	push	r17
     f88:	18 2f       	mov	r17, r24
     f8a:	80 91 6e 01 	lds	r24, 0x016E
     f8e:	81 17       	cp	r24, r17
     f90:	41 f0       	breq	.+16     	; 0xfa2 <ks0108SetInverted+0x1c>
     f92:	80 e0       	ldi	r24, 0x00	; 0
     f94:	60 e0       	ldi	r22, 0x00	; 0
     f96:	4f e7       	ldi	r20, 0x7F	; 127
     f98:	2f e3       	ldi	r18, 0x3F	; 63
     f9a:	0e 94 21 07 	call	0xe42	; 0xe42 <ks0108InvertRect>
     f9e:	10 93 6e 01 	sts	0x016E, r17
     fa2:	1f 91       	pop	r17
     fa4:	08 95       	ret

00000fa6 <ks0108FillRect>:
     fa6:	9f 92       	push	r9
     fa8:	af 92       	push	r10
     faa:	bf 92       	push	r11
     fac:	cf 92       	push	r12
     fae:	df 92       	push	r13
     fb0:	ef 92       	push	r14
     fb2:	ff 92       	push	r15
     fb4:	0f 93       	push	r16
     fb6:	1f 93       	push	r17
     fb8:	cf 93       	push	r28
     fba:	df 93       	push	r29
     fbc:	b8 2e       	mov	r11, r24
     fbe:	c4 2e       	mov	r12, r20
     fc0:	92 2e       	mov	r9, r18
     fc2:	d0 2e       	mov	r13, r16
     fc4:	93 94       	inc	r9
     fc6:	46 2f       	mov	r20, r22
     fc8:	47 70       	andi	r20, 0x07	; 7
     fca:	06 2f       	mov	r16, r22
     fcc:	04 1b       	sub	r16, r20
     fce:	c9 2d       	mov	r28, r9
     fd0:	d0 e0       	ldi	r29, 0x00	; 0
     fd2:	64 2f       	mov	r22, r20
     fd4:	70 e0       	ldi	r23, 0x00	; 0
     fd6:	28 e0       	ldi	r18, 0x08	; 8
     fd8:	30 e0       	ldi	r19, 0x00	; 0
     fda:	c9 01       	movw	r24, r18
     fdc:	86 1b       	sub	r24, r22
     fde:	97 0b       	sbc	r25, r23
     fe0:	c8 17       	cp	r28, r24
     fe2:	d9 07       	cpc	r29, r25
     fe4:	0c f0       	brlt	.+2      	; 0xfe8 <ks0108FillRect+0x42>
     fe6:	58 c0       	rjmp	.+176    	; 0x1098 <ks0108FillRect+0xf2>
     fe8:	2c 1b       	sub	r18, r28
     fea:	3d 0b       	sbc	r19, r29
     fec:	8f ef       	ldi	r24, 0xFF	; 255
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	02 c0       	rjmp	.+4      	; 0xff6 <ks0108FillRect+0x50>
     ff2:	95 95       	asr	r25
     ff4:	87 95       	ror	r24
     ff6:	2a 95       	dec	r18
     ff8:	e2 f7       	brpl	.-8      	; 0xff2 <ks0108FillRect+0x4c>
     ffa:	90 e0       	ldi	r25, 0x00	; 0
     ffc:	f9 2c       	mov	r15, r9
     ffe:	02 c0       	rjmp	.+4      	; 0x1004 <ks0108FillRect+0x5e>
    1000:	88 0f       	add	r24, r24
    1002:	99 1f       	adc	r25, r25
    1004:	6a 95       	dec	r22
    1006:	e2 f7       	brpl	.-8      	; 0x1000 <ks0108FillRect+0x5a>
    1008:	a8 2e       	mov	r10, r24
    100a:	8b 2d       	mov	r24, r11
    100c:	60 2f       	mov	r22, r16
    100e:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
    1012:	10 e0       	ldi	r17, 0x00	; 0
    1014:	ea 2c       	mov	r14, r10
    1016:	e0 94       	com	r14
    1018:	06 c0       	rjmp	.+12     	; 0x1026 <ks0108FillRect+0x80>
    101a:	8e 21       	and	r24, r14
    101c:	0e 94 3e 04 	call	0x87c	; 0x87c <ks0108WriteData>
    1020:	1f 5f       	subi	r17, 0xFF	; 255
    1022:	c1 16       	cp	r12, r17
    1024:	78 f0       	brcs	.+30     	; 0x1044 <ks0108FillRect+0x9e>
    1026:	81 e0       	ldi	r24, 0x01	; 1
    1028:	0e 94 f7 03 	call	0x7ee	; 0x7ee <ks0108DoReadData>
    102c:	80 e0       	ldi	r24, 0x00	; 0
    102e:	0e 94 f7 03 	call	0x7ee	; 0x7ee <ks0108DoReadData>
    1032:	9f ef       	ldi	r25, 0xFF	; 255
    1034:	d9 16       	cp	r13, r25
    1036:	89 f7       	brne	.-30     	; 0x101a <ks0108FillRect+0x74>
    1038:	8a 29       	or	r24, r10
    103a:	0e 94 3e 04 	call	0x87c	; 0x87c <ks0108WriteData>
    103e:	1f 5f       	subi	r17, 0xFF	; 255
    1040:	c1 16       	cp	r12, r17
    1042:	88 f7       	brcc	.-30     	; 0x1026 <ks0108FillRect+0x80>
    1044:	2f 2d       	mov	r18, r15
    1046:	30 e0       	ldi	r19, 0x00	; 0
    1048:	c9 01       	movw	r24, r18
    104a:	07 96       	adiw	r24, 0x07	; 7
    104c:	8c 17       	cp	r24, r28
    104e:	9d 07       	cpc	r25, r29
    1050:	ac f4       	brge	.+42     	; 0x107c <ks0108FillRect+0xd6>
    1052:	08 5f       	subi	r16, 0xF8	; 248
    1054:	8b 2d       	mov	r24, r11
    1056:	60 2f       	mov	r22, r16
    1058:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
    105c:	10 e0       	ldi	r17, 0x00	; 0
    105e:	8d 2d       	mov	r24, r13
    1060:	0e 94 3e 04 	call	0x87c	; 0x87c <ks0108WriteData>
    1064:	1f 5f       	subi	r17, 0xFF	; 255
    1066:	c1 16       	cp	r12, r17
    1068:	d0 f7       	brcc	.-12     	; 0x105e <ks0108FillRect+0xb8>
    106a:	88 e0       	ldi	r24, 0x08	; 8
    106c:	f8 0e       	add	r15, r24
    106e:	2f 2d       	mov	r18, r15
    1070:	30 e0       	ldi	r19, 0x00	; 0
    1072:	c9 01       	movw	r24, r18
    1074:	07 96       	adiw	r24, 0x07	; 7
    1076:	8c 17       	cp	r24, r28
    1078:	9d 07       	cpc	r25, r29
    107a:	5c f3       	brlt	.-42     	; 0x1052 <ks0108FillRect+0xac>
    107c:	f9 14       	cp	r15, r9
    107e:	90 f0       	brcs	.+36     	; 0x10a4 <ks0108FillRect+0xfe>
    1080:	df 91       	pop	r29
    1082:	cf 91       	pop	r28
    1084:	1f 91       	pop	r17
    1086:	0f 91       	pop	r16
    1088:	ff 90       	pop	r15
    108a:	ef 90       	pop	r14
    108c:	df 90       	pop	r13
    108e:	cf 90       	pop	r12
    1090:	bf 90       	pop	r11
    1092:	af 90       	pop	r10
    1094:	9f 90       	pop	r9
    1096:	08 95       	ret
    1098:	58 e0       	ldi	r21, 0x08	; 8
    109a:	f5 2e       	mov	r15, r21
    109c:	f4 1a       	sub	r15, r20
    109e:	8f ef       	ldi	r24, 0xFF	; 255
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	ad cf       	rjmp	.-166    	; 0xffe <ks0108FillRect+0x58>
    10a4:	c2 1b       	sub	r28, r18
    10a6:	d3 0b       	sbc	r29, r19
    10a8:	8f ef       	ldi	r24, 0xFF	; 255
    10aa:	90 e0       	ldi	r25, 0x00	; 0
    10ac:	02 c0       	rjmp	.+4      	; 0x10b2 <ks0108FillRect+0x10c>
    10ae:	88 0f       	add	r24, r24
    10b0:	99 1f       	adc	r25, r25
    10b2:	ca 95       	dec	r28
    10b4:	e2 f7       	brpl	.-8      	; 0x10ae <ks0108FillRect+0x108>
    10b6:	f8 2e       	mov	r15, r24
    10b8:	f0 94       	com	r15
    10ba:	08 5f       	subi	r16, 0xF8	; 248
    10bc:	8b 2d       	mov	r24, r11
    10be:	60 2f       	mov	r22, r16
    10c0:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
    10c4:	10 e0       	ldi	r17, 0x00	; 0
    10c6:	0f 2d       	mov	r16, r15
    10c8:	00 95       	com	r16
    10ca:	06 c0       	rjmp	.+12     	; 0x10d8 <ks0108FillRect+0x132>
    10cc:	80 23       	and	r24, r16
    10ce:	0e 94 3e 04 	call	0x87c	; 0x87c <ks0108WriteData>
    10d2:	1f 5f       	subi	r17, 0xFF	; 255
    10d4:	c1 16       	cp	r12, r17
    10d6:	a0 f2       	brcs	.-88     	; 0x1080 <ks0108FillRect+0xda>
    10d8:	81 e0       	ldi	r24, 0x01	; 1
    10da:	0e 94 f7 03 	call	0x7ee	; 0x7ee <ks0108DoReadData>
    10de:	80 e0       	ldi	r24, 0x00	; 0
    10e0:	0e 94 f7 03 	call	0x7ee	; 0x7ee <ks0108DoReadData>
    10e4:	9f ef       	ldi	r25, 0xFF	; 255
    10e6:	d9 16       	cp	r13, r25
    10e8:	89 f7       	brne	.-30     	; 0x10cc <ks0108FillRect+0x126>
    10ea:	8f 29       	or	r24, r15
    10ec:	f0 cf       	rjmp	.-32     	; 0x10ce <ks0108FillRect+0x128>

000010ee <ks0108Init>:
    10ee:	0f 93       	push	r16
    10f0:	10 92 9b 02 	sts	0x029B, r1
    10f4:	10 92 9c 02 	sts	0x029C, r1
    10f8:	10 92 9d 02 	sts	0x029D, r1
    10fc:	80 93 6e 01 	sts	0x016E, r24
    1100:	8f ef       	ldi	r24, 0xFF	; 255
    1102:	81 bb       	out	0x11, r24	; 17
    1104:	95 9a       	sbi	0x12, 5	; 18
    1106:	8f e3       	ldi	r24, 0x3F	; 63
    1108:	60 e0       	ldi	r22, 0x00	; 0
    110a:	0e 94 a4 03 	call	0x748	; 0x748 <ks0108WriteCommand>
    110e:	8f e3       	ldi	r24, 0x3F	; 63
    1110:	61 e0       	ldi	r22, 0x01	; 1
    1112:	0e 94 a4 03 	call	0x748	; 0x748 <ks0108WriteCommand>
    1116:	8a ef       	ldi	r24, 0xFA	; 250
    1118:	90 e0       	ldi	r25, 0x00	; 0
    111a:	01 97       	sbiw	r24, 0x01	; 1
    111c:	f1 f7       	brne	.-4      	; 0x111a <ks0108Init+0x2c>
    111e:	80 ec       	ldi	r24, 0xC0	; 192
    1120:	60 e0       	ldi	r22, 0x00	; 0
    1122:	0e 94 a4 03 	call	0x748	; 0x748 <ks0108WriteCommand>
    1126:	80 ec       	ldi	r24, 0xC0	; 192
    1128:	61 e0       	ldi	r22, 0x01	; 1
    112a:	0e 94 a4 03 	call	0x748	; 0x748 <ks0108WriteCommand>
    112e:	80 e0       	ldi	r24, 0x00	; 0
    1130:	60 e0       	ldi	r22, 0x00	; 0
    1132:	4f e7       	ldi	r20, 0x7F	; 127
    1134:	2f e3       	ldi	r18, 0x3F	; 63
    1136:	00 e0       	ldi	r16, 0x00	; 0
    1138:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <ks0108FillRect>
    113c:	80 e0       	ldi	r24, 0x00	; 0
    113e:	60 e0       	ldi	r22, 0x00	; 0
    1140:	0e 94 cd 03 	call	0x79a	; 0x79a <ks0108GotoXY>
    1144:	0f 91       	pop	r16
    1146:	08 95       	ret

00001148 <ks0108DrawRoundRect>:
    1148:	2f 92       	push	r2
    114a:	3f 92       	push	r3
    114c:	4f 92       	push	r4
    114e:	5f 92       	push	r5
    1150:	6f 92       	push	r6
    1152:	7f 92       	push	r7
    1154:	8f 92       	push	r8
    1156:	9f 92       	push	r9
    1158:	af 92       	push	r10
    115a:	bf 92       	push	r11
    115c:	cf 92       	push	r12
    115e:	df 92       	push	r13
    1160:	ef 92       	push	r14
    1162:	ff 92       	push	r15
    1164:	0f 93       	push	r16
    1166:	1f 93       	push	r17
    1168:	df 93       	push	r29
    116a:	cf 93       	push	r28
    116c:	cd b7       	in	r28, 0x3d	; 61
    116e:	de b7       	in	r29, 0x3e	; 62
    1170:	2c 97       	sbiw	r28, 0x0c	; 12
    1172:	0f b6       	in	r0, 0x3f	; 63
    1174:	f8 94       	cli
    1176:	de bf       	out	0x3e, r29	; 62
    1178:	0f be       	out	0x3f, r0	; 63
    117a:	cd bf       	out	0x3d, r28	; 61
    117c:	8f 83       	std	Y+7, r24	; 0x07
    117e:	68 87       	std	Y+8, r22	; 0x08
    1180:	49 87       	std	Y+9, r20	; 0x09
    1182:	2a 87       	std	Y+10, r18	; 0x0a
    1184:	ae 2c       	mov	r10, r14
    1186:	60 2e       	mov	r6, r16
    1188:	77 24       	eor	r7, r7
    118a:	c3 01       	movw	r24, r6
    118c:	88 0f       	add	r24, r24
    118e:	99 1f       	adc	r25, r25
    1190:	22 27       	eor	r18, r18
    1192:	33 27       	eor	r19, r19
    1194:	28 1b       	sub	r18, r24
    1196:	39 0b       	sbc	r19, r25
    1198:	3e 83       	std	Y+6, r19	; 0x06
    119a:	2d 83       	std	Y+5, r18	; 0x05
    119c:	2d 5f       	subi	r18, 0xFD	; 253
    119e:	3f 4f       	sbci	r19, 0xFF	; 255
    11a0:	3c 87       	std	Y+12, r19	; 0x0c
    11a2:	2b 87       	std	Y+11, r18	; 0x0b
    11a4:	3f 80       	ldd	r3, Y+7	; 0x07
    11a6:	30 0e       	add	r3, r16
    11a8:	26 2e       	mov	r2, r22
    11aa:	20 0e       	add	r2, r16
    11ac:	34 2f       	mov	r19, r20
    11ae:	8f 81       	ldd	r24, Y+7	; 0x07
    11b0:	38 0f       	add	r19, r24
    11b2:	3c 83       	std	Y+4, r19	; 0x04
    11b4:	30 1b       	sub	r19, r16
    11b6:	3b 83       	std	Y+3, r19	; 0x03
    11b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    11ba:	96 0f       	add	r25, r22
    11bc:	99 83       	std	Y+1, r25	; 0x01
    11be:	90 1b       	sub	r25, r16
    11c0:	9a 83       	std	Y+2, r25	; 0x02
    11c2:	88 24       	eor	r8, r8
    11c4:	99 24       	eor	r9, r9
    11c6:	44 24       	eor	r4, r4
    11c8:	55 24       	eor	r5, r5
    11ca:	1c c0       	rjmp	.+56     	; 0x1204 <ks0108DrawRoundRect+0xbc>
    11cc:	eb 85       	ldd	r30, Y+11	; 0x0b
    11ce:	fc 85       	ldd	r31, Y+12	; 0x0c
    11d0:	3a 96       	adiw	r30, 0x0a	; 10
    11d2:	c4 01       	movw	r24, r8
    11d4:	86 19       	sub	r24, r6
    11d6:	97 09       	sbc	r25, r7
    11d8:	88 0f       	add	r24, r24
    11da:	99 1f       	adc	r25, r25
    11dc:	88 0f       	add	r24, r24
    11de:	99 1f       	adc	r25, r25
    11e0:	e8 0f       	add	r30, r24
    11e2:	f9 1f       	adc	r31, r25
    11e4:	fc 87       	std	Y+12, r31	; 0x0c
    11e6:	eb 87       	std	Y+11, r30	; 0x0b
    11e8:	08 94       	sec
    11ea:	61 08       	sbc	r6, r1
    11ec:	71 08       	sbc	r7, r1
    11ee:	08 94       	sec
    11f0:	81 1c       	adc	r8, r1
    11f2:	91 1c       	adc	r9, r1
    11f4:	24 e0       	ldi	r18, 0x04	; 4
    11f6:	30 e0       	ldi	r19, 0x00	; 0
    11f8:	42 0e       	add	r4, r18
    11fa:	53 1e       	adc	r5, r19
    11fc:	68 14       	cp	r6, r8
    11fe:	79 04       	cpc	r7, r9
    1200:	0c f4       	brge	.+2      	; 0x1204 <ks0108DrawRoundRect+0xbc>
    1202:	44 c0       	rjmp	.+136    	; 0x128c <ks0108DrawRoundRect+0x144>
    1204:	08 2d       	mov	r16, r8
    1206:	b3 2c       	mov	r11, r3
    1208:	b8 18       	sub	r11, r8
    120a:	16 2d       	mov	r17, r6
    120c:	e2 2c       	mov	r14, r2
    120e:	e6 18       	sub	r14, r6
    1210:	8b 2d       	mov	r24, r11
    1212:	6e 2d       	mov	r22, r14
    1214:	4a 2d       	mov	r20, r10
    1216:	0e 94 f4 06 	call	0xde8	; 0xde8 <ks0108SetDot>
    121a:	c3 2c       	mov	r12, r3
    121c:	c6 18       	sub	r12, r6
    121e:	d2 2c       	mov	r13, r2
    1220:	d8 18       	sub	r13, r8
    1222:	8c 2d       	mov	r24, r12
    1224:	6d 2d       	mov	r22, r13
    1226:	4a 2d       	mov	r20, r10
    1228:	0e 94 f4 06 	call	0xde8	; 0xde8 <ks0108SetDot>
    122c:	fb 80       	ldd	r15, Y+3	; 0x03
    122e:	f8 0c       	add	r15, r8
    1230:	8f 2d       	mov	r24, r15
    1232:	6e 2d       	mov	r22, r14
    1234:	4a 2d       	mov	r20, r10
    1236:	0e 94 f4 06 	call	0xde8	; 0xde8 <ks0108SetDot>
    123a:	eb 80       	ldd	r14, Y+3	; 0x03
    123c:	e6 0c       	add	r14, r6
    123e:	8e 2d       	mov	r24, r14
    1240:	6d 2d       	mov	r22, r13
    1242:	4a 2d       	mov	r20, r10
    1244:	0e 94 f4 06 	call	0xde8	; 0xde8 <ks0108SetDot>
    1248:	fa 81       	ldd	r31, Y+2	; 0x02
    124a:	1f 0f       	add	r17, r31
    124c:	8f 2d       	mov	r24, r15
    124e:	61 2f       	mov	r22, r17
    1250:	4a 2d       	mov	r20, r10
    1252:	0e 94 f4 06 	call	0xde8	; 0xde8 <ks0108SetDot>
    1256:	2a 81       	ldd	r18, Y+2	; 0x02
    1258:	02 0f       	add	r16, r18
    125a:	8e 2d       	mov	r24, r14
    125c:	60 2f       	mov	r22, r16
    125e:	4a 2d       	mov	r20, r10
    1260:	0e 94 f4 06 	call	0xde8	; 0xde8 <ks0108SetDot>
    1264:	8b 2d       	mov	r24, r11
    1266:	61 2f       	mov	r22, r17
    1268:	4a 2d       	mov	r20, r10
    126a:	0e 94 f4 06 	call	0xde8	; 0xde8 <ks0108SetDot>
    126e:	8c 2d       	mov	r24, r12
    1270:	60 2f       	mov	r22, r16
    1272:	4a 2d       	mov	r20, r10
    1274:	0e 94 f4 06 	call	0xde8	; 0xde8 <ks0108SetDot>
    1278:	8b 85       	ldd	r24, Y+11	; 0x0b
    127a:	9c 85       	ldd	r25, Y+12	; 0x0c
    127c:	97 ff       	sbrs	r25, 7
    127e:	a6 cf       	rjmp	.-180    	; 0x11cc <ks0108DrawRoundRect+0x84>
    1280:	06 96       	adiw	r24, 0x06	; 6
    1282:	84 0d       	add	r24, r4
    1284:	95 1d       	adc	r25, r5
    1286:	9c 87       	std	Y+12, r25	; 0x0c
    1288:	8b 87       	std	Y+11, r24	; 0x0b
    128a:	b1 cf       	rjmp	.-158    	; 0x11ee <ks0108DrawRoundRect+0xa6>
    128c:	1d 81       	ldd	r17, Y+5	; 0x05
    128e:	f9 84       	ldd	r15, Y+9	; 0x09
    1290:	f1 0e       	add	r15, r17
    1292:	83 2d       	mov	r24, r3
    1294:	68 85       	ldd	r22, Y+8	; 0x08
    1296:	4f 2d       	mov	r20, r15
    1298:	20 e0       	ldi	r18, 0x00	; 0
    129a:	0a 2d       	mov	r16, r10
    129c:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <ks0108FillRect>
    12a0:	83 2d       	mov	r24, r3
    12a2:	69 81       	ldd	r22, Y+1	; 0x01
    12a4:	4f 2d       	mov	r20, r15
    12a6:	20 e0       	ldi	r18, 0x00	; 0
    12a8:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <ks0108FillRect>
    12ac:	3a 85       	ldd	r19, Y+10	; 0x0a
    12ae:	13 0f       	add	r17, r19
    12b0:	8f 81       	ldd	r24, Y+7	; 0x07
    12b2:	62 2d       	mov	r22, r2
    12b4:	40 e0       	ldi	r20, 0x00	; 0
    12b6:	21 2f       	mov	r18, r17
    12b8:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <ks0108FillRect>
    12bc:	8c 81       	ldd	r24, Y+4	; 0x04
    12be:	62 2d       	mov	r22, r2
    12c0:	40 e0       	ldi	r20, 0x00	; 0
    12c2:	21 2f       	mov	r18, r17
    12c4:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <ks0108FillRect>
    12c8:	2c 96       	adiw	r28, 0x0c	; 12
    12ca:	0f b6       	in	r0, 0x3f	; 63
    12cc:	f8 94       	cli
    12ce:	de bf       	out	0x3e, r29	; 62
    12d0:	0f be       	out	0x3f, r0	; 63
    12d2:	cd bf       	out	0x3d, r28	; 61
    12d4:	cf 91       	pop	r28
    12d6:	df 91       	pop	r29
    12d8:	1f 91       	pop	r17
    12da:	0f 91       	pop	r16
    12dc:	ff 90       	pop	r15
    12de:	ef 90       	pop	r14
    12e0:	df 90       	pop	r13
    12e2:	cf 90       	pop	r12
    12e4:	bf 90       	pop	r11
    12e6:	af 90       	pop	r10
    12e8:	9f 90       	pop	r9
    12ea:	8f 90       	pop	r8
    12ec:	7f 90       	pop	r7
    12ee:	6f 90       	pop	r6
    12f0:	5f 90       	pop	r5
    12f2:	4f 90       	pop	r4
    12f4:	3f 90       	pop	r3
    12f6:	2f 90       	pop	r2
    12f8:	08 95       	ret

000012fa <ks0108DrawRect>:
    12fa:	cf 92       	push	r12
    12fc:	df 92       	push	r13
    12fe:	ef 92       	push	r14
    1300:	ff 92       	push	r15
    1302:	0f 93       	push	r16
    1304:	1f 93       	push	r17
    1306:	18 2f       	mov	r17, r24
    1308:	f6 2e       	mov	r15, r22
    130a:	d4 2e       	mov	r13, r20
    130c:	c2 2e       	mov	r12, r18
    130e:	20 e0       	ldi	r18, 0x00	; 0
    1310:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <ks0108FillRect>
    1314:	6c 2d       	mov	r22, r12
    1316:	6f 0d       	add	r22, r15
    1318:	81 2f       	mov	r24, r17
    131a:	4d 2d       	mov	r20, r13
    131c:	20 e0       	ldi	r18, 0x00	; 0
    131e:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <ks0108FillRect>
    1322:	81 2f       	mov	r24, r17
    1324:	6f 2d       	mov	r22, r15
    1326:	40 e0       	ldi	r20, 0x00	; 0
    1328:	2c 2d       	mov	r18, r12
    132a:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <ks0108FillRect>
    132e:	8d 2d       	mov	r24, r13
    1330:	81 0f       	add	r24, r17
    1332:	6f 2d       	mov	r22, r15
    1334:	40 e0       	ldi	r20, 0x00	; 0
    1336:	2c 2d       	mov	r18, r12
    1338:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <ks0108FillRect>
    133c:	1f 91       	pop	r17
    133e:	0f 91       	pop	r16
    1340:	ff 90       	pop	r15
    1342:	ef 90       	pop	r14
    1344:	df 90       	pop	r13
    1346:	cf 90       	pop	r12
    1348:	08 95       	ret

0000134a <ks0108DrawLine>:
    134a:	3f 92       	push	r3
    134c:	4f 92       	push	r4
    134e:	5f 92       	push	r5
    1350:	6f 92       	push	r6
    1352:	7f 92       	push	r7
    1354:	8f 92       	push	r8
    1356:	9f 92       	push	r9
    1358:	af 92       	push	r10
    135a:	bf 92       	push	r11
    135c:	cf 92       	push	r12
    135e:	df 92       	push	r13
    1360:	ef 92       	push	r14
    1362:	ff 92       	push	r15
    1364:	0f 93       	push	r16
    1366:	1f 93       	push	r17
    1368:	cf 93       	push	r28
    136a:	df 93       	push	r29
    136c:	a8 2e       	mov	r10, r24
    136e:	e6 2e       	mov	r14, r22
    1370:	d4 2e       	mov	r13, r20
    1372:	b2 2e       	mov	r11, r18
    1374:	30 2e       	mov	r3, r16
    1376:	84 17       	cp	r24, r20
    1378:	09 f4       	brne	.+2      	; 0x137c <ks0108DrawLine+0x32>
    137a:	da c0       	rjmp	.+436    	; 0x1530 <ks0108DrawLine+0x1e6>
    137c:	62 17       	cp	r22, r18
    137e:	09 f4       	brne	.+2      	; 0x1382 <ks0108DrawLine+0x38>
    1380:	69 c0       	rjmp	.+210    	; 0x1454 <ks0108DrawLine+0x10a>
    1382:	02 2f       	mov	r16, r18
    1384:	10 e0       	ldi	r17, 0x00	; 0
    1386:	26 2f       	mov	r18, r22
    1388:	30 e0       	ldi	r19, 0x00	; 0
    138a:	48 01       	movw	r8, r16
    138c:	82 1a       	sub	r8, r18
    138e:	93 0a       	sbc	r9, r19
    1390:	44 2e       	mov	r4, r20
    1392:	55 24       	eor	r5, r5
    1394:	e8 2f       	mov	r30, r24
    1396:	f0 e0       	ldi	r31, 0x00	; 0
    1398:	32 01       	movw	r6, r4
    139a:	6e 1a       	sub	r6, r30
    139c:	7f 0a       	sbc	r7, r31
    139e:	86 14       	cp	r8, r6
    13a0:	97 04       	cpc	r9, r7
    13a2:	0c f0       	brlt	.+2      	; 0x13a6 <ks0108DrawLine+0x5c>
    13a4:	75 c0       	rjmp	.+234    	; 0x1490 <ks0108DrawLine+0x146>
    13a6:	c9 01       	movw	r24, r18
    13a8:	80 1b       	sub	r24, r16
    13aa:	91 0b       	sbc	r25, r17
    13ac:	86 15       	cp	r24, r6
    13ae:	97 05       	cpc	r25, r7
    13b0:	0c f0       	brlt	.+2      	; 0x13b4 <ks0108DrawLine+0x6a>
    13b2:	6e c0       	rjmp	.+220    	; 0x1490 <ks0108DrawLine+0x146>
    13b4:	b6 16       	cp	r11, r22
    13b6:	08 f4       	brcc	.+2      	; 0x13ba <ks0108DrawLine+0x70>
    13b8:	e6 c0       	rjmp	.+460    	; 0x1586 <ks0108DrawLine+0x23c>
    13ba:	c2 01       	movw	r24, r4
    13bc:	2f 01       	movw	r4, r30
    13be:	fc 01       	movw	r30, r24
    13c0:	cb 2c       	mov	r12, r11
    13c2:	ce 18       	sub	r12, r14
    13c4:	cc 2d       	mov	r28, r12
    13c6:	d0 e0       	ldi	r29, 0x00	; 0
    13c8:	88 ec       	ldi	r24, 0xC8	; 200
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	9c 01       	movw	r18, r24
    13ce:	62 9e       	mul	r6, r18
    13d0:	c0 01       	movw	r24, r0
    13d2:	63 9e       	mul	r6, r19
    13d4:	90 0d       	add	r25, r0
    13d6:	72 9e       	mul	r7, r18
    13d8:	90 0d       	add	r25, r0
    13da:	11 24       	eor	r1, r1
    13dc:	be 01       	movw	r22, r28
    13de:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <__divmodhi4>
    13e2:	4b 01       	movw	r8, r22
    13e4:	4a 2d       	mov	r20, r10
    13e6:	ff 24       	eor	r15, r15
    13e8:	4e 1a       	sub	r4, r30
    13ea:	5f 0a       	sbc	r5, r31
    13ec:	15 c0       	rjmp	.+42     	; 0x1418 <ks0108DrawLine+0xce>
    13ee:	1f 5f       	subi	r17, 0xFF	; 255
    13f0:	2f 2d       	mov	r18, r15
    13f2:	2e 0d       	add	r18, r14
    13f4:	84 2f       	mov	r24, r20
    13f6:	62 2f       	mov	r22, r18
    13f8:	41 2f       	mov	r20, r17
    13fa:	03 2d       	mov	r16, r3
    13fc:	0e 94 a5 09 	call	0x134a	; 0x134a <ks0108DrawLine>
    1400:	6c 16       	cp	r6, r28
    1402:	7d 06       	cpc	r7, r29
    1404:	0c f4       	brge	.+2      	; 0x1408 <ks0108DrawLine+0xbe>
    1406:	b5 c0       	rjmp	.+362    	; 0x1572 <ks0108DrawLine+0x228>
    1408:	ad 14       	cp	r10, r13
    140a:	08 f0       	brcs	.+2      	; 0x140e <ks0108DrawLine+0xc4>
    140c:	b2 c0       	rjmp	.+356    	; 0x1572 <ks0108DrawLine+0x228>
    140e:	41 2f       	mov	r20, r17
    1410:	4f 5f       	subi	r20, 0xFF	; 255
    1412:	f3 94       	inc	r15
    1414:	cf 14       	cp	r12, r15
    1416:	50 f1       	brcs	.+84     	; 0x146c <ks0108DrawLine+0x122>
    1418:	8f 2d       	mov	r24, r15
    141a:	90 e0       	ldi	r25, 0x00	; 0
    141c:	88 9d       	mul	r24, r8
    141e:	90 01       	movw	r18, r0
    1420:	89 9d       	mul	r24, r9
    1422:	30 0d       	add	r19, r0
    1424:	98 9d       	mul	r25, r8
    1426:	30 0d       	add	r19, r0
    1428:	11 24       	eor	r1, r1
    142a:	c9 01       	movw	r24, r18
    142c:	68 ec       	ldi	r22, 0xC8	; 200
    142e:	70 e0       	ldi	r23, 0x00	; 0
    1430:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <__divmodhi4>
    1434:	16 2f       	mov	r17, r22
    1436:	1a 0d       	add	r17, r10
    1438:	c9 01       	movw	r24, r18
    143a:	68 ec       	ldi	r22, 0xC8	; 200
    143c:	70 e0       	ldi	r23, 0x00	; 0
    143e:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <__divmodhi4>
    1442:	84 36       	cpi	r24, 0x64	; 100
    1444:	91 05       	cpc	r25, r1
    1446:	9c f6       	brge	.-90     	; 0x13ee <ks0108DrawLine+0xa4>
    1448:	5f ef       	ldi	r21, 0xFF	; 255
    144a:	8d 39       	cpi	r24, 0x9D	; 157
    144c:	95 07       	cpc	r25, r21
    144e:	84 f6       	brge	.-96     	; 0x13f0 <ks0108DrawLine+0xa6>
    1450:	11 50       	subi	r17, 0x01	; 1
    1452:	ce cf       	rjmp	.-100    	; 0x13f0 <ks0108DrawLine+0xa6>
    1454:	48 17       	cp	r20, r24
    1456:	10 f4       	brcc	.+4      	; 0x145c <ks0108DrawLine+0x112>
    1458:	da 2c       	mov	r13, r10
    145a:	a4 2e       	mov	r10, r20
    145c:	da 18       	sub	r13, r10
    145e:	8a 2d       	mov	r24, r10
    1460:	6e 2d       	mov	r22, r14
    1462:	4d 2d       	mov	r20, r13
    1464:	20 e0       	ldi	r18, 0x00	; 0
    1466:	03 2d       	mov	r16, r3
    1468:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <ks0108FillRect>
    146c:	df 91       	pop	r29
    146e:	cf 91       	pop	r28
    1470:	1f 91       	pop	r17
    1472:	0f 91       	pop	r16
    1474:	ff 90       	pop	r15
    1476:	ef 90       	pop	r14
    1478:	df 90       	pop	r13
    147a:	cf 90       	pop	r12
    147c:	bf 90       	pop	r11
    147e:	af 90       	pop	r10
    1480:	9f 90       	pop	r9
    1482:	8f 90       	pop	r8
    1484:	7f 90       	pop	r7
    1486:	6f 90       	pop	r6
    1488:	5f 90       	pop	r5
    148a:	4f 90       	pop	r4
    148c:	3f 90       	pop	r3
    148e:	08 95       	ret
    1490:	da 14       	cp	r13, r10
    1492:	08 f4       	brcc	.+2      	; 0x1496 <ks0108DrawLine+0x14c>
    1494:	5a c0       	rjmp	.+180    	; 0x154a <ks0108DrawLine+0x200>
    1496:	c8 01       	movw	r24, r16
    1498:	89 01       	movw	r16, r18
    149a:	9c 01       	movw	r18, r24
    149c:	5d 2c       	mov	r5, r13
    149e:	5a 18       	sub	r5, r10
    14a0:	c5 2d       	mov	r28, r5
    14a2:	d0 e0       	ldi	r29, 0x00	; 0
    14a4:	88 ec       	ldi	r24, 0xC8	; 200
    14a6:	90 e0       	ldi	r25, 0x00	; 0
    14a8:	ac 01       	movw	r20, r24
    14aa:	84 9e       	mul	r8, r20
    14ac:	c0 01       	movw	r24, r0
    14ae:	85 9e       	mul	r8, r21
    14b0:	90 0d       	add	r25, r0
    14b2:	94 9e       	mul	r9, r20
    14b4:	90 0d       	add	r25, r0
    14b6:	11 24       	eor	r1, r1
    14b8:	be 01       	movw	r22, r28
    14ba:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <__divmodhi4>
    14be:	6b 01       	movw	r12, r22
    14c0:	ee 2d       	mov	r30, r14
    14c2:	ff 24       	eor	r15, r15
    14c4:	38 01       	movw	r6, r16
    14c6:	62 1a       	sub	r6, r18
    14c8:	73 0a       	sbc	r7, r19
    14ca:	14 c0       	rjmp	.+40     	; 0x14f4 <ks0108DrawLine+0x1aa>
    14cc:	1f 5f       	subi	r17, 0xFF	; 255
    14ce:	4f 2d       	mov	r20, r15
    14d0:	4a 0d       	add	r20, r10
    14d2:	84 2f       	mov	r24, r20
    14d4:	6e 2f       	mov	r22, r30
    14d6:	21 2f       	mov	r18, r17
    14d8:	03 2d       	mov	r16, r3
    14da:	0e 94 a5 09 	call	0x134a	; 0x134a <ks0108DrawLine>
    14de:	8c 16       	cp	r8, r28
    14e0:	9d 06       	cpc	r9, r29
    14e2:	ec f1       	brlt	.+122    	; 0x155e <ks0108DrawLine+0x214>
    14e4:	eb 14       	cp	r14, r11
    14e6:	d8 f5       	brcc	.+118    	; 0x155e <ks0108DrawLine+0x214>
    14e8:	e1 2f       	mov	r30, r17
    14ea:	ef 5f       	subi	r30, 0xFF	; 255
    14ec:	f3 94       	inc	r15
    14ee:	5f 14       	cp	r5, r15
    14f0:	08 f4       	brcc	.+2      	; 0x14f4 <ks0108DrawLine+0x1aa>
    14f2:	bc cf       	rjmp	.-136    	; 0x146c <ks0108DrawLine+0x122>
    14f4:	8f 2d       	mov	r24, r15
    14f6:	90 e0       	ldi	r25, 0x00	; 0
    14f8:	8c 9d       	mul	r24, r12
    14fa:	90 01       	movw	r18, r0
    14fc:	8d 9d       	mul	r24, r13
    14fe:	30 0d       	add	r19, r0
    1500:	9c 9d       	mul	r25, r12
    1502:	30 0d       	add	r19, r0
    1504:	11 24       	eor	r1, r1
    1506:	c9 01       	movw	r24, r18
    1508:	68 ec       	ldi	r22, 0xC8	; 200
    150a:	70 e0       	ldi	r23, 0x00	; 0
    150c:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <__divmodhi4>
    1510:	16 2f       	mov	r17, r22
    1512:	1e 0d       	add	r17, r14
    1514:	c9 01       	movw	r24, r18
    1516:	68 ec       	ldi	r22, 0xC8	; 200
    1518:	70 e0       	ldi	r23, 0x00	; 0
    151a:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <__divmodhi4>
    151e:	84 36       	cpi	r24, 0x64	; 100
    1520:	91 05       	cpc	r25, r1
    1522:	a4 f6       	brge	.-88     	; 0x14cc <ks0108DrawLine+0x182>
    1524:	5f ef       	ldi	r21, 0xFF	; 255
    1526:	8d 39       	cpi	r24, 0x9D	; 157
    1528:	95 07       	cpc	r25, r21
    152a:	8c f6       	brge	.-94     	; 0x14ce <ks0108DrawLine+0x184>
    152c:	11 50       	subi	r17, 0x01	; 1
    152e:	cf cf       	rjmp	.-98     	; 0x14ce <ks0108DrawLine+0x184>
    1530:	26 17       	cp	r18, r22
    1532:	10 f4       	brcc	.+4      	; 0x1538 <ks0108DrawLine+0x1ee>
    1534:	b6 2e       	mov	r11, r22
    1536:	e2 2e       	mov	r14, r18
    1538:	be 18       	sub	r11, r14
    153a:	8a 2d       	mov	r24, r10
    153c:	6e 2d       	mov	r22, r14
    153e:	40 e0       	ldi	r20, 0x00	; 0
    1540:	2b 2d       	mov	r18, r11
    1542:	03 2d       	mov	r16, r3
    1544:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <ks0108FillRect>
    1548:	91 cf       	rjmp	.-222    	; 0x146c <ks0108DrawLine+0x122>
    154a:	49 01       	movw	r8, r18
    154c:	80 1a       	sub	r8, r16
    154e:	91 0a       	sbc	r9, r17
    1550:	8d 2d       	mov	r24, r13
    1552:	da 2c       	mov	r13, r10
    1554:	a8 2e       	mov	r10, r24
    1556:	8b 2d       	mov	r24, r11
    1558:	be 2c       	mov	r11, r14
    155a:	e8 2e       	mov	r14, r24
    155c:	9f cf       	rjmp	.-194    	; 0x149c <ks0108DrawLine+0x152>
    155e:	6c 16       	cp	r6, r28
    1560:	7d 06       	cpc	r7, r29
    1562:	2c f0       	brlt	.+10     	; 0x156e <ks0108DrawLine+0x224>
    1564:	be 14       	cp	r11, r14
    1566:	18 f4       	brcc	.+6      	; 0x156e <ks0108DrawLine+0x224>
    1568:	e1 2f       	mov	r30, r17
    156a:	e1 50       	subi	r30, 0x01	; 1
    156c:	bf cf       	rjmp	.-130    	; 0x14ec <ks0108DrawLine+0x1a2>
    156e:	e1 2f       	mov	r30, r17
    1570:	bd cf       	rjmp	.-134    	; 0x14ec <ks0108DrawLine+0x1a2>
    1572:	4c 16       	cp	r4, r28
    1574:	5d 06       	cpc	r5, r29
    1576:	2c f0       	brlt	.+10     	; 0x1582 <ks0108DrawLine+0x238>
    1578:	da 14       	cp	r13, r10
    157a:	18 f4       	brcc	.+6      	; 0x1582 <ks0108DrawLine+0x238>
    157c:	41 2f       	mov	r20, r17
    157e:	41 50       	subi	r20, 0x01	; 1
    1580:	48 cf       	rjmp	.-368    	; 0x1412 <ks0108DrawLine+0xc8>
    1582:	41 2f       	mov	r20, r17
    1584:	46 cf       	rjmp	.-372    	; 0x1412 <ks0108DrawLine+0xc8>
    1586:	3f 01       	movw	r6, r30
    1588:	64 18       	sub	r6, r4
    158a:	75 08       	sbc	r7, r5
    158c:	da 2c       	mov	r13, r10
    158e:	a4 2e       	mov	r10, r20
    1590:	b6 2e       	mov	r11, r22
    1592:	e0 2e       	mov	r14, r16
    1594:	15 cf       	rjmp	.-470    	; 0x13c0 <ks0108DrawLine+0x76>

00001596 <BoardInit>:
    1596:	8f ef       	ldi	r24, 0xFF	; 255
    1598:	87 bb       	out	0x17, r24	; 23
    159a:	81 e0       	ldi	r24, 0x01	; 1
    159c:	0e 94 77 08 	call	0x10ee	; 0x10ee <ks0108Init>
    15a0:	86 e7       	ldi	r24, 0x76	; 118
    15a2:	90 e0       	ldi	r25, 0x00	; 0
    15a4:	64 ef       	ldi	r22, 0xF4	; 244
    15a6:	72 e0       	ldi	r23, 0x02	; 2
    15a8:	4f ef       	ldi	r20, 0xFF	; 255
    15aa:	0e 94 f7 02 	call	0x5ee	; 0x5ee <ks0108SelectFont>
    15ae:	87 e6       	ldi	r24, 0x67	; 103
    15b0:	90 e0       	ldi	r25, 0x00	; 0
    15b2:	63 e0       	ldi	r22, 0x03	; 3
    15b4:	40 e0       	ldi	r20, 0x00	; 0
    15b6:	20 e0       	ldi	r18, 0x00	; 0
    15b8:	0e 94 ea 0b 	call	0x17d4	; 0x17d4 <UartInit>
    15bc:	0e 94 12 0c 	call	0x1824	; 0x1824 <GsmInit>
    15c0:	08 95       	ret

000015c2 <UartRxEnable>:
    15c2:	fc 01       	movw	r30, r24
    15c4:	00 97       	sbiw	r24, 0x00	; 0
    15c6:	b1 f0       	breq	.+44     	; 0x15f4 <UartRxEnable+0x32>
    15c8:	f8 94       	cli
    15ca:	81 e0       	ldi	r24, 0x01	; 1
    15cc:	80 93 80 01 	sts	0x0180, r24
    15d0:	10 92 7b 01 	sts	0x017B, r1
    15d4:	f0 93 79 01 	sts	0x0179, r31
    15d8:	e0 93 78 01 	sts	0x0178, r30
    15dc:	60 93 7a 01 	sts	0x017A, r22
    15e0:	50 93 7d 01 	sts	0x017D, r21
    15e4:	40 93 7c 01 	sts	0x017C, r20
    15e8:	30 93 7f 01 	sts	0x017F, r19
    15ec:	20 93 7e 01 	sts	0x017E, r18
    15f0:	78 94       	sei
    15f2:	08 95       	ret
    15f4:	80 e0       	ldi	r24, 0x00	; 0
    15f6:	08 95       	ret

000015f8 <UartRxDisable>:
    15f8:	f8 94       	cli
    15fa:	10 92 80 01 	sts	0x0180, r1
    15fe:	10 92 7b 01 	sts	0x017B, r1
    1602:	10 92 7d 01 	sts	0x017D, r1
    1606:	10 92 7c 01 	sts	0x017C, r1
    160a:	10 92 7f 01 	sts	0x017F, r1
    160e:	10 92 7e 01 	sts	0x017E, r1
    1612:	10 92 79 01 	sts	0x0179, r1
    1616:	10 92 78 01 	sts	0x0178, r1
    161a:	78 94       	sei
    161c:	81 e0       	ldi	r24, 0x01	; 1
    161e:	08 95       	ret

00001620 <__vector_13>:
    1620:	1f 92       	push	r1
    1622:	0f 92       	push	r0
    1624:	0f b6       	in	r0, 0x3f	; 63
    1626:	0f 92       	push	r0
    1628:	11 24       	eor	r1, r1
    162a:	2f 93       	push	r18
    162c:	3f 93       	push	r19
    162e:	4f 93       	push	r20
    1630:	5f 93       	push	r21
    1632:	6f 93       	push	r22
    1634:	7f 93       	push	r23
    1636:	8f 93       	push	r24
    1638:	9f 93       	push	r25
    163a:	af 93       	push	r26
    163c:	bf 93       	push	r27
    163e:	ef 93       	push	r30
    1640:	ff 93       	push	r31
    1642:	2c b1       	in	r18, 0x0c	; 12
    1644:	80 91 80 01 	lds	r24, 0x0180
    1648:	81 30       	cpi	r24, 0x01	; 1
    164a:	89 f0       	breq	.+34     	; 0x166e <__vector_13+0x4e>
    164c:	ff 91       	pop	r31
    164e:	ef 91       	pop	r30
    1650:	bf 91       	pop	r27
    1652:	af 91       	pop	r26
    1654:	9f 91       	pop	r25
    1656:	8f 91       	pop	r24
    1658:	7f 91       	pop	r23
    165a:	6f 91       	pop	r22
    165c:	5f 91       	pop	r21
    165e:	4f 91       	pop	r20
    1660:	3f 91       	pop	r19
    1662:	2f 91       	pop	r18
    1664:	0f 90       	pop	r0
    1666:	0f be       	out	0x3f, r0	; 63
    1668:	0f 90       	pop	r0
    166a:	1f 90       	pop	r1
    166c:	18 95       	reti
    166e:	e0 91 78 01 	lds	r30, 0x0178
    1672:	f0 91 79 01 	lds	r31, 0x0179
    1676:	30 97       	sbiw	r30, 0x00	; 0
    1678:	21 f0       	breq	.+8      	; 0x1682 <__vector_13+0x62>
    167a:	90 91 7a 01 	lds	r25, 0x017A
    167e:	99 23       	and	r25, r25
    1680:	a9 f4       	brne	.+42     	; 0x16ac <__vector_13+0x8c>
    1682:	e0 91 7c 01 	lds	r30, 0x017C
    1686:	f0 91 7d 01 	lds	r31, 0x017D
    168a:	30 97       	sbiw	r30, 0x00	; 0
    168c:	f9 f2       	breq	.-66     	; 0x164c <__vector_13+0x2c>
    168e:	20 91 7e 01 	lds	r18, 0x017E
    1692:	30 91 7f 01 	lds	r19, 0x017F
    1696:	60 91 7b 01 	lds	r22, 0x017B
    169a:	40 e0       	ldi	r20, 0x00	; 0
    169c:	80 91 7a 01 	lds	r24, 0x017A
    16a0:	88 23       	and	r24, r24
    16a2:	81 f0       	breq	.+32     	; 0x16c4 <__vector_13+0xa4>
    16a4:	c9 01       	movw	r24, r18
    16a6:	70 e0       	ldi	r23, 0x00	; 0
    16a8:	09 95       	icall
    16aa:	d0 cf       	rjmp	.-96     	; 0x164c <__vector_13+0x2c>
    16ac:	80 91 7b 01 	lds	r24, 0x017B
    16b0:	e8 0f       	add	r30, r24
    16b2:	f1 1d       	adc	r31, r1
    16b4:	20 83       	st	Z, r18
    16b6:	8f 5f       	subi	r24, 0xFF	; 255
    16b8:	80 93 7b 01 	sts	0x017B, r24
    16bc:	91 50       	subi	r25, 0x01	; 1
    16be:	90 93 7a 01 	sts	0x017A, r25
    16c2:	df cf       	rjmp	.-66     	; 0x1682 <__vector_13+0x62>
    16c4:	41 e0       	ldi	r20, 0x01	; 1
    16c6:	c9 01       	movw	r24, r18
    16c8:	70 e0       	ldi	r23, 0x00	; 0
    16ca:	09 95       	icall
    16cc:	bf cf       	rjmp	.-130    	; 0x164c <__vector_13+0x2c>

000016ce <__vector_15>:
    16ce:	1f 92       	push	r1
    16d0:	0f 92       	push	r0
    16d2:	0f b6       	in	r0, 0x3f	; 63
    16d4:	0f 92       	push	r0
    16d6:	11 24       	eor	r1, r1
    16d8:	2f 93       	push	r18
    16da:	3f 93       	push	r19
    16dc:	4f 93       	push	r20
    16de:	5f 93       	push	r21
    16e0:	6f 93       	push	r22
    16e2:	7f 93       	push	r23
    16e4:	8f 93       	push	r24
    16e6:	9f 93       	push	r25
    16e8:	af 93       	push	r26
    16ea:	bf 93       	push	r27
    16ec:	ef 93       	push	r30
    16ee:	ff 93       	push	r31
    16f0:	e0 91 70 01 	lds	r30, 0x0170
    16f4:	f0 91 71 01 	lds	r31, 0x0171
    16f8:	80 81       	ld	r24, Z
    16fa:	88 23       	and	r24, r24
    16fc:	11 f5       	brne	.+68     	; 0x1742 <__vector_15+0x74>
    16fe:	e0 91 72 01 	lds	r30, 0x0172
    1702:	f0 91 73 01 	lds	r31, 0x0173
    1706:	30 97       	sbiw	r30, 0x00	; 0
    1708:	29 f0       	breq	.+10     	; 0x1714 <__vector_15+0x46>
    170a:	80 91 74 01 	lds	r24, 0x0174
    170e:	90 91 75 01 	lds	r25, 0x0175
    1712:	09 95       	icall
    1714:	80 91 76 01 	lds	r24, 0x0176
    1718:	90 91 77 01 	lds	r25, 0x0177
    171c:	0e 94 b5 12 	call	0x256a	; 0x256a <OSSemPost>
    1720:	ff 91       	pop	r31
    1722:	ef 91       	pop	r30
    1724:	bf 91       	pop	r27
    1726:	af 91       	pop	r26
    1728:	9f 91       	pop	r25
    172a:	8f 91       	pop	r24
    172c:	7f 91       	pop	r23
    172e:	6f 91       	pop	r22
    1730:	5f 91       	pop	r21
    1732:	4f 91       	pop	r20
    1734:	3f 91       	pop	r19
    1736:	2f 91       	pop	r18
    1738:	0f 90       	pop	r0
    173a:	0f be       	out	0x3f, r0	; 63
    173c:	0f 90       	pop	r0
    173e:	1f 90       	pop	r1
    1740:	18 95       	reti
    1742:	8c b9       	out	0x0c, r24	; 12
    1744:	31 96       	adiw	r30, 0x01	; 1
    1746:	f0 93 71 01 	sts	0x0171, r31
    174a:	e0 93 70 01 	sts	0x0170, r30
    174e:	e8 cf       	rjmp	.-48     	; 0x1720 <__vector_15+0x52>

00001750 <UartSendData>:
    1750:	cf 92       	push	r12
    1752:	df 92       	push	r13
    1754:	ef 92       	push	r14
    1756:	ff 92       	push	r15
    1758:	0f 93       	push	r16
    175a:	1f 93       	push	r17
    175c:	df 93       	push	r29
    175e:	cf 93       	push	r28
    1760:	0f 92       	push	r0
    1762:	cd b7       	in	r28, 0x3d	; 61
    1764:	de b7       	in	r29, 0x3e	; 62
    1766:	d8 2e       	mov	r13, r24
    1768:	c9 2e       	mov	r12, r25
    176a:	8b 01       	movw	r16, r22
    176c:	7a 01       	movw	r14, r20
    176e:	21 30       	cpi	r18, 0x01	; 1
    1770:	29 f1       	breq	.+74     	; 0x17bc <UartSendData+0x6c>
    1772:	80 91 76 01 	lds	r24, 0x0176
    1776:	90 91 77 01 	lds	r25, 0x0177
    177a:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <OSSemAccept>
    177e:	89 2b       	or	r24, r25
    1780:	d9 f0       	breq	.+54     	; 0x17b8 <UartSendData+0x68>
    1782:	10 93 73 01 	sts	0x0173, r17
    1786:	00 93 72 01 	sts	0x0172, r16
    178a:	f0 92 75 01 	sts	0x0175, r15
    178e:	e0 92 74 01 	sts	0x0174, r14
    1792:	ed 2d       	mov	r30, r13
    1794:	fc 2d       	mov	r31, r12
    1796:	81 91       	ld	r24, Z+
    1798:	8c b9       	out	0x0c, r24	; 12
    179a:	f0 93 71 01 	sts	0x0171, r31
    179e:	e0 93 70 01 	sts	0x0170, r30
    17a2:	81 e0       	ldi	r24, 0x01	; 1
    17a4:	0f 90       	pop	r0
    17a6:	cf 91       	pop	r28
    17a8:	df 91       	pop	r29
    17aa:	1f 91       	pop	r17
    17ac:	0f 91       	pop	r16
    17ae:	ff 90       	pop	r15
    17b0:	ef 90       	pop	r14
    17b2:	df 90       	pop	r13
    17b4:	cf 90       	pop	r12
    17b6:	08 95       	ret
    17b8:	80 e0       	ldi	r24, 0x00	; 0
    17ba:	f4 cf       	rjmp	.-24     	; 0x17a4 <UartSendData+0x54>
    17bc:	80 91 76 01 	lds	r24, 0x0176
    17c0:	90 91 77 01 	lds	r25, 0x0177
    17c4:	60 e0       	ldi	r22, 0x00	; 0
    17c6:	70 e0       	ldi	r23, 0x00	; 0
    17c8:	ae 01       	movw	r20, r28
    17ca:	4f 5f       	subi	r20, 0xFF	; 255
    17cc:	5f 4f       	sbci	r21, 0xFF	; 255
    17ce:	0e 94 d4 12 	call	0x25a8	; 0x25a8 <OSSemPend>
    17d2:	d7 cf       	rjmp	.-82     	; 0x1782 <UartSendData+0x32>

000017d4 <UartInit>:
    17d4:	df 92       	push	r13
    17d6:	ef 92       	push	r14
    17d8:	ff 92       	push	r15
    17da:	0f 93       	push	r16
    17dc:	1f 93       	push	r17
    17de:	d8 2e       	mov	r13, r24
    17e0:	e9 2e       	mov	r14, r25
    17e2:	16 2f       	mov	r17, r22
    17e4:	04 2f       	mov	r16, r20
    17e6:	f2 2e       	mov	r15, r18
    17e8:	81 e0       	ldi	r24, 0x01	; 1
    17ea:	90 e0       	ldi	r25, 0x00	; 0
    17ec:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <OSSemCreate>
    17f0:	90 93 77 01 	sts	0x0177, r25
    17f4:	80 93 76 01 	sts	0x0176, r24
    17f8:	10 92 80 01 	sts	0x0180, r1
    17fc:	e0 bc       	out	0x20, r14	; 32
    17fe:	d9 b8       	out	0x09, r13	; 9
    1800:	88 ed       	ldi	r24, 0xD8	; 216
    1802:	8a b9       	out	0x0a, r24	; 10
    1804:	11 0f       	add	r17, r17
    1806:	10 68       	ori	r17, 0x80	; 128
    1808:	02 95       	swap	r16
    180a:	00 7f       	andi	r16, 0xF0	; 240
    180c:	01 2b       	or	r16, r17
    180e:	ff 0c       	add	r15, r15
    1810:	ff 0c       	add	r15, r15
    1812:	ff 0c       	add	r15, r15
    1814:	f0 2a       	or	r15, r16
    1816:	f0 bc       	out	0x20, r15	; 32
    1818:	1f 91       	pop	r17
    181a:	0f 91       	pop	r16
    181c:	ff 90       	pop	r15
    181e:	ef 90       	pop	r14
    1820:	df 90       	pop	r13
    1822:	08 95       	ret

00001824 <GsmInit>:
    1824:	80 e0       	ldi	r24, 0x00	; 0
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	0e 94 18 0e 	call	0x1c30	; 0x1c30 <OSMboxCreate>
    182c:	90 93 82 02 	sts	0x0282, r25
    1830:	80 93 81 02 	sts	0x0281, r24
    1834:	81 e0       	ldi	r24, 0x01	; 1
    1836:	90 e0       	ldi	r25, 0x00	; 0
    1838:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <OSSemCreate>
    183c:	90 93 88 02 	sts	0x0288, r25
    1840:	80 93 87 02 	sts	0x0287, r24
    1844:	80 e0       	ldi	r24, 0x00	; 0
    1846:	90 e0       	ldi	r25, 0x00	; 0
    1848:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <OSSemCreate>
    184c:	90 93 84 02 	sts	0x0284, r25
    1850:	80 93 83 02 	sts	0x0283, r24
    1854:	80 e0       	ldi	r24, 0x00	; 0
    1856:	90 e0       	ldi	r25, 0x00	; 0
    1858:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <OSSemCreate>
    185c:	90 93 86 02 	sts	0x0286, r25
    1860:	80 93 85 02 	sts	0x0285, r24
    1864:	8e e7       	ldi	r24, 0x7E	; 126
    1866:	9c e0       	ldi	r25, 0x0C	; 12
    1868:	60 e0       	ldi	r22, 0x00	; 0
    186a:	70 e0       	ldi	r23, 0x00	; 0
    186c:	40 e0       	ldi	r20, 0x00	; 0
    186e:	52 e0       	ldi	r21, 0x02	; 2
    1870:	21 e0       	ldi	r18, 0x01	; 1
    1872:	0e 94 61 12 	call	0x24c2	; 0x24c2 <OSTaskCreate>
    1876:	8e e4       	ldi	r24, 0x4E	; 78
    1878:	9c e0       	ldi	r25, 0x0C	; 12
    187a:	60 e0       	ldi	r22, 0x00	; 0
    187c:	70 e0       	ldi	r23, 0x00	; 0
    187e:	40 e8       	ldi	r20, 0x80	; 128
    1880:	52 e0       	ldi	r21, 0x02	; 2
    1882:	22 e0       	ldi	r18, 0x02	; 2
    1884:	0e 94 61 12 	call	0x24c2	; 0x24c2 <OSTaskCreate>
    1888:	08 95       	ret

0000188a <GsmRxIsrCallback>:
    188a:	41 30       	cpi	r20, 0x01	; 1
    188c:	31 f0       	breq	.+12     	; 0x189a <GsmRxIsrCallback+0x10>
    188e:	80 91 83 02 	lds	r24, 0x0283
    1892:	90 91 84 02 	lds	r25, 0x0284
    1896:	0e 94 b5 12 	call	0x256a	; 0x256a <OSSemPost>
    189a:	08 95       	ret

0000189c <TaskGsmVerifyResponse>:
    189c:	ef 92       	push	r14
    189e:	ff 92       	push	r15
    18a0:	0f 93       	push	r16
    18a2:	1f 93       	push	r17
    18a4:	df 93       	push	r29
    18a6:	cf 93       	push	r28
    18a8:	00 d0       	rcall	.+0      	; 0x18aa <TaskGsmVerifyResponse+0xe>
    18aa:	cd b7       	in	r28, 0x3d	; 61
    18ac:	de b7       	in	r29, 0x3e	; 62
    18ae:	8e 01       	movw	r16, r28
    18b0:	0f 5f       	subi	r16, 0xFF	; 255
    18b2:	1f 4f       	sbci	r17, 0xFF	; 255
    18b4:	82 e0       	ldi	r24, 0x02	; 2
    18b6:	e8 2e       	mov	r14, r24
    18b8:	f1 2c       	mov	r15, r1
    18ba:	ec 0e       	add	r14, r28
    18bc:	fd 1e       	adc	r15, r29
    18be:	80 91 85 02 	lds	r24, 0x0285
    18c2:	90 91 86 02 	lds	r25, 0x0286
    18c6:	60 e0       	ldi	r22, 0x00	; 0
    18c8:	70 e0       	ldi	r23, 0x00	; 0
    18ca:	a8 01       	movw	r20, r16
    18cc:	0e 94 d4 12 	call	0x25a8	; 0x25a8 <OSSemPend>
    18d0:	e0 91 89 02 	lds	r30, 0x0289
    18d4:	f0 91 8a 02 	lds	r31, 0x028A
    18d8:	84 81       	ldd	r24, Z+4	; 0x04
    18da:	81 30       	cpi	r24, 0x01	; 1
    18dc:	81 f7       	brne	.-32     	; 0x18be <TaskGsmVerifyResponse+0x22>
    18de:	1a 82       	std	Y+2, r1	; 0x02
    18e0:	80 91 87 02 	lds	r24, 0x0287
    18e4:	90 91 88 02 	lds	r25, 0x0288
    18e8:	0e 94 b5 12 	call	0x256a	; 0x256a <OSSemPost>
    18ec:	80 91 81 02 	lds	r24, 0x0281
    18f0:	90 91 82 02 	lds	r25, 0x0282
    18f4:	b7 01       	movw	r22, r14
    18f6:	0e 94 1f 13 	call	0x263e	; 0x263e <OSMboxPost>
    18fa:	e1 cf       	rjmp	.-62     	; 0x18be <TaskGsmVerifyResponse+0x22>

000018fc <TaskGsmTimeout>:
    18fc:	bf 92       	push	r11
    18fe:	cf 92       	push	r12
    1900:	df 92       	push	r13
    1902:	ef 92       	push	r14
    1904:	ff 92       	push	r15
    1906:	0f 93       	push	r16
    1908:	1f 93       	push	r17
    190a:	df 93       	push	r29
    190c:	cf 93       	push	r28
    190e:	00 d0       	rcall	.+0      	; 0x1910 <TaskGsmTimeout+0x14>
    1910:	cd b7       	in	r28, 0x3d	; 61
    1912:	de b7       	in	r29, 0x3e	; 62
    1914:	8e 01       	movw	r16, r28
    1916:	0f 5f       	subi	r16, 0xFF	; 255
    1918:	1f 4f       	sbci	r17, 0xFF	; 255
    191a:	22 e0       	ldi	r18, 0x02	; 2
    191c:	c2 2e       	mov	r12, r18
    191e:	d1 2c       	mov	r13, r1
    1920:	cc 0e       	add	r12, r28
    1922:	dd 1e       	adc	r13, r29
    1924:	9d e3       	ldi	r25, 0x3D	; 61
    1926:	e9 2e       	mov	r14, r25
    1928:	f1 2c       	mov	r15, r1
    192a:	bb 24       	eor	r11, r11
    192c:	b3 94       	inc	r11
    192e:	80 91 83 02 	lds	r24, 0x0283
    1932:	90 91 84 02 	lds	r25, 0x0284
    1936:	60 e0       	ldi	r22, 0x00	; 0
    1938:	70 e0       	ldi	r23, 0x00	; 0
    193a:	a8 01       	movw	r20, r16
    193c:	0e 94 d4 12 	call	0x25a8	; 0x25a8 <OSSemPend>
    1940:	e0 91 89 02 	lds	r30, 0x0289
    1944:	f0 91 8a 02 	lds	r31, 0x028A
    1948:	82 81       	ldd	r24, Z+2	; 0x02
    194a:	93 81       	ldd	r25, Z+3	; 0x03
    194c:	8e 9d       	mul	r24, r14
    194e:	b0 01       	movw	r22, r0
    1950:	8f 9d       	mul	r24, r15
    1952:	70 0d       	add	r23, r0
    1954:	9e 9d       	mul	r25, r14
    1956:	70 0d       	add	r23, r0
    1958:	11 24       	eor	r1, r1
    195a:	80 91 83 02 	lds	r24, 0x0283
    195e:	90 91 84 02 	lds	r25, 0x0284
    1962:	a8 01       	movw	r20, r16
    1964:	0e 94 d4 12 	call	0x25a8	; 0x25a8 <OSSemPend>
    1968:	89 81       	ldd	r24, Y+1	; 0x01
    196a:	8a 30       	cpi	r24, 0x0A	; 10
    196c:	a9 f0       	breq	.+42     	; 0x1998 <TaskGsmTimeout+0x9c>
    196e:	80 91 83 02 	lds	r24, 0x0283
    1972:	90 91 84 02 	lds	r25, 0x0284
    1976:	6e e1       	ldi	r22, 0x1E	; 30
    1978:	70 e0       	ldi	r23, 0x00	; 0
    197a:	a8 01       	movw	r20, r16
    197c:	0e 94 d4 12 	call	0x25a8	; 0x25a8 <OSSemPend>
    1980:	89 81       	ldd	r24, Y+1	; 0x01
    1982:	8a 30       	cpi	r24, 0x0A	; 10
    1984:	a1 f7       	brne	.-24     	; 0x196e <TaskGsmTimeout+0x72>
    1986:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <UartRxDisable>
    198a:	80 91 85 02 	lds	r24, 0x0285
    198e:	90 91 86 02 	lds	r25, 0x0286
    1992:	0e 94 b5 12 	call	0x256a	; 0x256a <OSSemPost>
    1996:	cb cf       	rjmp	.-106    	; 0x192e <TaskGsmTimeout+0x32>
    1998:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <UartRxDisable>
    199c:	ba 82       	std	Y+2, r11	; 0x02
    199e:	80 91 87 02 	lds	r24, 0x0287
    19a2:	90 91 88 02 	lds	r25, 0x0288
    19a6:	0e 94 b5 12 	call	0x256a	; 0x256a <OSSemPost>
    19aa:	80 91 81 02 	lds	r24, 0x0281
    19ae:	90 91 82 02 	lds	r25, 0x0282
    19b2:	b6 01       	movw	r22, r12
    19b4:	0e 94 1f 13 	call	0x263e	; 0x263e <OSMboxPost>
    19b8:	ba cf       	rjmp	.-140    	; 0x192e <TaskGsmTimeout+0x32>

000019ba <SendAtCommand>:
    19ba:	cf 92       	push	r12
    19bc:	df 92       	push	r13
    19be:	ef 92       	push	r14
    19c0:	ff 92       	push	r15
    19c2:	0f 93       	push	r16
    19c4:	1f 93       	push	r17
    19c6:	df 93       	push	r29
    19c8:	cf 93       	push	r28
    19ca:	0f 92       	push	r0
    19cc:	cd b7       	in	r28, 0x3d	; 61
    19ce:	de b7       	in	r29, 0x3e	; 62
    19d0:	7c 01       	movw	r14, r24
    19d2:	6a 01       	movw	r12, r20
    19d4:	61 30       	cpi	r22, 0x01	; 1
    19d6:	99 f1       	breq	.+102    	; 0x1a3e <SendAtCommand+0x84>
    19d8:	80 91 87 02 	lds	r24, 0x0287
    19dc:	90 91 88 02 	lds	r25, 0x0288
    19e0:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <OSSemAccept>
    19e4:	89 2b       	or	r24, r25
    19e6:	49 f1       	breq	.+82     	; 0x1a3a <SendAtCommand+0x80>
    19e8:	8e 01       	movw	r16, r28
    19ea:	0f 5f       	subi	r16, 0xFF	; 255
    19ec:	1f 4f       	sbci	r17, 0xFF	; 255
    19ee:	f0 92 8a 02 	sts	0x028A, r15
    19f2:	e0 92 89 02 	sts	0x0289, r14
    19f6:	f7 01       	movw	r30, r14
    19f8:	80 81       	ld	r24, Z
    19fa:	91 81       	ldd	r25, Z+1	; 0x01
    19fc:	6c e2       	ldi	r22, 0x2C	; 44
    19fe:	7d e0       	ldi	r23, 0x0D	; 13
    1a00:	40 e0       	ldi	r20, 0x00	; 0
    1a02:	50 e0       	ldi	r21, 0x00	; 0
    1a04:	21 e0       	ldi	r18, 0x01	; 1
    1a06:	0e 94 a8 0b 	call	0x1750	; 0x1750 <UartSendData>
    1a0a:	80 91 81 02 	lds	r24, 0x0281
    1a0e:	90 91 82 02 	lds	r25, 0x0282
    1a12:	60 e0       	ldi	r22, 0x00	; 0
    1a14:	70 e0       	ldi	r23, 0x00	; 0
    1a16:	a8 01       	movw	r20, r16
    1a18:	0e 94 39 13 	call	0x2672	; 0x2672 <OSMboxPend>
    1a1c:	fc 01       	movw	r30, r24
    1a1e:	80 81       	ld	r24, Z
    1a20:	f6 01       	movw	r30, r12
    1a22:	80 83       	st	Z, r24
    1a24:	81 e0       	ldi	r24, 0x01	; 1
    1a26:	0f 90       	pop	r0
    1a28:	cf 91       	pop	r28
    1a2a:	df 91       	pop	r29
    1a2c:	1f 91       	pop	r17
    1a2e:	0f 91       	pop	r16
    1a30:	ff 90       	pop	r15
    1a32:	ef 90       	pop	r14
    1a34:	df 90       	pop	r13
    1a36:	cf 90       	pop	r12
    1a38:	08 95       	ret
    1a3a:	80 e0       	ldi	r24, 0x00	; 0
    1a3c:	f4 cf       	rjmp	.-24     	; 0x1a26 <SendAtCommand+0x6c>
    1a3e:	80 91 87 02 	lds	r24, 0x0287
    1a42:	90 91 88 02 	lds	r25, 0x0288
    1a46:	60 e0       	ldi	r22, 0x00	; 0
    1a48:	70 e0       	ldi	r23, 0x00	; 0
    1a4a:	8e 01       	movw	r16, r28
    1a4c:	0f 5f       	subi	r16, 0xFF	; 255
    1a4e:	1f 4f       	sbci	r17, 0xFF	; 255
    1a50:	a8 01       	movw	r20, r16
    1a52:	0e 94 d4 12 	call	0x25a8	; 0x25a8 <OSSemPend>
    1a56:	cb cf       	rjmp	.-106    	; 0x19ee <SendAtCommand+0x34>

00001a58 <CmdTxFinishedCallBack>:
    1a58:	8b e8       	ldi	r24, 0x8B	; 139
    1a5a:	92 e0       	ldi	r25, 0x02	; 2
    1a5c:	6a e0       	ldi	r22, 0x0A	; 10
    1a5e:	45 e4       	ldi	r20, 0x45	; 69
    1a60:	5c e0       	ldi	r21, 0x0C	; 12
    1a62:	20 e0       	ldi	r18, 0x00	; 0
    1a64:	30 e0       	ldi	r19, 0x00	; 0
    1a66:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <UartRxEnable>
    1a6a:	80 91 83 02 	lds	r24, 0x0283
    1a6e:	90 91 84 02 	lds	r25, 0x0284
    1a72:	0e 94 b5 12 	call	0x256a	; 0x256a <OSSemPost>
    1a76:	08 95       	ret

00001a78 <OSIntEnter>:
    1a78:	80 91 a3 03 	lds	r24, 0x03A3
    1a7c:	81 30       	cpi	r24, 0x01	; 1
    1a7e:	09 f0       	breq	.+2      	; 0x1a82 <OSIntEnter+0xa>
    1a80:	08 95       	ret
    1a82:	80 91 52 04 	lds	r24, 0x0452
    1a86:	8f 3f       	cpi	r24, 0xFF	; 255
    1a88:	d9 f3       	breq	.-10     	; 0x1a80 <OSIntEnter+0x8>
    1a8a:	8f 5f       	subi	r24, 0xFF	; 255
    1a8c:	80 93 52 04 	sts	0x0452, r24
    1a90:	08 95       	ret

00001a92 <OSSchedLock>:
    1a92:	80 91 a3 03 	lds	r24, 0x03A3
    1a96:	81 30       	cpi	r24, 0x01	; 1
    1a98:	09 f0       	breq	.+2      	; 0x1a9c <OSSchedLock+0xa>
    1a9a:	08 95       	ret
    1a9c:	f8 94       	cli
    1a9e:	80 91 a2 03 	lds	r24, 0x03A2
    1aa2:	8f 3f       	cpi	r24, 0xFF	; 255
    1aa4:	19 f0       	breq	.+6      	; 0x1aac <OSSchedLock+0x1a>
    1aa6:	8f 5f       	subi	r24, 0xFF	; 255
    1aa8:	80 93 a2 03 	sts	0x03A2, r24
    1aac:	78 94       	sei
    1aae:	08 95       	ret

00001ab0 <OSVersion>:
    1ab0:	8c ef       	ldi	r24, 0xFC	; 252
    1ab2:	90 e0       	ldi	r25, 0x00	; 0
    1ab4:	08 95       	ret

00001ab6 <OS_Dummy>:
    1ab6:	08 95       	ret

00001ab8 <OS_EventTaskRdy>:
    1ab8:	ff 92       	push	r15
    1aba:	0f 93       	push	r16
    1abc:	1f 93       	push	r17
    1abe:	cf 93       	push	r28
    1ac0:	df 93       	push	r29
    1ac2:	ec 01       	movw	r28, r24
    1ac4:	8b 01       	movw	r16, r22
    1ac6:	f4 2e       	mov	r15, r20
    1ac8:	39 81       	ldd	r19, Y+1	; 0x01
    1aca:	e3 2f       	mov	r30, r19
    1acc:	f0 e0       	ldi	r31, 0x00	; 0
    1ace:	e3 59       	subi	r30, 0x93	; 147
    1ad0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ad2:	20 81       	ld	r18, Z
    1ad4:	42 2f       	mov	r20, r18
    1ad6:	50 e0       	ldi	r21, 0x00	; 0
    1ad8:	fa 01       	movw	r30, r20
    1ada:	eb 59       	subi	r30, 0x9B	; 155
    1adc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ade:	70 81       	ld	r23, Z
    1ae0:	dc 01       	movw	r26, r24
    1ae2:	a4 0f       	add	r26, r20
    1ae4:	b5 1f       	adc	r27, r21
    1ae6:	16 96       	adiw	r26, 0x06	; 6
    1ae8:	9c 91       	ld	r25, X
    1aea:	16 97       	sbiw	r26, 0x06	; 6
    1aec:	e9 2f       	mov	r30, r25
    1aee:	f0 e0       	ldi	r31, 0x00	; 0
    1af0:	e3 59       	subi	r30, 0x93	; 147
    1af2:	ff 4f       	sbci	r31, 0xFF	; 255
    1af4:	80 81       	ld	r24, Z
    1af6:	e8 2f       	mov	r30, r24
    1af8:	f0 e0       	ldi	r31, 0x00	; 0
    1afa:	eb 59       	subi	r30, 0x9B	; 155
    1afc:	ff 4f       	sbci	r31, 0xFF	; 255
    1afe:	60 81       	ld	r22, Z
    1b00:	22 0f       	add	r18, r18
    1b02:	22 0f       	add	r18, r18
    1b04:	22 0f       	add	r18, r18
    1b06:	28 0f       	add	r18, r24
    1b08:	86 2f       	mov	r24, r22
    1b0a:	80 95       	com	r24
    1b0c:	89 23       	and	r24, r25
    1b0e:	16 96       	adiw	r26, 0x06	; 6
    1b10:	8c 93       	st	X, r24
    1b12:	88 23       	and	r24, r24
    1b14:	21 f4       	brne	.+8      	; 0x1b1e <OS_EventTaskRdy+0x66>
    1b16:	87 2f       	mov	r24, r23
    1b18:	80 95       	com	r24
    1b1a:	38 23       	and	r19, r24
    1b1c:	39 83       	std	Y+1, r19	; 0x01
    1b1e:	e2 2f       	mov	r30, r18
    1b20:	f0 e0       	ldi	r31, 0x00	; 0
    1b22:	ee 0f       	add	r30, r30
    1b24:	ff 1f       	adc	r31, r31
    1b26:	e3 50       	subi	r30, 0x03	; 3
    1b28:	fa 4f       	sbci	r31, 0xFA	; 250
    1b2a:	01 90       	ld	r0, Z+
    1b2c:	f0 81       	ld	r31, Z
    1b2e:	e0 2d       	mov	r30, r0
    1b30:	13 86       	std	Z+11, r1	; 0x0b
    1b32:	12 86       	std	Z+10, r1	; 0x0a
    1b34:	17 82       	std	Z+7, r1	; 0x07
    1b36:	16 82       	std	Z+6, r1	; 0x06
    1b38:	11 87       	std	Z+9, r17	; 0x09
    1b3a:	00 87       	std	Z+8, r16	; 0x08
    1b3c:	8f 2d       	mov	r24, r15
    1b3e:	80 95       	com	r24
    1b40:	94 85       	ldd	r25, Z+12	; 0x0c
    1b42:	89 23       	and	r24, r25
    1b44:	84 87       	std	Z+12, r24	; 0x0c
    1b46:	88 23       	and	r24, r24
    1b48:	59 f4       	brne	.+22     	; 0x1b60 <OS_EventTaskRdy+0xa8>
    1b4a:	80 91 4c 04 	lds	r24, 0x044C
    1b4e:	87 2b       	or	r24, r23
    1b50:	80 93 4c 04 	sts	0x044C, r24
    1b54:	fa 01       	movw	r30, r20
    1b56:	e3 5b       	subi	r30, 0xB3	; 179
    1b58:	fb 4f       	sbci	r31, 0xFB	; 251
    1b5a:	80 81       	ld	r24, Z
    1b5c:	68 2b       	or	r22, r24
    1b5e:	60 83       	st	Z, r22
    1b60:	82 2f       	mov	r24, r18
    1b62:	df 91       	pop	r29
    1b64:	cf 91       	pop	r28
    1b66:	1f 91       	pop	r17
    1b68:	0f 91       	pop	r16
    1b6a:	ff 90       	pop	r15
    1b6c:	08 95       	ret

00001b6e <OS_EventTaskWait>:
    1b6e:	cf 93       	push	r28
    1b70:	df 93       	push	r29
    1b72:	ec 01       	movw	r28, r24
    1b74:	a0 91 53 04 	lds	r26, 0x0453
    1b78:	b0 91 54 04 	lds	r27, 0x0454
    1b7c:	17 96       	adiw	r26, 0x07	; 7
    1b7e:	9c 93       	st	X, r25
    1b80:	8e 93       	st	-X, r24
    1b82:	16 97       	sbiw	r26, 0x06	; 6
    1b84:	1f 96       	adiw	r26, 0x0f	; 15
    1b86:	8c 91       	ld	r24, X
    1b88:	1f 97       	sbiw	r26, 0x0f	; 15
    1b8a:	48 2f       	mov	r20, r24
    1b8c:	50 e0       	ldi	r21, 0x00	; 0
    1b8e:	50 96       	adiw	r26, 0x10	; 16
    1b90:	3c 91       	ld	r19, X
    1b92:	50 97       	sbiw	r26, 0x10	; 16
    1b94:	fa 01       	movw	r30, r20
    1b96:	e3 5b       	subi	r30, 0xB3	; 179
    1b98:	fb 4f       	sbci	r31, 0xFB	; 251
    1b9a:	83 2f       	mov	r24, r19
    1b9c:	80 95       	com	r24
    1b9e:	90 81       	ld	r25, Z
    1ba0:	89 23       	and	r24, r25
    1ba2:	80 83       	st	Z, r24
    1ba4:	88 23       	and	r24, r24
    1ba6:	a9 f4       	brne	.+42     	; 0x1bd2 <OS_EventTaskWait+0x64>
    1ba8:	51 96       	adiw	r26, 0x11	; 17
    1baa:	2c 91       	ld	r18, X
    1bac:	92 2f       	mov	r25, r18
    1bae:	90 95       	com	r25
    1bb0:	80 91 4c 04 	lds	r24, 0x044C
    1bb4:	89 23       	and	r24, r25
    1bb6:	80 93 4c 04 	sts	0x044C, r24
    1bba:	fe 01       	movw	r30, r28
    1bbc:	e4 0f       	add	r30, r20
    1bbe:	f5 1f       	adc	r31, r21
    1bc0:	86 81       	ldd	r24, Z+6	; 0x06
    1bc2:	83 2b       	or	r24, r19
    1bc4:	86 83       	std	Z+6, r24	; 0x06
    1bc6:	89 81       	ldd	r24, Y+1	; 0x01
    1bc8:	82 2b       	or	r24, r18
    1bca:	89 83       	std	Y+1, r24	; 0x01
    1bcc:	df 91       	pop	r29
    1bce:	cf 91       	pop	r28
    1bd0:	08 95       	ret
    1bd2:	51 96       	adiw	r26, 0x11	; 17
    1bd4:	2c 91       	ld	r18, X
    1bd6:	f1 cf       	rjmp	.-30     	; 0x1bba <OS_EventTaskWait+0x4c>

00001bd8 <OS_EventTO>:
    1bd8:	cf 93       	push	r28
    1bda:	df 93       	push	r29
    1bdc:	ec 01       	movw	r28, r24
    1bde:	a0 91 53 04 	lds	r26, 0x0453
    1be2:	b0 91 54 04 	lds	r27, 0x0454
    1be6:	1f 96       	adiw	r26, 0x0f	; 15
    1be8:	8c 91       	ld	r24, X
    1bea:	1f 97       	sbiw	r26, 0x0f	; 15
    1bec:	fe 01       	movw	r30, r28
    1bee:	e8 0f       	add	r30, r24
    1bf0:	f1 1d       	adc	r31, r1
    1bf2:	50 96       	adiw	r26, 0x10	; 16
    1bf4:	8c 91       	ld	r24, X
    1bf6:	50 97       	sbiw	r26, 0x10	; 16
    1bf8:	80 95       	com	r24
    1bfa:	96 81       	ldd	r25, Z+6	; 0x06
    1bfc:	89 23       	and	r24, r25
    1bfe:	86 83       	std	Z+6, r24	; 0x06
    1c00:	88 23       	and	r24, r24
    1c02:	39 f4       	brne	.+14     	; 0x1c12 <OS_EventTO+0x3a>
    1c04:	51 96       	adiw	r26, 0x11	; 17
    1c06:	9c 91       	ld	r25, X
    1c08:	51 97       	sbiw	r26, 0x11	; 17
    1c0a:	90 95       	com	r25
    1c0c:	89 81       	ldd	r24, Y+1	; 0x01
    1c0e:	89 23       	and	r24, r25
    1c10:	89 83       	std	Y+1, r24	; 0x01
    1c12:	1c 96       	adiw	r26, 0x0c	; 12
    1c14:	1c 92       	st	X, r1
    1c16:	1c 97       	sbiw	r26, 0x0c	; 12
    1c18:	17 96       	adiw	r26, 0x07	; 7
    1c1a:	1c 92       	st	X, r1
    1c1c:	1e 92       	st	-X, r1
    1c1e:	16 97       	sbiw	r26, 0x06	; 6
    1c20:	df 91       	pop	r29
    1c22:	cf 91       	pop	r28
    1c24:	08 95       	ret

00001c26 <OS_EventWaitListInit>:
    1c26:	fc 01       	movw	r30, r24
    1c28:	11 82       	std	Z+1, r1	; 0x01
    1c2a:	16 82       	std	Z+6, r1	; 0x06
    1c2c:	17 82       	std	Z+7, r1	; 0x07
    1c2e:	08 95       	ret

00001c30 <OSMboxCreate>:
    1c30:	9c 01       	movw	r18, r24
    1c32:	80 91 52 04 	lds	r24, 0x0452
    1c36:	88 23       	and	r24, r24
    1c38:	d9 f4       	brne	.+54     	; 0x1c70 <OSMboxCreate+0x40>
    1c3a:	f8 94       	cli
    1c3c:	e0 91 4f 04 	lds	r30, 0x044F
    1c40:	f0 91 50 04 	lds	r31, 0x0450
    1c44:	30 97       	sbiw	r30, 0x00	; 0
    1c46:	31 f0       	breq	.+12     	; 0x1c54 <OSMboxCreate+0x24>
    1c48:	84 81       	ldd	r24, Z+4	; 0x04
    1c4a:	95 81       	ldd	r25, Z+5	; 0x05
    1c4c:	90 93 50 04 	sts	0x0450, r25
    1c50:	80 93 4f 04 	sts	0x044F, r24
    1c54:	78 94       	sei
    1c56:	30 97       	sbiw	r30, 0x00	; 0
    1c58:	49 f0       	breq	.+18     	; 0x1c6c <OSMboxCreate+0x3c>
    1c5a:	81 e0       	ldi	r24, 0x01	; 1
    1c5c:	80 83       	st	Z, r24
    1c5e:	13 82       	std	Z+3, r1	; 0x03
    1c60:	12 82       	std	Z+2, r1	; 0x02
    1c62:	35 83       	std	Z+5, r19	; 0x05
    1c64:	24 83       	std	Z+4, r18	; 0x04
    1c66:	11 82       	std	Z+1, r1	; 0x01
    1c68:	16 82       	std	Z+6, r1	; 0x06
    1c6a:	17 82       	std	Z+7, r1	; 0x07
    1c6c:	cf 01       	movw	r24, r30
    1c6e:	08 95       	ret
    1c70:	e0 e0       	ldi	r30, 0x00	; 0
    1c72:	f0 e0       	ldi	r31, 0x00	; 0
    1c74:	cf 01       	movw	r24, r30
    1c76:	08 95       	ret

00001c78 <OSMemCreate>:
    1c78:	2f 92       	push	r2
    1c7a:	3f 92       	push	r3
    1c7c:	4f 92       	push	r4
    1c7e:	5f 92       	push	r5
    1c80:	6f 92       	push	r6
    1c82:	7f 92       	push	r7
    1c84:	8f 92       	push	r8
    1c86:	9f 92       	push	r9
    1c88:	af 92       	push	r10
    1c8a:	bf 92       	push	r11
    1c8c:	cf 92       	push	r12
    1c8e:	df 92       	push	r13
    1c90:	ef 92       	push	r14
    1c92:	ff 92       	push	r15
    1c94:	0f 93       	push	r16
    1c96:	1f 93       	push	r17
    1c98:	cf 93       	push	r28
    1c9a:	df 93       	push	r29
    1c9c:	4c 01       	movw	r8, r24
    1c9e:	5a 01       	movw	r10, r20
    1ca0:	6b 01       	movw	r12, r22
    1ca2:	28 01       	movw	r4, r16
    1ca4:	39 01       	movw	r6, r18
    1ca6:	17 01       	movw	r2, r14
    1ca8:	f8 94       	cli
    1caa:	60 91 48 04 	lds	r22, 0x0448
    1cae:	70 91 49 04 	lds	r23, 0x0449
    1cb2:	61 15       	cp	r22, r1
    1cb4:	71 05       	cpc	r23, r1
    1cb6:	49 f0       	breq	.+18     	; 0x1cca <OSMemCreate+0x52>
    1cb8:	db 01       	movw	r26, r22
    1cba:	12 96       	adiw	r26, 0x02	; 2
    1cbc:	8d 91       	ld	r24, X+
    1cbe:	9c 91       	ld	r25, X
    1cc0:	13 97       	sbiw	r26, 0x03	; 3
    1cc2:	90 93 49 04 	sts	0x0449, r25
    1cc6:	80 93 48 04 	sts	0x0448, r24
    1cca:	78 94       	sei
    1ccc:	61 15       	cp	r22, r1
    1cce:	71 05       	cpc	r23, r1
    1cd0:	09 f4       	brne	.+2      	; 0x1cd4 <OSMemCreate+0x5c>
    1cd2:	66 c0       	rjmp	.+204    	; 0x1da0 <OSMemCreate+0x128>
    1cd4:	e4 01       	movw	r28, r8
    1cd6:	a6 01       	movw	r20, r12
    1cd8:	95 01       	movw	r18, r10
    1cda:	21 50       	subi	r18, 0x01	; 1
    1cdc:	30 40       	sbci	r19, 0x00	; 0
    1cde:	40 40       	sbci	r20, 0x00	; 0
    1ce0:	50 40       	sbci	r21, 0x00	; 0
    1ce2:	79 f1       	breq	.+94     	; 0x1d42 <OSMemCreate+0xca>
    1ce4:	72 01       	movw	r14, r4
    1ce6:	84 01       	movw	r16, r8
    1ce8:	04 0d       	add	r16, r4
    1cea:	15 1d       	adc	r17, r5
    1cec:	f8 01       	movw	r30, r16
    1cee:	80 e0       	ldi	r24, 0x00	; 0
    1cf0:	90 e0       	ldi	r25, 0x00	; 0
    1cf2:	a0 e0       	ldi	r26, 0x00	; 0
    1cf4:	b0 e0       	ldi	r27, 0x00	; 0
    1cf6:	f9 83       	std	Y+1, r31	; 0x01
    1cf8:	e8 83       	st	Y, r30
    1cfa:	ef 01       	movw	r28, r30
    1cfc:	ee 0d       	add	r30, r14
    1cfe:	ff 1d       	adc	r31, r15
    1d00:	01 96       	adiw	r24, 0x01	; 1
    1d02:	a1 1d       	adc	r26, r1
    1d04:	b1 1d       	adc	r27, r1
    1d06:	82 17       	cp	r24, r18
    1d08:	93 07       	cpc	r25, r19
    1d0a:	a4 07       	cpc	r26, r20
    1d0c:	b5 07       	cpc	r27, r21
    1d0e:	98 f3       	brcs	.-26     	; 0x1cf6 <OSMemCreate+0x7e>
    1d10:	8e ef       	ldi	r24, 0xFE	; 254
    1d12:	9f ef       	ldi	r25, 0xFF	; 255
    1d14:	af ef       	ldi	r26, 0xFF	; 255
    1d16:	bf ef       	ldi	r27, 0xFF	; 255
    1d18:	a8 0e       	add	r10, r24
    1d1a:	b9 1e       	adc	r11, r25
    1d1c:	ca 1e       	adc	r12, r26
    1d1e:	db 1e       	adc	r13, r27
    1d20:	ea 9c       	mul	r14, r10
    1d22:	e0 01       	movw	r28, r0
    1d24:	eb 9c       	mul	r14, r11
    1d26:	d0 0d       	add	r29, r0
    1d28:	fa 9c       	mul	r15, r10
    1d2a:	d0 0d       	add	r29, r0
    1d2c:	11 24       	eor	r1, r1
    1d2e:	82 e0       	ldi	r24, 0x02	; 2
    1d30:	90 e0       	ldi	r25, 0x00	; 0
    1d32:	a0 e0       	ldi	r26, 0x00	; 0
    1d34:	b0 e0       	ldi	r27, 0x00	; 0
    1d36:	a8 0e       	add	r10, r24
    1d38:	b9 1e       	adc	r11, r25
    1d3a:	ca 1e       	adc	r12, r26
    1d3c:	db 1e       	adc	r13, r27
    1d3e:	c0 0f       	add	r28, r16
    1d40:	d1 1f       	adc	r29, r17
    1d42:	19 82       	std	Y+1, r1	; 0x01
    1d44:	18 82       	st	Y, r1
    1d46:	db 01       	movw	r26, r22
    1d48:	11 96       	adiw	r26, 0x01	; 1
    1d4a:	9c 92       	st	X, r9
    1d4c:	8e 92       	st	-X, r8
    1d4e:	13 96       	adiw	r26, 0x03	; 3
    1d50:	9c 92       	st	X, r9
    1d52:	8e 92       	st	-X, r8
    1d54:	12 97       	sbiw	r26, 0x02	; 2
    1d56:	fb 01       	movw	r30, r22
    1d58:	a4 86       	std	Z+12, r10	; 0x0c
    1d5a:	b5 86       	std	Z+13, r11	; 0x0d
    1d5c:	c6 86       	std	Z+14, r12	; 0x0e
    1d5e:	d7 86       	std	Z+15, r13	; 0x0f
    1d60:	18 96       	adiw	r26, 0x08	; 8
    1d62:	ad 92       	st	X+, r10
    1d64:	bd 92       	st	X+, r11
    1d66:	cd 92       	st	X+, r12
    1d68:	dc 92       	st	X, r13
    1d6a:	1b 97       	sbiw	r26, 0x0b	; 11
    1d6c:	44 82       	std	Z+4, r4	; 0x04
    1d6e:	55 82       	std	Z+5, r5	; 0x05
    1d70:	66 82       	std	Z+6, r6	; 0x06
    1d72:	77 82       	std	Z+7, r7	; 0x07
    1d74:	d1 01       	movw	r26, r2
    1d76:	1c 92       	st	X, r1
    1d78:	cb 01       	movw	r24, r22
    1d7a:	df 91       	pop	r29
    1d7c:	cf 91       	pop	r28
    1d7e:	1f 91       	pop	r17
    1d80:	0f 91       	pop	r16
    1d82:	ff 90       	pop	r15
    1d84:	ef 90       	pop	r14
    1d86:	df 90       	pop	r13
    1d88:	cf 90       	pop	r12
    1d8a:	bf 90       	pop	r11
    1d8c:	af 90       	pop	r10
    1d8e:	9f 90       	pop	r9
    1d90:	8f 90       	pop	r8
    1d92:	7f 90       	pop	r7
    1d94:	6f 90       	pop	r6
    1d96:	5f 90       	pop	r5
    1d98:	4f 90       	pop	r4
    1d9a:	3f 90       	pop	r3
    1d9c:	2f 90       	pop	r2
    1d9e:	08 95       	ret
    1da0:	8e e6       	ldi	r24, 0x6E	; 110
    1da2:	f1 01       	movw	r30, r2
    1da4:	80 83       	st	Z, r24
    1da6:	e8 cf       	rjmp	.-48     	; 0x1d78 <OSMemCreate+0x100>

00001da8 <OSMemGet>:
    1da8:	cf 93       	push	r28
    1daa:	df 93       	push	r29
    1dac:	fc 01       	movw	r30, r24
    1dae:	eb 01       	movw	r28, r22
    1db0:	f8 94       	cli
    1db2:	24 85       	ldd	r18, Z+12	; 0x0c
    1db4:	35 85       	ldd	r19, Z+13	; 0x0d
    1db6:	46 85       	ldd	r20, Z+14	; 0x0e
    1db8:	57 85       	ldd	r21, Z+15	; 0x0f
    1dba:	21 15       	cp	r18, r1
    1dbc:	31 05       	cpc	r19, r1
    1dbe:	41 05       	cpc	r20, r1
    1dc0:	51 05       	cpc	r21, r1
    1dc2:	a9 f0       	breq	.+42     	; 0x1dee <OSMemGet+0x46>
    1dc4:	a2 81       	ldd	r26, Z+2	; 0x02
    1dc6:	b3 81       	ldd	r27, Z+3	; 0x03
    1dc8:	8d 91       	ld	r24, X+
    1dca:	9c 91       	ld	r25, X
    1dcc:	11 97       	sbiw	r26, 0x01	; 1
    1dce:	93 83       	std	Z+3, r25	; 0x03
    1dd0:	82 83       	std	Z+2, r24	; 0x02
    1dd2:	21 50       	subi	r18, 0x01	; 1
    1dd4:	30 40       	sbci	r19, 0x00	; 0
    1dd6:	40 40       	sbci	r20, 0x00	; 0
    1dd8:	50 40       	sbci	r21, 0x00	; 0
    1dda:	24 87       	std	Z+12, r18	; 0x0c
    1ddc:	35 87       	std	Z+13, r19	; 0x0d
    1dde:	46 87       	std	Z+14, r20	; 0x0e
    1de0:	57 87       	std	Z+15, r21	; 0x0f
    1de2:	78 94       	sei
    1de4:	18 82       	st	Y, r1
    1de6:	cd 01       	movw	r24, r26
    1de8:	df 91       	pop	r29
    1dea:	cf 91       	pop	r28
    1dec:	08 95       	ret
    1dee:	78 94       	sei
    1df0:	81 e7       	ldi	r24, 0x71	; 113
    1df2:	88 83       	st	Y, r24
    1df4:	a0 e0       	ldi	r26, 0x00	; 0
    1df6:	b0 e0       	ldi	r27, 0x00	; 0
    1df8:	f6 cf       	rjmp	.-20     	; 0x1de6 <OSMemGet+0x3e>

00001dfa <OSMemPut>:
    1dfa:	cf 93       	push	r28
    1dfc:	df 93       	push	r29
    1dfe:	fc 01       	movw	r30, r24
    1e00:	eb 01       	movw	r28, r22
    1e02:	f8 94       	cli
    1e04:	24 85       	ldd	r18, Z+12	; 0x0c
    1e06:	35 85       	ldd	r19, Z+13	; 0x0d
    1e08:	46 85       	ldd	r20, Z+14	; 0x0e
    1e0a:	57 85       	ldd	r21, Z+15	; 0x0f
    1e0c:	80 85       	ldd	r24, Z+8	; 0x08
    1e0e:	91 85       	ldd	r25, Z+9	; 0x09
    1e10:	a2 85       	ldd	r26, Z+10	; 0x0a
    1e12:	b3 85       	ldd	r27, Z+11	; 0x0b
    1e14:	28 17       	cp	r18, r24
    1e16:	39 07       	cpc	r19, r25
    1e18:	4a 07       	cpc	r20, r26
    1e1a:	5b 07       	cpc	r21, r27
    1e1c:	28 f0       	brcs	.+10     	; 0x1e28 <OSMemPut+0x2e>
    1e1e:	78 94       	sei
    1e20:	82 e7       	ldi	r24, 0x72	; 114
    1e22:	df 91       	pop	r29
    1e24:	cf 91       	pop	r28
    1e26:	08 95       	ret
    1e28:	82 81       	ldd	r24, Z+2	; 0x02
    1e2a:	93 81       	ldd	r25, Z+3	; 0x03
    1e2c:	99 83       	std	Y+1, r25	; 0x01
    1e2e:	88 83       	st	Y, r24
    1e30:	73 83       	std	Z+3, r23	; 0x03
    1e32:	62 83       	std	Z+2, r22	; 0x02
    1e34:	2f 5f       	subi	r18, 0xFF	; 255
    1e36:	3f 4f       	sbci	r19, 0xFF	; 255
    1e38:	4f 4f       	sbci	r20, 0xFF	; 255
    1e3a:	5f 4f       	sbci	r21, 0xFF	; 255
    1e3c:	24 87       	std	Z+12, r18	; 0x0c
    1e3e:	35 87       	std	Z+13, r19	; 0x0d
    1e40:	46 87       	std	Z+14, r20	; 0x0e
    1e42:	57 87       	std	Z+15, r21	; 0x0f
    1e44:	78 94       	sei
    1e46:	80 e0       	ldi	r24, 0x00	; 0
    1e48:	df 91       	pop	r29
    1e4a:	cf 91       	pop	r28
    1e4c:	08 95       	ret

00001e4e <OS_MemInit>:
    1e4e:	8c ea       	ldi	r24, 0xAC	; 172
    1e50:	93 e0       	ldi	r25, 0x03	; 3
    1e52:	90 93 49 04 	sts	0x0449, r25
    1e56:	80 93 48 04 	sts	0x0448, r24
    1e5a:	10 92 af 03 	sts	0x03AF, r1
    1e5e:	10 92 ae 03 	sts	0x03AE, r1
    1e62:	10 92 ad 03 	sts	0x03AD, r1
    1e66:	10 92 ac 03 	sts	0x03AC, r1
    1e6a:	10 92 b8 03 	sts	0x03B8, r1
    1e6e:	10 92 b9 03 	sts	0x03B9, r1
    1e72:	10 92 ba 03 	sts	0x03BA, r1
    1e76:	10 92 bb 03 	sts	0x03BB, r1
    1e7a:	10 92 b4 03 	sts	0x03B4, r1
    1e7e:	10 92 b5 03 	sts	0x03B5, r1
    1e82:	10 92 b6 03 	sts	0x03B6, r1
    1e86:	10 92 b7 03 	sts	0x03B7, r1
    1e8a:	10 92 b0 03 	sts	0x03B0, r1
    1e8e:	10 92 b1 03 	sts	0x03B1, r1
    1e92:	10 92 b2 03 	sts	0x03B2, r1
    1e96:	10 92 b3 03 	sts	0x03B3, r1
    1e9a:	08 95       	ret

00001e9c <OSSemAccept>:
    1e9c:	fc 01       	movw	r30, r24
    1e9e:	f8 94       	cli
    1ea0:	22 81       	ldd	r18, Z+2	; 0x02
    1ea2:	33 81       	ldd	r19, Z+3	; 0x03
    1ea4:	21 15       	cp	r18, r1
    1ea6:	31 05       	cpc	r19, r1
    1ea8:	31 f0       	breq	.+12     	; 0x1eb6 <OSSemAccept+0x1a>
    1eaa:	21 50       	subi	r18, 0x01	; 1
    1eac:	30 40       	sbci	r19, 0x00	; 0
    1eae:	33 83       	std	Z+3, r19	; 0x03
    1eb0:	22 83       	std	Z+2, r18	; 0x02
    1eb2:	2f 5f       	subi	r18, 0xFF	; 255
    1eb4:	3f 4f       	sbci	r19, 0xFF	; 255
    1eb6:	78 94       	sei
    1eb8:	c9 01       	movw	r24, r18
    1eba:	08 95       	ret

00001ebc <OSSemCreate>:
    1ebc:	9c 01       	movw	r18, r24
    1ebe:	80 91 52 04 	lds	r24, 0x0452
    1ec2:	88 23       	and	r24, r24
    1ec4:	d9 f4       	brne	.+54     	; 0x1efc <OSSemCreate+0x40>
    1ec6:	f8 94       	cli
    1ec8:	e0 91 4f 04 	lds	r30, 0x044F
    1ecc:	f0 91 50 04 	lds	r31, 0x0450
    1ed0:	30 97       	sbiw	r30, 0x00	; 0
    1ed2:	31 f0       	breq	.+12     	; 0x1ee0 <OSSemCreate+0x24>
    1ed4:	84 81       	ldd	r24, Z+4	; 0x04
    1ed6:	95 81       	ldd	r25, Z+5	; 0x05
    1ed8:	90 93 50 04 	sts	0x0450, r25
    1edc:	80 93 4f 04 	sts	0x044F, r24
    1ee0:	78 94       	sei
    1ee2:	30 97       	sbiw	r30, 0x00	; 0
    1ee4:	49 f0       	breq	.+18     	; 0x1ef8 <OSSemCreate+0x3c>
    1ee6:	83 e0       	ldi	r24, 0x03	; 3
    1ee8:	80 83       	st	Z, r24
    1eea:	33 83       	std	Z+3, r19	; 0x03
    1eec:	22 83       	std	Z+2, r18	; 0x02
    1eee:	15 82       	std	Z+5, r1	; 0x05
    1ef0:	14 82       	std	Z+4, r1	; 0x04
    1ef2:	11 82       	std	Z+1, r1	; 0x01
    1ef4:	16 82       	std	Z+6, r1	; 0x06
    1ef6:	17 82       	std	Z+7, r1	; 0x07
    1ef8:	cf 01       	movw	r24, r30
    1efa:	08 95       	ret
    1efc:	e0 e0       	ldi	r30, 0x00	; 0
    1efe:	f0 e0       	ldi	r31, 0x00	; 0
    1f00:	cf 01       	movw	r24, r30
    1f02:	08 95       	ret

00001f04 <OSTaskDelReq>:
    1f04:	8f 3f       	cpi	r24, 0xFF	; 255
    1f06:	89 f0       	breq	.+34     	; 0x1f2a <OSTaskDelReq+0x26>
    1f08:	f8 94       	cli
    1f0a:	e8 2f       	mov	r30, r24
    1f0c:	f0 e0       	ldi	r31, 0x00	; 0
    1f0e:	ee 0f       	add	r30, r30
    1f10:	ff 1f       	adc	r31, r31
    1f12:	e3 50       	subi	r30, 0x03	; 3
    1f14:	fa 4f       	sbci	r31, 0xFA	; 250
    1f16:	01 90       	ld	r0, Z+
    1f18:	f0 81       	ld	r31, Z
    1f1a:	e0 2d       	mov	r30, r0
    1f1c:	30 97       	sbiw	r30, 0x00	; 0
    1f1e:	69 f0       	breq	.+26     	; 0x1f3a <OSTaskDelReq+0x36>
    1f20:	8e e3       	ldi	r24, 0x3E	; 62
    1f22:	82 8b       	std	Z+18, r24	; 0x12
    1f24:	80 e0       	ldi	r24, 0x00	; 0
    1f26:	78 94       	sei
    1f28:	08 95       	ret
    1f2a:	f8 94       	cli
    1f2c:	e0 91 53 04 	lds	r30, 0x0453
    1f30:	f0 91 54 04 	lds	r31, 0x0454
    1f34:	82 89       	ldd	r24, Z+18	; 0x12
    1f36:	78 94       	sei
    1f38:	08 95       	ret
    1f3a:	8b e0       	ldi	r24, 0x0B	; 11
    1f3c:	78 94       	sei
    1f3e:	08 95       	ret

00001f40 <OS_TCBInit>:
    1f40:	1f 93       	push	r17
    1f42:	cf 93       	push	r28
    1f44:	df 93       	push	r29
    1f46:	18 2f       	mov	r17, r24
    1f48:	f8 94       	cli
    1f4a:	c0 91 44 04 	lds	r28, 0x0444
    1f4e:	d0 91 45 04 	lds	r29, 0x0445
    1f52:	20 97       	sbiw	r28, 0x00	; 0
    1f54:	09 f4       	brne	.+2      	; 0x1f58 <OS_TCBInit+0x18>
    1f56:	57 c0       	rjmp	.+174    	; 0x2006 <OS_TCBInit+0xc6>
    1f58:	8a 81       	ldd	r24, Y+2	; 0x02
    1f5a:	9b 81       	ldd	r25, Y+3	; 0x03
    1f5c:	90 93 45 04 	sts	0x0445, r25
    1f60:	80 93 44 04 	sts	0x0444, r24
    1f64:	78 94       	sei
    1f66:	79 83       	std	Y+1, r23	; 0x01
    1f68:	68 83       	st	Y, r22
    1f6a:	1d 87       	std	Y+13, r17	; 0x0d
    1f6c:	1c 86       	std	Y+12, r1	; 0x0c
    1f6e:	1b 86       	std	Y+11, r1	; 0x0b
    1f70:	1a 86       	std	Y+10, r1	; 0x0a
    1f72:	1a 8a       	std	Y+18, r1	; 0x12
    1f74:	e1 2f       	mov	r30, r17
    1f76:	e6 95       	lsr	r30
    1f78:	e6 95       	lsr	r30
    1f7a:	e6 95       	lsr	r30
    1f7c:	ef 87       	std	Y+15, r30	; 0x0f
    1f7e:	f0 e0       	ldi	r31, 0x00	; 0
    1f80:	eb 59       	subi	r30, 0x9B	; 155
    1f82:	ff 4f       	sbci	r31, 0xFF	; 255
    1f84:	80 81       	ld	r24, Z
    1f86:	89 8b       	std	Y+17, r24	; 0x11
    1f88:	e1 2f       	mov	r30, r17
    1f8a:	e7 70       	andi	r30, 0x07	; 7
    1f8c:	ee 87       	std	Y+14, r30	; 0x0e
    1f8e:	f0 e0       	ldi	r31, 0x00	; 0
    1f90:	eb 59       	subi	r30, 0x9B	; 155
    1f92:	ff 4f       	sbci	r31, 0xFF	; 255
    1f94:	80 81       	ld	r24, Z
    1f96:	88 8b       	std	Y+16, r24	; 0x10
    1f98:	1f 82       	std	Y+7, r1	; 0x07
    1f9a:	1e 82       	std	Y+6, r1	; 0x06
    1f9c:	19 86       	std	Y+9, r1	; 0x09
    1f9e:	18 86       	std	Y+8, r1	; 0x08
    1fa0:	ce 01       	movw	r24, r28
    1fa2:	0e 94 14 15 	call	0x2a28	; 0x2a28 <OSTCBInitHook>
    1fa6:	ce 01       	movw	r24, r28
    1fa8:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <OSTaskCreateHook>
    1fac:	f8 94       	cli
    1fae:	e1 2f       	mov	r30, r17
    1fb0:	f0 e0       	ldi	r31, 0x00	; 0
    1fb2:	ee 0f       	add	r30, r30
    1fb4:	ff 1f       	adc	r31, r31
    1fb6:	e3 50       	subi	r30, 0x03	; 3
    1fb8:	fa 4f       	sbci	r31, 0xFA	; 250
    1fba:	d1 83       	std	Z+1, r29	; 0x01
    1fbc:	c0 83       	st	Z, r28
    1fbe:	e0 91 aa 03 	lds	r30, 0x03AA
    1fc2:	f0 91 ab 03 	lds	r31, 0x03AB
    1fc6:	fb 83       	std	Y+3, r31	; 0x03
    1fc8:	ea 83       	std	Y+2, r30	; 0x02
    1fca:	1d 82       	std	Y+5, r1	; 0x05
    1fcc:	1c 82       	std	Y+4, r1	; 0x04
    1fce:	30 97       	sbiw	r30, 0x00	; 0
    1fd0:	11 f0       	breq	.+4      	; 0x1fd6 <OS_TCBInit+0x96>
    1fd2:	d5 83       	std	Z+5, r29	; 0x05
    1fd4:	c4 83       	std	Z+4, r28	; 0x04
    1fd6:	d0 93 ab 03 	sts	0x03AB, r29
    1fda:	c0 93 aa 03 	sts	0x03AA, r28
    1fde:	80 91 4c 04 	lds	r24, 0x044C
    1fe2:	99 89       	ldd	r25, Y+17	; 0x11
    1fe4:	89 2b       	or	r24, r25
    1fe6:	80 93 4c 04 	sts	0x044C, r24
    1fea:	ef 85       	ldd	r30, Y+15	; 0x0f
    1fec:	f0 e0       	ldi	r31, 0x00	; 0
    1fee:	e3 5b       	subi	r30, 0xB3	; 179
    1ff0:	fb 4f       	sbci	r31, 0xFB	; 251
    1ff2:	80 81       	ld	r24, Z
    1ff4:	98 89       	ldd	r25, Y+16	; 0x10
    1ff6:	89 2b       	or	r24, r25
    1ff8:	80 83       	st	Z, r24
    1ffa:	78 94       	sei
    1ffc:	80 e0       	ldi	r24, 0x00	; 0
    1ffe:	df 91       	pop	r29
    2000:	cf 91       	pop	r28
    2002:	1f 91       	pop	r17
    2004:	08 95       	ret
    2006:	78 94       	sei
    2008:	86 e4       	ldi	r24, 0x46	; 70
    200a:	df 91       	pop	r29
    200c:	cf 91       	pop	r28
    200e:	1f 91       	pop	r17
    2010:	08 95       	ret

00002012 <OS_TaskIdle>:
    2012:	f8 94       	cli
    2014:	80 91 a4 03 	lds	r24, 0x03A4
    2018:	90 91 a5 03 	lds	r25, 0x03A5
    201c:	a0 91 a6 03 	lds	r26, 0x03A6
    2020:	b0 91 a7 03 	lds	r27, 0x03A7
    2024:	01 96       	adiw	r24, 0x01	; 1
    2026:	a1 1d       	adc	r26, r1
    2028:	b1 1d       	adc	r27, r1
    202a:	80 93 a4 03 	sts	0x03A4, r24
    202e:	90 93 a5 03 	sts	0x03A5, r25
    2032:	a0 93 a6 03 	sts	0x03A6, r26
    2036:	b0 93 a7 03 	sts	0x03A7, r27
    203a:	78 94       	sei
    203c:	0e 94 13 15 	call	0x2a26	; 0x2a26 <OSTaskIdleHook>
    2040:	e8 cf       	rjmp	.-48     	; 0x2012 <OS_TaskIdle>

00002042 <OS_Sched>:
    2042:	f8 94       	cli
    2044:	80 91 52 04 	lds	r24, 0x0452
    2048:	88 23       	and	r24, r24
    204a:	09 f0       	breq	.+2      	; 0x204e <OS_Sched+0xc>
    204c:	3f c0       	rjmp	.+126    	; 0x20cc <OS_Sched+0x8a>
    204e:	80 91 a2 03 	lds	r24, 0x03A2
    2052:	88 23       	and	r24, r24
    2054:	d9 f5       	brne	.+118    	; 0x20cc <OS_Sched+0x8a>
    2056:	e0 91 4c 04 	lds	r30, 0x044C
    205a:	f0 e0       	ldi	r31, 0x00	; 0
    205c:	e3 59       	subi	r30, 0x93	; 147
    205e:	ff 4f       	sbci	r31, 0xFF	; 255
    2060:	80 81       	ld	r24, Z
    2062:	e8 2f       	mov	r30, r24
    2064:	f0 e0       	ldi	r31, 0x00	; 0
    2066:	e3 5b       	subi	r30, 0xB3	; 179
    2068:	fb 4f       	sbci	r31, 0xFB	; 251
    206a:	e0 81       	ld	r30, Z
    206c:	f0 e0       	ldi	r31, 0x00	; 0
    206e:	e3 59       	subi	r30, 0x93	; 147
    2070:	ff 4f       	sbci	r31, 0xFF	; 255
    2072:	98 2f       	mov	r25, r24
    2074:	99 0f       	add	r25, r25
    2076:	99 0f       	add	r25, r25
    2078:	99 0f       	add	r25, r25
    207a:	80 81       	ld	r24, Z
    207c:	98 0f       	add	r25, r24
    207e:	90 93 a8 03 	sts	0x03A8, r25
    2082:	80 91 a9 03 	lds	r24, 0x03A9
    2086:	98 17       	cp	r25, r24
    2088:	09 f1       	breq	.+66     	; 0x20cc <OS_Sched+0x8a>
    208a:	e9 2f       	mov	r30, r25
    208c:	f0 e0       	ldi	r31, 0x00	; 0
    208e:	ee 0f       	add	r30, r30
    2090:	ff 1f       	adc	r31, r31
    2092:	e3 50       	subi	r30, 0x03	; 3
    2094:	fa 4f       	sbci	r31, 0xFA	; 250
    2096:	80 81       	ld	r24, Z
    2098:	91 81       	ldd	r25, Z+1	; 0x01
    209a:	90 93 4b 04 	sts	0x044B, r25
    209e:	80 93 4a 04 	sts	0x044A, r24
    20a2:	80 91 3c 04 	lds	r24, 0x043C
    20a6:	90 91 3d 04 	lds	r25, 0x043D
    20aa:	a0 91 3e 04 	lds	r26, 0x043E
    20ae:	b0 91 3f 04 	lds	r27, 0x043F
    20b2:	01 96       	adiw	r24, 0x01	; 1
    20b4:	a1 1d       	adc	r26, r1
    20b6:	b1 1d       	adc	r27, r1
    20b8:	80 93 3c 04 	sts	0x043C, r24
    20bc:	90 93 3d 04 	sts	0x043D, r25
    20c0:	a0 93 3e 04 	sts	0x043E, r26
    20c4:	b0 93 3f 04 	sts	0x043F, r27
    20c8:	0e 94 47 15 	call	0x2a8e	; 0x2a8e <OSCtxSw>
    20cc:	78 94       	sei
    20ce:	08 95       	ret

000020d0 <OSTimeDly>:
    20d0:	9c 01       	movw	r18, r24
    20d2:	00 97       	sbiw	r24, 0x00	; 0
    20d4:	21 f1       	breq	.+72     	; 0x211e <OSTimeDly+0x4e>
    20d6:	f8 94       	cli
    20d8:	a0 91 53 04 	lds	r26, 0x0453
    20dc:	b0 91 54 04 	lds	r27, 0x0454
    20e0:	1f 96       	adiw	r26, 0x0f	; 15
    20e2:	ec 91       	ld	r30, X
    20e4:	1f 97       	sbiw	r26, 0x0f	; 15
    20e6:	f0 e0       	ldi	r31, 0x00	; 0
    20e8:	e3 5b       	subi	r30, 0xB3	; 179
    20ea:	fb 4f       	sbci	r31, 0xFB	; 251
    20ec:	50 96       	adiw	r26, 0x10	; 16
    20ee:	8c 91       	ld	r24, X
    20f0:	50 97       	sbiw	r26, 0x10	; 16
    20f2:	80 95       	com	r24
    20f4:	90 81       	ld	r25, Z
    20f6:	89 23       	and	r24, r25
    20f8:	80 83       	st	Z, r24
    20fa:	88 23       	and	r24, r24
    20fc:	49 f4       	brne	.+18     	; 0x2110 <OSTimeDly+0x40>
    20fe:	51 96       	adiw	r26, 0x11	; 17
    2100:	9c 91       	ld	r25, X
    2102:	51 97       	sbiw	r26, 0x11	; 17
    2104:	90 95       	com	r25
    2106:	80 91 4c 04 	lds	r24, 0x044C
    210a:	89 23       	and	r24, r25
    210c:	80 93 4c 04 	sts	0x044C, r24
    2110:	1b 96       	adiw	r26, 0x0b	; 11
    2112:	3c 93       	st	X, r19
    2114:	2e 93       	st	-X, r18
    2116:	1a 97       	sbiw	r26, 0x0a	; 10
    2118:	78 94       	sei
    211a:	0e 94 21 10 	call	0x2042	; 0x2042 <OS_Sched>
    211e:	08 95       	ret

00002120 <OSTimeDlyHMSM>:
    2120:	8f 92       	push	r8
    2122:	9f 92       	push	r9
    2124:	af 92       	push	r10
    2126:	bf 92       	push	r11
    2128:	cf 92       	push	r12
    212a:	df 92       	push	r13
    212c:	ef 92       	push	r14
    212e:	ff 92       	push	r15
    2130:	0f 93       	push	r16
    2132:	1f 93       	push	r17
    2134:	cf 93       	push	r28
    2136:	df 93       	push	r29
    2138:	88 2e       	mov	r8, r24
    213a:	16 2f       	mov	r17, r22
    213c:	94 2e       	mov	r9, r20
    213e:	88 23       	and	r24, r24
    2140:	c9 f0       	breq	.+50     	; 0x2174 <OSTimeDlyHMSM+0x54>
    2142:	1c 33       	cpi	r17, 0x3C	; 60
    2144:	00 f5       	brcc	.+64     	; 0x2186 <OSTimeDlyHMSM+0x66>
    2146:	8b e3       	ldi	r24, 0x3B	; 59
    2148:	89 15       	cp	r24, r9
    214a:	90 f0       	brcs	.+36     	; 0x2170 <OSTimeDlyHMSM+0x50>
    214c:	93 e0       	ldi	r25, 0x03	; 3
    214e:	28 3e       	cpi	r18, 0xE8	; 232
    2150:	39 07       	cpc	r19, r25
    2152:	d8 f0       	brcs	.+54     	; 0x218a <OSTimeDlyHMSM+0x6a>
    2154:	83 e5       	ldi	r24, 0x53	; 83
    2156:	df 91       	pop	r29
    2158:	cf 91       	pop	r28
    215a:	1f 91       	pop	r17
    215c:	0f 91       	pop	r16
    215e:	ff 90       	pop	r15
    2160:	ef 90       	pop	r14
    2162:	df 90       	pop	r13
    2164:	cf 90       	pop	r12
    2166:	bf 90       	pop	r11
    2168:	af 90       	pop	r10
    216a:	9f 90       	pop	r9
    216c:	8f 90       	pop	r8
    216e:	08 95       	ret
    2170:	82 e5       	ldi	r24, 0x52	; 82
    2172:	f1 cf       	rjmp	.-30     	; 0x2156 <OSTimeDlyHMSM+0x36>
    2174:	66 23       	and	r22, r22
    2176:	29 f7       	brne	.-54     	; 0x2142 <OSTimeDlyHMSM+0x22>
    2178:	44 23       	and	r20, r20
    217a:	29 f7       	brne	.-54     	; 0x2146 <OSTimeDlyHMSM+0x26>
    217c:	21 15       	cp	r18, r1
    217e:	31 05       	cpc	r19, r1
    2180:	29 f7       	brne	.-54     	; 0x214c <OSTimeDlyHMSM+0x2c>
    2182:	84 e5       	ldi	r24, 0x54	; 84
    2184:	e8 cf       	rjmp	.-48     	; 0x2156 <OSTimeDlyHMSM+0x36>
    2186:	81 e5       	ldi	r24, 0x51	; 81
    2188:	e6 cf       	rjmp	.-52     	; 0x2156 <OSTimeDlyHMSM+0x36>
    218a:	b9 01       	movw	r22, r18
    218c:	80 e0       	ldi	r24, 0x00	; 0
    218e:	90 e0       	ldi	r25, 0x00	; 0
    2190:	2d e3       	ldi	r18, 0x3D	; 61
    2192:	30 e0       	ldi	r19, 0x00	; 0
    2194:	40 e0       	ldi	r20, 0x00	; 0
    2196:	50 e0       	ldi	r21, 0x00	; 0
    2198:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <__mulsi3>
    219c:	68 51       	subi	r22, 0x18	; 24
    219e:	7e 4f       	sbci	r23, 0xFE	; 254
    21a0:	8f 4f       	sbci	r24, 0xFF	; 255
    21a2:	9f 4f       	sbci	r25, 0xFF	; 255
    21a4:	28 ee       	ldi	r18, 0xE8	; 232
    21a6:	33 e0       	ldi	r19, 0x03	; 3
    21a8:	40 e0       	ldi	r20, 0x00	; 0
    21aa:	50 e0       	ldi	r21, 0x00	; 0
    21ac:	0e 94 6c 16 	call	0x2cd8	; 0x2cd8 <__udivmodsi4>
    21b0:	59 01       	movw	r10, r18
    21b2:	6a 01       	movw	r12, r20
    21b4:	61 2f       	mov	r22, r17
    21b6:	70 e0       	ldi	r23, 0x00	; 0
    21b8:	80 e0       	ldi	r24, 0x00	; 0
    21ba:	90 e0       	ldi	r25, 0x00	; 0
    21bc:	2c e3       	ldi	r18, 0x3C	; 60
    21be:	30 e0       	ldi	r19, 0x00	; 0
    21c0:	40 e0       	ldi	r20, 0x00	; 0
    21c2:	50 e0       	ldi	r21, 0x00	; 0
    21c4:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <__mulsi3>
    21c8:	7b 01       	movw	r14, r22
    21ca:	8c 01       	movw	r16, r24
    21cc:	e9 0c       	add	r14, r9
    21ce:	f1 1c       	adc	r15, r1
    21d0:	01 1d       	adc	r16, r1
    21d2:	11 1d       	adc	r17, r1
    21d4:	68 2d       	mov	r22, r8
    21d6:	70 e0       	ldi	r23, 0x00	; 0
    21d8:	80 e0       	ldi	r24, 0x00	; 0
    21da:	90 e0       	ldi	r25, 0x00	; 0
    21dc:	20 e1       	ldi	r18, 0x10	; 16
    21de:	3e e0       	ldi	r19, 0x0E	; 14
    21e0:	40 e0       	ldi	r20, 0x00	; 0
    21e2:	50 e0       	ldi	r21, 0x00	; 0
    21e4:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <__mulsi3>
    21e8:	e6 0e       	add	r14, r22
    21ea:	f7 1e       	adc	r15, r23
    21ec:	08 1f       	adc	r16, r24
    21ee:	19 1f       	adc	r17, r25
    21f0:	c8 01       	movw	r24, r16
    21f2:	b7 01       	movw	r22, r14
    21f4:	2d e3       	ldi	r18, 0x3D	; 61
    21f6:	30 e0       	ldi	r19, 0x00	; 0
    21f8:	40 e0       	ldi	r20, 0x00	; 0
    21fa:	50 e0       	ldi	r21, 0x00	; 0
    21fc:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <__mulsi3>
    2200:	a6 0e       	add	r10, r22
    2202:	b7 1e       	adc	r11, r23
    2204:	c8 1e       	adc	r12, r24
    2206:	d9 1e       	adc	r13, r25
    2208:	76 01       	movw	r14, r12
    220a:	00 27       	eor	r16, r16
    220c:	11 27       	eor	r17, r17
    220e:	e7 01       	movw	r28, r14
    2210:	8f ef       	ldi	r24, 0xFF	; 255
    2212:	9f ef       	ldi	r25, 0xFF	; 255
    2214:	a0 e0       	ldi	r26, 0x00	; 0
    2216:	b0 e0       	ldi	r27, 0x00	; 0
    2218:	a8 22       	and	r10, r24
    221a:	b9 22       	and	r11, r25
    221c:	ca 22       	and	r12, r26
    221e:	db 22       	and	r13, r27
    2220:	c5 01       	movw	r24, r10
    2222:	0e 94 68 10 	call	0x20d0	; 0x20d0 <OSTimeDly>
    2226:	ef 28       	or	r14, r15
    2228:	51 f0       	breq	.+20     	; 0x223e <OSTimeDlyHMSM+0x11e>
    222a:	80 e0       	ldi	r24, 0x00	; 0
    222c:	90 e8       	ldi	r25, 0x80	; 128
    222e:	0e 94 68 10 	call	0x20d0	; 0x20d0 <OSTimeDly>
    2232:	80 e0       	ldi	r24, 0x00	; 0
    2234:	90 e8       	ldi	r25, 0x80	; 128
    2236:	0e 94 68 10 	call	0x20d0	; 0x20d0 <OSTimeDly>
    223a:	21 97       	sbiw	r28, 0x01	; 1
    223c:	b1 f7       	brne	.-20     	; 0x222a <OSTimeDlyHMSM+0x10a>
    223e:	80 e0       	ldi	r24, 0x00	; 0
    2240:	8a cf       	rjmp	.-236    	; 0x2156 <OSTimeDlyHMSM+0x36>

00002242 <OS_TaskStat>:
    2242:	df 92       	push	r13
    2244:	ef 92       	push	r14
    2246:	ff 92       	push	r15
    2248:	0f 93       	push	r16
    224a:	1f 93       	push	r17
    224c:	80 91 fc 05 	lds	r24, 0x05FC
    2250:	88 23       	and	r24, r24
    2252:	41 f4       	brne	.+16     	; 0x2264 <OS_TaskStat+0x22>
    2254:	8a e7       	ldi	r24, 0x7A	; 122
    2256:	90 e0       	ldi	r25, 0x00	; 0
    2258:	0e 94 68 10 	call	0x20d0	; 0x20d0 <OSTimeDly>
    225c:	80 91 fc 05 	lds	r24, 0x05FC
    2260:	88 23       	and	r24, r24
    2262:	c1 f3       	breq	.-16     	; 0x2254 <OS_TaskStat+0x12>
    2264:	60 91 40 04 	lds	r22, 0x0440
    2268:	70 91 41 04 	lds	r23, 0x0441
    226c:	80 91 42 04 	lds	r24, 0x0442
    2270:	90 91 43 04 	lds	r25, 0x0443
    2274:	24 e6       	ldi	r18, 0x64	; 100
    2276:	30 e0       	ldi	r19, 0x00	; 0
    2278:	40 e0       	ldi	r20, 0x00	; 0
    227a:	50 e0       	ldi	r21, 0x00	; 0
    227c:	0e 94 6c 16 	call	0x2cd8	; 0x2cd8 <__udivmodsi4>
    2280:	c9 01       	movw	r24, r18
    2282:	da 01       	movw	r26, r20
    2284:	7c 01       	movw	r14, r24
    2286:	8d 01       	movw	r16, r26
    2288:	54 e6       	ldi	r21, 0x64	; 100
    228a:	d5 2e       	mov	r13, r21
    228c:	10 c0       	rjmp	.+32     	; 0x22ae <OS_TaskStat+0x6c>
    228e:	a8 01       	movw	r20, r16
    2290:	97 01       	movw	r18, r14
    2292:	0e 94 6c 16 	call	0x2cd8	; 0x2cd8 <__udivmodsi4>
    2296:	8d 2d       	mov	r24, r13
    2298:	82 1b       	sub	r24, r18
    229a:	87 fd       	sbrc	r24, 7
    229c:	44 c0       	rjmp	.+136    	; 0x2326 <OS_TaskStat+0xe4>
    229e:	80 93 46 04 	sts	0x0446, r24
    22a2:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <OSTaskStatHook>
    22a6:	8d e3       	ldi	r24, 0x3D	; 61
    22a8:	90 e0       	ldi	r25, 0x00	; 0
    22aa:	0e 94 68 10 	call	0x20d0	; 0x20d0 <OSTimeDly>
    22ae:	f8 94       	cli
    22b0:	80 91 a4 03 	lds	r24, 0x03A4
    22b4:	90 91 a5 03 	lds	r25, 0x03A5
    22b8:	a0 91 a6 03 	lds	r26, 0x03A6
    22bc:	b0 91 a7 03 	lds	r27, 0x03A7
    22c0:	80 93 17 06 	sts	0x0617, r24
    22c4:	90 93 18 06 	sts	0x0618, r25
    22c8:	a0 93 19 06 	sts	0x0619, r26
    22cc:	b0 93 1a 06 	sts	0x061A, r27
    22d0:	60 91 a4 03 	lds	r22, 0x03A4
    22d4:	70 91 a5 03 	lds	r23, 0x03A5
    22d8:	80 91 a6 03 	lds	r24, 0x03A6
    22dc:	90 91 a7 03 	lds	r25, 0x03A7
    22e0:	10 92 a4 03 	sts	0x03A4, r1
    22e4:	10 92 a5 03 	sts	0x03A5, r1
    22e8:	10 92 a6 03 	sts	0x03A6, r1
    22ec:	10 92 a7 03 	sts	0x03A7, r1
    22f0:	78 94       	sei
    22f2:	e1 14       	cp	r14, r1
    22f4:	f1 04       	cpc	r15, r1
    22f6:	01 05       	cpc	r16, r1
    22f8:	11 05       	cpc	r17, r1
    22fa:	49 f6       	brne	.-110    	; 0x228e <OS_TaskStat+0x4c>
    22fc:	10 92 46 04 	sts	0x0446, r1
    2300:	60 91 40 04 	lds	r22, 0x0440
    2304:	70 91 41 04 	lds	r23, 0x0441
    2308:	80 91 42 04 	lds	r24, 0x0442
    230c:	90 91 43 04 	lds	r25, 0x0443
    2310:	24 e6       	ldi	r18, 0x64	; 100
    2312:	30 e0       	ldi	r19, 0x00	; 0
    2314:	40 e0       	ldi	r20, 0x00	; 0
    2316:	50 e0       	ldi	r21, 0x00	; 0
    2318:	0e 94 6c 16 	call	0x2cd8	; 0x2cd8 <__udivmodsi4>
    231c:	c9 01       	movw	r24, r18
    231e:	da 01       	movw	r26, r20
    2320:	7c 01       	movw	r14, r24
    2322:	8d 01       	movw	r16, r26
    2324:	be cf       	rjmp	.-132    	; 0x22a2 <OS_TaskStat+0x60>
    2326:	10 92 46 04 	sts	0x0446, r1
    232a:	bb cf       	rjmp	.-138    	; 0x22a2 <OS_TaskStat+0x60>

0000232c <OSStatInit>:
    232c:	82 e0       	ldi	r24, 0x02	; 2
    232e:	90 e0       	ldi	r25, 0x00	; 0
    2330:	0e 94 68 10 	call	0x20d0	; 0x20d0 <OSTimeDly>
    2334:	f8 94       	cli
    2336:	10 92 a4 03 	sts	0x03A4, r1
    233a:	10 92 a5 03 	sts	0x03A5, r1
    233e:	10 92 a6 03 	sts	0x03A6, r1
    2342:	10 92 a7 03 	sts	0x03A7, r1
    2346:	78 94       	sei
    2348:	8d e3       	ldi	r24, 0x3D	; 61
    234a:	90 e0       	ldi	r25, 0x00	; 0
    234c:	0e 94 68 10 	call	0x20d0	; 0x20d0 <OSTimeDly>
    2350:	f8 94       	cli
    2352:	80 91 a4 03 	lds	r24, 0x03A4
    2356:	90 91 a5 03 	lds	r25, 0x03A5
    235a:	a0 91 a6 03 	lds	r26, 0x03A6
    235e:	b0 91 a7 03 	lds	r27, 0x03A7
    2362:	80 93 40 04 	sts	0x0440, r24
    2366:	90 93 41 04 	sts	0x0441, r25
    236a:	a0 93 42 04 	sts	0x0442, r26
    236e:	b0 93 43 04 	sts	0x0443, r27
    2372:	81 e0       	ldi	r24, 0x01	; 1
    2374:	80 93 fc 05 	sts	0x05FC, r24
    2378:	78 94       	sei
    237a:	08 95       	ret

0000237c <OSTaskDel>:
    237c:	0f 93       	push	r16
    237e:	1f 93       	push	r17
    2380:	cf 93       	push	r28
    2382:	df 93       	push	r29
    2384:	e8 2f       	mov	r30, r24
    2386:	80 91 52 04 	lds	r24, 0x0452
    238a:	88 23       	and	r24, r24
    238c:	09 f0       	breq	.+2      	; 0x2390 <OSTaskDel+0x14>
    238e:	68 c0       	rjmp	.+208    	; 0x2460 <OSTaskDel+0xe4>
    2390:	f8 94       	cli
    2392:	ef 3f       	cpi	r30, 0xFF	; 255
    2394:	09 f4       	brne	.+2      	; 0x2398 <OSTaskDel+0x1c>
    2396:	7f c0       	rjmp	.+254    	; 0x2496 <OSTaskDel+0x11a>
    2398:	0e 2f       	mov	r16, r30
    239a:	10 e0       	ldi	r17, 0x00	; 0
    239c:	00 0f       	add	r16, r16
    239e:	11 1f       	adc	r17, r17
    23a0:	f8 01       	movw	r30, r16
    23a2:	e3 50       	subi	r30, 0x03	; 3
    23a4:	fa 4f       	sbci	r31, 0xFA	; 250
    23a6:	c0 81       	ld	r28, Z
    23a8:	d1 81       	ldd	r29, Z+1	; 0x01
    23aa:	20 97       	sbiw	r28, 0x00	; 0
    23ac:	09 f4       	brne	.+2      	; 0x23b0 <OSTaskDel+0x34>
    23ae:	79 c0       	rjmp	.+242    	; 0x24a2 <OSTaskDel+0x126>
    23b0:	8f 85       	ldd	r24, Y+15	; 0x0f
    23b2:	48 2f       	mov	r20, r24
    23b4:	50 e0       	ldi	r21, 0x00	; 0
    23b6:	28 89       	ldd	r18, Y+16	; 0x10
    23b8:	20 95       	com	r18
    23ba:	fa 01       	movw	r30, r20
    23bc:	e3 5b       	subi	r30, 0xB3	; 179
    23be:	fb 4f       	sbci	r31, 0xFB	; 251
    23c0:	80 81       	ld	r24, Z
    23c2:	82 23       	and	r24, r18
    23c4:	80 83       	st	Z, r24
    23c6:	88 23       	and	r24, r24
    23c8:	09 f4       	brne	.+2      	; 0x23cc <OSTaskDel+0x50>
    23ca:	54 c0       	rjmp	.+168    	; 0x2474 <OSTaskDel+0xf8>
    23cc:	ae 81       	ldd	r26, Y+6	; 0x06
    23ce:	bf 81       	ldd	r27, Y+7	; 0x07
    23d0:	10 97       	sbiw	r26, 0x00	; 0
    23d2:	49 f0       	breq	.+18     	; 0x23e6 <OSTaskDel+0x6a>
    23d4:	fd 01       	movw	r30, r26
    23d6:	e4 0f       	add	r30, r20
    23d8:	f5 1f       	adc	r31, r21
    23da:	86 81       	ldd	r24, Z+6	; 0x06
    23dc:	82 23       	and	r24, r18
    23de:	86 83       	std	Z+6, r24	; 0x06
    23e0:	88 23       	and	r24, r24
    23e2:	09 f4       	brne	.+2      	; 0x23e6 <OSTaskDel+0x6a>
    23e4:	4f c0       	rjmp	.+158    	; 0x2484 <OSTaskDel+0x108>
    23e6:	1b 86       	std	Y+11, r1	; 0x0b
    23e8:	1a 86       	std	Y+10, r1	; 0x0a
    23ea:	1c 86       	std	Y+12, r1	; 0x0c
    23ec:	80 91 a2 03 	lds	r24, 0x03A2
    23f0:	8f 3f       	cpi	r24, 0xFF	; 255
    23f2:	19 f0       	breq	.+6      	; 0x23fa <OSTaskDel+0x7e>
    23f4:	8f 5f       	subi	r24, 0xFF	; 255
    23f6:	80 93 a2 03 	sts	0x03A2, r24
    23fa:	78 94       	sei
    23fc:	f8 94       	cli
    23fe:	88 23       	and	r24, r24
    2400:	a9 f5       	brne	.+106    	; 0x246c <OSTaskDel+0xf0>
    2402:	ce 01       	movw	r24, r28
    2404:	0e 94 0d 15 	call	0x2a1a	; 0x2a1a <OSTaskDelHook>
    2408:	80 91 47 04 	lds	r24, 0x0447
    240c:	81 50       	subi	r24, 0x01	; 1
    240e:	80 93 47 04 	sts	0x0447, r24
    2412:	03 50       	subi	r16, 0x03	; 3
    2414:	1a 4f       	sbci	r17, 0xFA	; 250
    2416:	f8 01       	movw	r30, r16
    2418:	11 82       	std	Z+1, r1	; 0x01
    241a:	10 82       	st	Z, r1
    241c:	ac 81       	ldd	r26, Y+4	; 0x04
    241e:	bd 81       	ldd	r27, Y+5	; 0x05
    2420:	10 97       	sbiw	r26, 0x00	; 0
    2422:	09 f4       	brne	.+2      	; 0x2426 <OSTaskDel+0xaa>
    2424:	45 c0       	rjmp	.+138    	; 0x24b0 <OSTaskDel+0x134>
    2426:	8a 81       	ldd	r24, Y+2	; 0x02
    2428:	9b 81       	ldd	r25, Y+3	; 0x03
    242a:	13 96       	adiw	r26, 0x03	; 3
    242c:	9c 93       	st	X, r25
    242e:	8e 93       	st	-X, r24
    2430:	12 97       	sbiw	r26, 0x02	; 2
    2432:	ea 81       	ldd	r30, Y+2	; 0x02
    2434:	fb 81       	ldd	r31, Y+3	; 0x03
    2436:	b5 83       	std	Z+5, r27	; 0x05
    2438:	a4 83       	std	Z+4, r26	; 0x04
    243a:	80 91 44 04 	lds	r24, 0x0444
    243e:	90 91 45 04 	lds	r25, 0x0445
    2442:	9b 83       	std	Y+3, r25	; 0x03
    2444:	8a 83       	std	Y+2, r24	; 0x02
    2446:	d0 93 45 04 	sts	0x0445, r29
    244a:	c0 93 44 04 	sts	0x0444, r28
    244e:	78 94       	sei
    2450:	0e 94 21 10 	call	0x2042	; 0x2042 <OS_Sched>
    2454:	80 e0       	ldi	r24, 0x00	; 0
    2456:	df 91       	pop	r29
    2458:	cf 91       	pop	r28
    245a:	1f 91       	pop	r17
    245c:	0f 91       	pop	r16
    245e:	08 95       	ret
    2460:	8f e3       	ldi	r24, 0x3F	; 63
    2462:	df 91       	pop	r29
    2464:	cf 91       	pop	r28
    2466:	1f 91       	pop	r17
    2468:	0f 91       	pop	r16
    246a:	08 95       	ret
    246c:	81 50       	subi	r24, 0x01	; 1
    246e:	80 93 a2 03 	sts	0x03A2, r24
    2472:	c7 cf       	rjmp	.-114    	; 0x2402 <OSTaskDel+0x86>
    2474:	99 89       	ldd	r25, Y+17	; 0x11
    2476:	90 95       	com	r25
    2478:	80 91 4c 04 	lds	r24, 0x044C
    247c:	89 23       	and	r24, r25
    247e:	80 93 4c 04 	sts	0x044C, r24
    2482:	a4 cf       	rjmp	.-184    	; 0x23cc <OSTaskDel+0x50>
    2484:	99 89       	ldd	r25, Y+17	; 0x11
    2486:	90 95       	com	r25
    2488:	11 96       	adiw	r26, 0x01	; 1
    248a:	8c 91       	ld	r24, X
    248c:	11 97       	sbiw	r26, 0x01	; 1
    248e:	89 23       	and	r24, r25
    2490:	11 96       	adiw	r26, 0x01	; 1
    2492:	8c 93       	st	X, r24
    2494:	a8 cf       	rjmp	.-176    	; 0x23e6 <OSTaskDel+0x6a>
    2496:	e0 91 53 04 	lds	r30, 0x0453
    249a:	f0 91 54 04 	lds	r31, 0x0454
    249e:	e5 85       	ldd	r30, Z+13	; 0x0d
    24a0:	7b cf       	rjmp	.-266    	; 0x2398 <OSTaskDel+0x1c>
    24a2:	78 94       	sei
    24a4:	8c e3       	ldi	r24, 0x3C	; 60
    24a6:	df 91       	pop	r29
    24a8:	cf 91       	pop	r28
    24aa:	1f 91       	pop	r17
    24ac:	0f 91       	pop	r16
    24ae:	08 95       	ret
    24b0:	ea 81       	ldd	r30, Y+2	; 0x02
    24b2:	fb 81       	ldd	r31, Y+3	; 0x03
    24b4:	15 82       	std	Z+5, r1	; 0x05
    24b6:	14 82       	std	Z+4, r1	; 0x04
    24b8:	f0 93 ab 03 	sts	0x03AB, r31
    24bc:	e0 93 aa 03 	sts	0x03AA, r30
    24c0:	bc cf       	rjmp	.-136    	; 0x243a <OSTaskDel+0xbe>

000024c2 <OSTaskCreate>:
    24c2:	af 92       	push	r10
    24c4:	bf 92       	push	r11
    24c6:	cf 92       	push	r12
    24c8:	df 92       	push	r13
    24ca:	ef 92       	push	r14
    24cc:	ff 92       	push	r15
    24ce:	0f 93       	push	r16
    24d0:	1f 93       	push	r17
    24d2:	cf 93       	push	r28
    24d4:	df 93       	push	r29
    24d6:	fc 01       	movw	r30, r24
    24d8:	12 2f       	mov	r17, r18
    24da:	f8 94       	cli
    24dc:	c2 2f       	mov	r28, r18
    24de:	d0 e0       	ldi	r29, 0x00	; 0
    24e0:	cc 0f       	add	r28, r28
    24e2:	dd 1f       	adc	r29, r29
    24e4:	c3 50       	subi	r28, 0x03	; 3
    24e6:	da 4f       	sbci	r29, 0xFA	; 250
    24e8:	88 81       	ld	r24, Y
    24ea:	99 81       	ldd	r25, Y+1	; 0x01
    24ec:	89 2b       	or	r24, r25
    24ee:	71 f0       	breq	.+28     	; 0x250c <OSTaskCreate+0x4a>
    24f0:	78 94       	sei
    24f2:	18 e2       	ldi	r17, 0x28	; 40
    24f4:	81 2f       	mov	r24, r17
    24f6:	df 91       	pop	r29
    24f8:	cf 91       	pop	r28
    24fa:	1f 91       	pop	r17
    24fc:	0f 91       	pop	r16
    24fe:	ff 90       	pop	r15
    2500:	ef 90       	pop	r14
    2502:	df 90       	pop	r13
    2504:	cf 90       	pop	r12
    2506:	bf 90       	pop	r11
    2508:	af 90       	pop	r10
    250a:	08 95       	ret
    250c:	81 e0       	ldi	r24, 0x01	; 1
    250e:	90 e0       	ldi	r25, 0x00	; 0
    2510:	99 83       	std	Y+1, r25	; 0x01
    2512:	88 83       	st	Y, r24
    2514:	78 94       	sei
    2516:	cf 01       	movw	r24, r30
    2518:	20 e0       	ldi	r18, 0x00	; 0
    251a:	30 e0       	ldi	r19, 0x00	; 0
    251c:	0e 94 e4 14 	call	0x29c8	; 0x29c8 <OSTaskStkInit>
    2520:	bc 01       	movw	r22, r24
    2522:	81 2f       	mov	r24, r17
    2524:	40 e0       	ldi	r20, 0x00	; 0
    2526:	50 e0       	ldi	r21, 0x00	; 0
    2528:	20 e0       	ldi	r18, 0x00	; 0
    252a:	30 e0       	ldi	r19, 0x00	; 0
    252c:	ee 24       	eor	r14, r14
    252e:	ff 24       	eor	r15, r15
    2530:	87 01       	movw	r16, r14
    2532:	cc 24       	eor	r12, r12
    2534:	dd 24       	eor	r13, r13
    2536:	aa 24       	eor	r10, r10
    2538:	bb 24       	eor	r11, r11
    253a:	0e 94 a0 0f 	call	0x1f40	; 0x1f40 <OS_TCBInit>
    253e:	18 2f       	mov	r17, r24
    2540:	88 23       	and	r24, r24
    2542:	71 f4       	brne	.+28     	; 0x2560 <OSTaskCreate+0x9e>
    2544:	f8 94       	cli
    2546:	80 91 47 04 	lds	r24, 0x0447
    254a:	8f 5f       	subi	r24, 0xFF	; 255
    254c:	80 93 47 04 	sts	0x0447, r24
    2550:	78 94       	sei
    2552:	80 91 a3 03 	lds	r24, 0x03A3
    2556:	81 30       	cpi	r24, 0x01	; 1
    2558:	69 f6       	brne	.-102    	; 0x24f4 <OSTaskCreate+0x32>
    255a:	0e 94 21 10 	call	0x2042	; 0x2042 <OS_Sched>
    255e:	ca cf       	rjmp	.-108    	; 0x24f4 <OSTaskCreate+0x32>
    2560:	f8 94       	cli
    2562:	19 82       	std	Y+1, r1	; 0x01
    2564:	18 82       	st	Y, r1
    2566:	78 94       	sei
    2568:	c5 cf       	rjmp	.-118    	; 0x24f4 <OSTaskCreate+0x32>

0000256a <OSSemPost>:
    256a:	fc 01       	movw	r30, r24
    256c:	f8 94       	cli
    256e:	81 81       	ldd	r24, Z+1	; 0x01
    2570:	88 23       	and	r24, r24
    2572:	79 f4       	brne	.+30     	; 0x2592 <OSSemPost+0x28>
    2574:	82 81       	ldd	r24, Z+2	; 0x02
    2576:	93 81       	ldd	r25, Z+3	; 0x03
    2578:	2f ef       	ldi	r18, 0xFF	; 255
    257a:	8f 3f       	cpi	r24, 0xFF	; 255
    257c:	92 07       	cpc	r25, r18
    257e:	31 f0       	breq	.+12     	; 0x258c <OSSemPost+0x22>
    2580:	01 96       	adiw	r24, 0x01	; 1
    2582:	93 83       	std	Z+3, r25	; 0x03
    2584:	82 83       	std	Z+2, r24	; 0x02
    2586:	78 94       	sei
    2588:	80 e0       	ldi	r24, 0x00	; 0
    258a:	08 95       	ret
    258c:	78 94       	sei
    258e:	82 e3       	ldi	r24, 0x32	; 50
    2590:	08 95       	ret
    2592:	cf 01       	movw	r24, r30
    2594:	60 e0       	ldi	r22, 0x00	; 0
    2596:	70 e0       	ldi	r23, 0x00	; 0
    2598:	41 e0       	ldi	r20, 0x01	; 1
    259a:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <OS_EventTaskRdy>
    259e:	78 94       	sei
    25a0:	0e 94 21 10 	call	0x2042	; 0x2042 <OS_Sched>
    25a4:	80 e0       	ldi	r24, 0x00	; 0
    25a6:	08 95       	ret

000025a8 <OSSemPend>:
    25a8:	0f 93       	push	r16
    25aa:	1f 93       	push	r17
    25ac:	cf 93       	push	r28
    25ae:	df 93       	push	r29
    25b0:	ec 01       	movw	r28, r24
    25b2:	8a 01       	movw	r16, r20
    25b4:	80 91 52 04 	lds	r24, 0x0452
    25b8:	88 23       	and	r24, r24
    25ba:	81 f4       	brne	.+32     	; 0x25dc <OSSemPend+0x34>
    25bc:	f8 94       	cli
    25be:	8a 81       	ldd	r24, Y+2	; 0x02
    25c0:	9b 81       	ldd	r25, Y+3	; 0x03
    25c2:	00 97       	sbiw	r24, 0x00	; 0
    25c4:	99 f0       	breq	.+38     	; 0x25ec <OSSemPend+0x44>
    25c6:	01 97       	sbiw	r24, 0x01	; 1
    25c8:	9b 83       	std	Y+3, r25	; 0x03
    25ca:	8a 83       	std	Y+2, r24	; 0x02
    25cc:	78 94       	sei
    25ce:	fa 01       	movw	r30, r20
    25d0:	10 82       	st	Z, r1
    25d2:	df 91       	pop	r29
    25d4:	cf 91       	pop	r28
    25d6:	1f 91       	pop	r17
    25d8:	0f 91       	pop	r16
    25da:	08 95       	ret
    25dc:	82 e0       	ldi	r24, 0x02	; 2
    25de:	fa 01       	movw	r30, r20
    25e0:	80 83       	st	Z, r24
    25e2:	df 91       	pop	r29
    25e4:	cf 91       	pop	r28
    25e6:	1f 91       	pop	r17
    25e8:	0f 91       	pop	r16
    25ea:	08 95       	ret
    25ec:	e0 91 53 04 	lds	r30, 0x0453
    25f0:	f0 91 54 04 	lds	r31, 0x0454
    25f4:	84 85       	ldd	r24, Z+12	; 0x0c
    25f6:	81 60       	ori	r24, 0x01	; 1
    25f8:	84 87       	std	Z+12, r24	; 0x0c
    25fa:	73 87       	std	Z+11, r23	; 0x0b
    25fc:	62 87       	std	Z+10, r22	; 0x0a
    25fe:	ce 01       	movw	r24, r28
    2600:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <OS_EventTaskWait>
    2604:	78 94       	sei
    2606:	0e 94 21 10 	call	0x2042	; 0x2042 <OS_Sched>
    260a:	f8 94       	cli
    260c:	e0 91 53 04 	lds	r30, 0x0453
    2610:	f0 91 54 04 	lds	r31, 0x0454
    2614:	84 85       	ldd	r24, Z+12	; 0x0c
    2616:	80 fd       	sbrc	r24, 0
    2618:	0a c0       	rjmp	.+20     	; 0x262e <OSSemPend+0x86>
    261a:	17 82       	std	Z+7, r1	; 0x07
    261c:	16 82       	std	Z+6, r1	; 0x06
    261e:	78 94       	sei
    2620:	f8 01       	movw	r30, r16
    2622:	10 82       	st	Z, r1
    2624:	df 91       	pop	r29
    2626:	cf 91       	pop	r28
    2628:	1f 91       	pop	r17
    262a:	0f 91       	pop	r16
    262c:	08 95       	ret
    262e:	ce 01       	movw	r24, r28
    2630:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <OS_EventTO>
    2634:	78 94       	sei
    2636:	8a e0       	ldi	r24, 0x0A	; 10
    2638:	f8 01       	movw	r30, r16
    263a:	80 83       	st	Z, r24
    263c:	ca cf       	rjmp	.-108    	; 0x25d2 <OSSemPend+0x2a>

0000263e <OSMboxPost>:
    263e:	fc 01       	movw	r30, r24
    2640:	f8 94       	cli
    2642:	81 81       	ldd	r24, Z+1	; 0x01
    2644:	88 23       	and	r24, r24
    2646:	39 f4       	brne	.+14     	; 0x2656 <OSMboxPost+0x18>
    2648:	84 81       	ldd	r24, Z+4	; 0x04
    264a:	95 81       	ldd	r25, Z+5	; 0x05
    264c:	89 2b       	or	r24, r25
    264e:	61 f0       	breq	.+24     	; 0x2668 <OSMboxPost+0x2a>
    2650:	78 94       	sei
    2652:	84 e1       	ldi	r24, 0x14	; 20
    2654:	08 95       	ret
    2656:	cf 01       	movw	r24, r30
    2658:	42 e0       	ldi	r20, 0x02	; 2
    265a:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <OS_EventTaskRdy>
    265e:	78 94       	sei
    2660:	0e 94 21 10 	call	0x2042	; 0x2042 <OS_Sched>
    2664:	80 e0       	ldi	r24, 0x00	; 0
    2666:	08 95       	ret
    2668:	75 83       	std	Z+5, r23	; 0x05
    266a:	64 83       	std	Z+4, r22	; 0x04
    266c:	78 94       	sei
    266e:	80 e0       	ldi	r24, 0x00	; 0
    2670:	08 95       	ret

00002672 <OSMboxPend>:
    2672:	ef 92       	push	r14
    2674:	ff 92       	push	r15
    2676:	0f 93       	push	r16
    2678:	1f 93       	push	r17
    267a:	cf 93       	push	r28
    267c:	df 93       	push	r29
    267e:	8c 01       	movw	r16, r24
    2680:	7a 01       	movw	r14, r20
    2682:	80 91 52 04 	lds	r24, 0x0452
    2686:	88 23       	and	r24, r24
    2688:	a1 f5       	brne	.+104    	; 0x26f2 <OSMboxPend+0x80>
    268a:	f8 94       	cli
    268c:	f8 01       	movw	r30, r16
    268e:	c4 81       	ldd	r28, Z+4	; 0x04
    2690:	d5 81       	ldd	r29, Z+5	; 0x05
    2692:	20 97       	sbiw	r28, 0x00	; 0
    2694:	69 f0       	breq	.+26     	; 0x26b0 <OSMboxPend+0x3e>
    2696:	15 82       	std	Z+5, r1	; 0x05
    2698:	14 82       	std	Z+4, r1	; 0x04
    269a:	78 94       	sei
    269c:	fa 01       	movw	r30, r20
    269e:	10 82       	st	Z, r1
    26a0:	ce 01       	movw	r24, r28
    26a2:	df 91       	pop	r29
    26a4:	cf 91       	pop	r28
    26a6:	1f 91       	pop	r17
    26a8:	0f 91       	pop	r16
    26aa:	ff 90       	pop	r15
    26ac:	ef 90       	pop	r14
    26ae:	08 95       	ret
    26b0:	e0 91 53 04 	lds	r30, 0x0453
    26b4:	f0 91 54 04 	lds	r31, 0x0454
    26b8:	84 85       	ldd	r24, Z+12	; 0x0c
    26ba:	82 60       	ori	r24, 0x02	; 2
    26bc:	84 87       	std	Z+12, r24	; 0x0c
    26be:	73 87       	std	Z+11, r23	; 0x0b
    26c0:	62 87       	std	Z+10, r22	; 0x0a
    26c2:	c8 01       	movw	r24, r16
    26c4:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <OS_EventTaskWait>
    26c8:	78 94       	sei
    26ca:	0e 94 21 10 	call	0x2042	; 0x2042 <OS_Sched>
    26ce:	f8 94       	cli
    26d0:	e0 91 53 04 	lds	r30, 0x0453
    26d4:	f0 91 54 04 	lds	r31, 0x0454
    26d8:	c0 85       	ldd	r28, Z+8	; 0x08
    26da:	d1 85       	ldd	r29, Z+9	; 0x09
    26dc:	20 97       	sbiw	r28, 0x00	; 0
    26de:	79 f0       	breq	.+30     	; 0x26fe <OSMboxPend+0x8c>
    26e0:	11 86       	std	Z+9, r1	; 0x09
    26e2:	10 86       	std	Z+8, r1	; 0x08
    26e4:	14 86       	std	Z+12, r1	; 0x0c
    26e6:	17 82       	std	Z+7, r1	; 0x07
    26e8:	16 82       	std	Z+6, r1	; 0x06
    26ea:	78 94       	sei
    26ec:	f7 01       	movw	r30, r14
    26ee:	10 82       	st	Z, r1
    26f0:	d7 cf       	rjmp	.-82     	; 0x26a0 <OSMboxPend+0x2e>
    26f2:	82 e0       	ldi	r24, 0x02	; 2
    26f4:	fa 01       	movw	r30, r20
    26f6:	80 83       	st	Z, r24
    26f8:	c0 e0       	ldi	r28, 0x00	; 0
    26fa:	d0 e0       	ldi	r29, 0x00	; 0
    26fc:	d1 cf       	rjmp	.-94     	; 0x26a0 <OSMboxPend+0x2e>
    26fe:	c8 01       	movw	r24, r16
    2700:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <OS_EventTO>
    2704:	78 94       	sei
    2706:	8a e0       	ldi	r24, 0x0A	; 10
    2708:	f7 01       	movw	r30, r14
    270a:	80 83       	st	Z, r24
    270c:	c9 cf       	rjmp	.-110    	; 0x26a0 <OSMboxPend+0x2e>

0000270e <OSSchedUnlock>:
    270e:	80 91 a3 03 	lds	r24, 0x03A3
    2712:	81 30       	cpi	r24, 0x01	; 1
    2714:	09 f0       	breq	.+2      	; 0x2718 <OSSchedUnlock+0xa>
    2716:	08 95       	ret
    2718:	f8 94       	cli
    271a:	80 91 a2 03 	lds	r24, 0x03A2
    271e:	88 23       	and	r24, r24
    2720:	59 f0       	breq	.+22     	; 0x2738 <OSSchedUnlock+0x2a>
    2722:	81 50       	subi	r24, 0x01	; 1
    2724:	80 93 a2 03 	sts	0x03A2, r24
    2728:	88 23       	and	r24, r24
    272a:	21 f4       	brne	.+8      	; 0x2734 <OSSchedUnlock+0x26>
    272c:	80 91 52 04 	lds	r24, 0x0452
    2730:	88 23       	and	r24, r24
    2732:	21 f0       	breq	.+8      	; 0x273c <OSSchedUnlock+0x2e>
    2734:	78 94       	sei
    2736:	08 95       	ret
    2738:	78 94       	sei
    273a:	08 95       	ret
    273c:	78 94       	sei
    273e:	0e 94 21 10 	call	0x2042	; 0x2042 <OS_Sched>
    2742:	08 95       	ret

00002744 <OSTimeTick>:
    2744:	0e 94 10 15 	call	0x2a20	; 0x2a20 <OSTimeTickHook>
    2748:	80 91 a3 03 	lds	r24, 0x03A3
    274c:	81 30       	cpi	r24, 0x01	; 1
    274e:	09 f0       	breq	.+2      	; 0x2752 <OSTimeTick+0xe>
    2750:	08 95       	ret
    2752:	a0 91 aa 03 	lds	r26, 0x03AA
    2756:	b0 91 ab 03 	lds	r27, 0x03AB
    275a:	1d 96       	adiw	r26, 0x0d	; 13
    275c:	8c 91       	ld	r24, X
    275e:	1d 97       	sbiw	r26, 0x0d	; 13
    2760:	8c 30       	cpi	r24, 0x0C	; 12
    2762:	b1 f3       	breq	.-20     	; 0x2750 <OSTimeTick+0xc>
    2764:	20 91 4c 04 	lds	r18, 0x044C
    2768:	41 e0       	ldi	r20, 0x01	; 1
    276a:	50 e0       	ldi	r21, 0x00	; 0
    276c:	1a c0       	rjmp	.+52     	; 0x27a2 <OSTimeTick+0x5e>
    276e:	51 96       	adiw	r26, 0x11	; 17
    2770:	8c 91       	ld	r24, X
    2772:	51 97       	sbiw	r26, 0x11	; 17
    2774:	28 2b       	or	r18, r24
    2776:	1f 96       	adiw	r26, 0x0f	; 15
    2778:	ec 91       	ld	r30, X
    277a:	1f 97       	sbiw	r26, 0x0f	; 15
    277c:	f0 e0       	ldi	r31, 0x00	; 0
    277e:	e3 5b       	subi	r30, 0xB3	; 179
    2780:	fb 4f       	sbci	r31, 0xFB	; 251
    2782:	80 81       	ld	r24, Z
    2784:	50 96       	adiw	r26, 0x10	; 16
    2786:	9c 91       	ld	r25, X
    2788:	50 97       	sbiw	r26, 0x10	; 16
    278a:	89 2b       	or	r24, r25
    278c:	80 83       	st	Z, r24
    278e:	12 96       	adiw	r26, 0x02	; 2
    2790:	0d 90       	ld	r0, X+
    2792:	bc 91       	ld	r27, X
    2794:	a0 2d       	mov	r26, r0
    2796:	78 94       	sei
    2798:	1d 96       	adiw	r26, 0x0d	; 13
    279a:	8c 91       	ld	r24, X
    279c:	1d 97       	sbiw	r26, 0x0d	; 13
    279e:	8c 30       	cpi	r24, 0x0C	; 12
    27a0:	c1 f0       	breq	.+48     	; 0x27d2 <OSTimeTick+0x8e>
    27a2:	f8 94       	cli
    27a4:	1a 96       	adiw	r26, 0x0a	; 10
    27a6:	8d 91       	ld	r24, X+
    27a8:	9c 91       	ld	r25, X
    27aa:	1b 97       	sbiw	r26, 0x0b	; 11
    27ac:	00 97       	sbiw	r24, 0x00	; 0
    27ae:	79 f3       	breq	.-34     	; 0x278e <OSTimeTick+0x4a>
    27b0:	01 97       	sbiw	r24, 0x01	; 1
    27b2:	1b 96       	adiw	r26, 0x0b	; 11
    27b4:	9c 93       	st	X, r25
    27b6:	8e 93       	st	-X, r24
    27b8:	1a 97       	sbiw	r26, 0x0a	; 10
    27ba:	89 2b       	or	r24, r25
    27bc:	41 f7       	brne	.-48     	; 0x278e <OSTimeTick+0x4a>
    27be:	1c 96       	adiw	r26, 0x0c	; 12
    27c0:	8c 91       	ld	r24, X
    27c2:	1c 97       	sbiw	r26, 0x0c	; 12
    27c4:	83 ff       	sbrs	r24, 3
    27c6:	d3 cf       	rjmp	.-90     	; 0x276e <OSTimeTick+0x2a>
    27c8:	1b 96       	adiw	r26, 0x0b	; 11
    27ca:	5c 93       	st	X, r21
    27cc:	4e 93       	st	-X, r20
    27ce:	1a 97       	sbiw	r26, 0x0a	; 10
    27d0:	de cf       	rjmp	.-68     	; 0x278e <OSTimeTick+0x4a>
    27d2:	20 93 4c 04 	sts	0x044C, r18
    27d6:	08 95       	ret

000027d8 <OSStart>:
    27d8:	80 91 a3 03 	lds	r24, 0x03A3
    27dc:	81 11       	cpse	r24, r1
    27de:	08 95       	ret
    27e0:	e0 91 4c 04 	lds	r30, 0x044C
    27e4:	f0 e0       	ldi	r31, 0x00	; 0
    27e6:	e3 59       	subi	r30, 0x93	; 147
    27e8:	ff 4f       	sbci	r31, 0xFF	; 255
    27ea:	a0 81       	ld	r26, Z
    27ec:	ea 2f       	mov	r30, r26
    27ee:	f0 e0       	ldi	r31, 0x00	; 0
    27f0:	e3 5b       	subi	r30, 0xB3	; 179
    27f2:	fb 4f       	sbci	r31, 0xFB	; 251
    27f4:	e0 81       	ld	r30, Z
    27f6:	f0 e0       	ldi	r31, 0x00	; 0
    27f8:	e3 59       	subi	r30, 0x93	; 147
    27fa:	ff 4f       	sbci	r31, 0xFF	; 255
    27fc:	aa 0f       	add	r26, r26
    27fe:	aa 0f       	add	r26, r26
    2800:	aa 0f       	add	r26, r26
    2802:	80 81       	ld	r24, Z
    2804:	a8 0f       	add	r26, r24
    2806:	a0 93 a8 03 	sts	0x03A8, r26
    280a:	a0 93 a9 03 	sts	0x03A9, r26
    280e:	b0 e0       	ldi	r27, 0x00	; 0
    2810:	aa 0f       	add	r26, r26
    2812:	bb 1f       	adc	r27, r27
    2814:	a3 50       	subi	r26, 0x03	; 3
    2816:	ba 4f       	sbci	r27, 0xFA	; 250
    2818:	8d 91       	ld	r24, X+
    281a:	9c 91       	ld	r25, X
    281c:	90 93 4b 04 	sts	0x044B, r25
    2820:	80 93 4a 04 	sts	0x044A, r24
    2824:	90 93 54 04 	sts	0x0454, r25
    2828:	80 93 53 04 	sts	0x0453, r24
    282c:	0e 94 15 15 	call	0x2a2a	; 0x2a2a <OSStartHighRdy>
    2830:	08 95       	ret

00002832 <OSIntExit>:
    2832:	80 91 a3 03 	lds	r24, 0x03A3
    2836:	81 30       	cpi	r24, 0x01	; 1
    2838:	09 f0       	breq	.+2      	; 0x283c <OSIntExit+0xa>
    283a:	08 95       	ret
    283c:	f8 94       	cli
    283e:	80 91 52 04 	lds	r24, 0x0452
    2842:	88 23       	and	r24, r24
    2844:	39 f0       	breq	.+14     	; 0x2854 <OSIntExit+0x22>
    2846:	81 50       	subi	r24, 0x01	; 1
    2848:	80 93 52 04 	sts	0x0452, r24
    284c:	88 23       	and	r24, r24
    284e:	11 f0       	breq	.+4      	; 0x2854 <OSIntExit+0x22>
    2850:	78 94       	sei
    2852:	08 95       	ret
    2854:	80 91 a2 03 	lds	r24, 0x03A2
    2858:	88 23       	and	r24, r24
    285a:	d1 f7       	brne	.-12     	; 0x2850 <OSIntExit+0x1e>
    285c:	e0 91 4c 04 	lds	r30, 0x044C
    2860:	f0 e0       	ldi	r31, 0x00	; 0
    2862:	e3 59       	subi	r30, 0x93	; 147
    2864:	ff 4f       	sbci	r31, 0xFF	; 255
    2866:	80 81       	ld	r24, Z
    2868:	80 93 51 04 	sts	0x0451, r24
    286c:	e8 2f       	mov	r30, r24
    286e:	f0 e0       	ldi	r31, 0x00	; 0
    2870:	e3 5b       	subi	r30, 0xB3	; 179
    2872:	fb 4f       	sbci	r31, 0xFB	; 251
    2874:	e0 81       	ld	r30, Z
    2876:	f0 e0       	ldi	r31, 0x00	; 0
    2878:	e3 59       	subi	r30, 0x93	; 147
    287a:	ff 4f       	sbci	r31, 0xFF	; 255
    287c:	98 2f       	mov	r25, r24
    287e:	99 0f       	add	r25, r25
    2880:	99 0f       	add	r25, r25
    2882:	99 0f       	add	r25, r25
    2884:	80 81       	ld	r24, Z
    2886:	98 0f       	add	r25, r24
    2888:	90 93 a8 03 	sts	0x03A8, r25
    288c:	80 91 a9 03 	lds	r24, 0x03A9
    2890:	98 17       	cp	r25, r24
    2892:	f1 f2       	breq	.-68     	; 0x2850 <OSIntExit+0x1e>
    2894:	e9 2f       	mov	r30, r25
    2896:	f0 e0       	ldi	r31, 0x00	; 0
    2898:	ee 0f       	add	r30, r30
    289a:	ff 1f       	adc	r31, r31
    289c:	e3 50       	subi	r30, 0x03	; 3
    289e:	fa 4f       	sbci	r31, 0xFA	; 250
    28a0:	80 81       	ld	r24, Z
    28a2:	91 81       	ldd	r25, Z+1	; 0x01
    28a4:	90 93 4b 04 	sts	0x044B, r25
    28a8:	80 93 4a 04 	sts	0x044A, r24
    28ac:	80 91 3c 04 	lds	r24, 0x043C
    28b0:	90 91 3d 04 	lds	r25, 0x043D
    28b4:	a0 91 3e 04 	lds	r26, 0x043E
    28b8:	b0 91 3f 04 	lds	r27, 0x043F
    28bc:	01 96       	adiw	r24, 0x01	; 1
    28be:	a1 1d       	adc	r26, r1
    28c0:	b1 1d       	adc	r27, r1
    28c2:	80 93 3c 04 	sts	0x043C, r24
    28c6:	90 93 3d 04 	sts	0x043D, r25
    28ca:	a0 93 3e 04 	sts	0x043E, r26
    28ce:	b0 93 3f 04 	sts	0x043F, r27
    28d2:	0e 94 a6 15 	call	0x2b4c	; 0x2b4c <OSIntCtxSw>
    28d6:	bc cf       	rjmp	.-136    	; 0x2850 <OSIntExit+0x1e>

000028d8 <OSInit>:
    28d8:	0e 94 11 15 	call	0x2a22	; 0x2a22 <OSInitHookBegin>
    28dc:	10 92 52 04 	sts	0x0452, r1
    28e0:	10 92 a2 03 	sts	0x03A2, r1
    28e4:	10 92 47 04 	sts	0x0447, r1
    28e8:	10 92 a3 03 	sts	0x03A3, r1
    28ec:	10 92 3c 04 	sts	0x043C, r1
    28f0:	10 92 3d 04 	sts	0x043D, r1
    28f4:	10 92 3e 04 	sts	0x043E, r1
    28f8:	10 92 3f 04 	sts	0x043F, r1
    28fc:	10 92 a4 03 	sts	0x03A4, r1
    2900:	10 92 a5 03 	sts	0x03A5, r1
    2904:	10 92 a6 03 	sts	0x03A6, r1
    2908:	10 92 a7 03 	sts	0x03A7, r1
    290c:	10 92 4c 04 	sts	0x044C, r1
    2910:	10 92 4d 04 	sts	0x044D, r1
    2914:	10 92 4e 04 	sts	0x044E, r1
    2918:	10 92 a9 03 	sts	0x03A9, r1
    291c:	10 92 a8 03 	sts	0x03A8, r1
    2920:	10 92 4b 04 	sts	0x044B, r1
    2924:	10 92 4a 04 	sts	0x044A, r1
    2928:	10 92 54 04 	sts	0x0454, r1
    292c:	10 92 53 04 	sts	0x0453, r1
    2930:	10 92 ab 03 	sts	0x03AB, r1
    2934:	10 92 aa 03 	sts	0x03AA, r1
    2938:	ed ef       	ldi	r30, 0xFD	; 253
    293a:	f5 e0       	ldi	r31, 0x05	; 5
    293c:	11 92       	st	Z+, r1
    293e:	11 92       	st	Z+, r1
    2940:	26 e0       	ldi	r18, 0x06	; 6
    2942:	e7 31       	cpi	r30, 0x17	; 23
    2944:	f2 07       	cpc	r31, r18
    2946:	d1 f7       	brne	.-12     	; 0x293c <OSInit+0x64>
    2948:	88 e1       	ldi	r24, 0x18	; 24
    294a:	95 e0       	ldi	r25, 0x05	; 5
    294c:	fc 01       	movw	r30, r24
    294e:	71 97       	sbiw	r30, 0x11	; 17
    2950:	91 83       	std	Z+1, r25	; 0x01
    2952:	80 83       	st	Z, r24
    2954:	43 96       	adiw	r24, 0x13	; 19
    2956:	25 e0       	ldi	r18, 0x05	; 5
    2958:	8c 3f       	cpi	r24, 0xFC	; 252
    295a:	92 07       	cpc	r25, r18
    295c:	b9 f7       	brne	.-18     	; 0x294c <OSInit+0x74>
    295e:	10 92 ec 05 	sts	0x05EC, r1
    2962:	10 92 eb 05 	sts	0x05EB, r1
    2966:	85 e0       	ldi	r24, 0x05	; 5
    2968:	95 e0       	ldi	r25, 0x05	; 5
    296a:	90 93 45 04 	sts	0x0445, r25
    296e:	80 93 44 04 	sts	0x0444, r24
    2972:	25 ed       	ldi	r18, 0xD5	; 213
    2974:	34 e0       	ldi	r19, 0x04	; 4
    2976:	f9 01       	movw	r30, r18
    2978:	cf 01       	movw	r24, r30
    297a:	08 96       	adiw	r24, 0x08	; 8
    297c:	10 82       	st	Z, r1
    297e:	95 83       	std	Z+5, r25	; 0x05
    2980:	84 83       	std	Z+4, r24	; 0x04
    2982:	fc 01       	movw	r30, r24
    2984:	84 e0       	ldi	r24, 0x04	; 4
    2986:	ed 3f       	cpi	r30, 0xFD	; 253
    2988:	f8 07       	cpc	r31, r24
    298a:	b1 f7       	brne	.-20     	; 0x2978 <OSInit+0xa0>
    298c:	10 82       	st	Z, r1
    298e:	15 82       	std	Z+5, r1	; 0x05
    2990:	14 82       	std	Z+4, r1	; 0x04
    2992:	30 93 50 04 	sts	0x0450, r19
    2996:	20 93 4f 04 	sts	0x044F, r18
    299a:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <OS_MemInit>
    299e:	89 e0       	ldi	r24, 0x09	; 9
    29a0:	90 e1       	ldi	r25, 0x10	; 16
    29a2:	60 e0       	ldi	r22, 0x00	; 0
    29a4:	70 e0       	ldi	r23, 0x00	; 0
    29a6:	44 ed       	ldi	r20, 0xD4	; 212
    29a8:	54 e0       	ldi	r21, 0x04	; 4
    29aa:	2c e0       	ldi	r18, 0x0C	; 12
    29ac:	0e 94 61 12 	call	0x24c2	; 0x24c2 <OSTaskCreate>
    29b0:	81 e2       	ldi	r24, 0x21	; 33
    29b2:	91 e1       	ldi	r25, 0x11	; 17
    29b4:	60 e0       	ldi	r22, 0x00	; 0
    29b6:	70 e0       	ldi	r23, 0x00	; 0
    29b8:	4b e3       	ldi	r20, 0x3B	; 59
    29ba:	54 e0       	ldi	r21, 0x04	; 4
    29bc:	2b e0       	ldi	r18, 0x0B	; 11
    29be:	0e 94 61 12 	call	0x24c2	; 0x24c2 <OSTaskCreate>
    29c2:	0e 94 12 15 	call	0x2a24	; 0x2a24 <OSInitHookEnd>
    29c6:	08 95       	ret

000029c8 <OSTaskStkInit>:
    29c8:	fa 01       	movw	r30, r20
    29ca:	80 83       	st	Z, r24
    29cc:	92 93       	st	-Z, r25
    29ce:	12 92       	st	-Z, r1
    29d0:	12 92       	st	-Z, r1
    29d2:	12 92       	st	-Z, r1
    29d4:	12 92       	st	-Z, r1
    29d6:	12 92       	st	-Z, r1
    29d8:	12 92       	st	-Z, r1
    29da:	12 92       	st	-Z, r1
    29dc:	12 92       	st	-Z, r1
    29de:	12 92       	st	-Z, r1
    29e0:	12 92       	st	-Z, r1
    29e2:	12 92       	st	-Z, r1
    29e4:	12 92       	st	-Z, r1
    29e6:	12 92       	st	-Z, r1
    29e8:	12 92       	st	-Z, r1
    29ea:	12 92       	st	-Z, r1
    29ec:	12 92       	st	-Z, r1
    29ee:	12 92       	st	-Z, r1
    29f0:	12 92       	st	-Z, r1
    29f2:	12 92       	st	-Z, r1
    29f4:	12 92       	st	-Z, r1
    29f6:	12 92       	st	-Z, r1
    29f8:	12 92       	st	-Z, r1
    29fa:	12 92       	st	-Z, r1
    29fc:	12 92       	st	-Z, r1
    29fe:	62 93       	st	-Z, r22
    2a00:	72 93       	st	-Z, r23
    2a02:	12 92       	st	-Z, r1
    2a04:	12 92       	st	-Z, r1
    2a06:	12 92       	st	-Z, r1
    2a08:	12 92       	st	-Z, r1
    2a0a:	12 92       	st	-Z, r1
    2a0c:	12 92       	st	-Z, r1
    2a0e:	80 e8       	ldi	r24, 0x80	; 128
    2a10:	82 93       	st	-Z, r24
    2a12:	31 97       	sbiw	r30, 0x01	; 1
    2a14:	cf 01       	movw	r24, r30
    2a16:	08 95       	ret

00002a18 <OSTaskCreateHook>:
    2a18:	08 95       	ret

00002a1a <OSTaskDelHook>:
    2a1a:	08 95       	ret

00002a1c <OSTaskSwHook>:
    2a1c:	08 95       	ret

00002a1e <OSTaskStatHook>:
    2a1e:	08 95       	ret

00002a20 <OSTimeTickHook>:
    2a20:	08 95       	ret

00002a22 <OSInitHookBegin>:
    2a22:	08 95       	ret

00002a24 <OSInitHookEnd>:
    2a24:	08 95       	ret

00002a26 <OSTaskIdleHook>:
    2a26:	08 95       	ret

00002a28 <OSTCBInitHook>:
    2a28:	08 95       	ret

00002a2a <OSStartHighRdy>:
;********************************************************************************************************

OSStartHighRdy: 
#if OS_TASK_SW_HOOK_EN > 0
#if FLASHEND >= 0x2000
	        call    OSTaskSwHook                ; Invoke user defined context switch hook
    2a2a:	0e 94 0e 15 	call	0x2a1c	; 0x2a1c <OSTaskSwHook>
#else
	        rcall   OSTaskSwHook                ; Use relative call with small devices (<=8 kB SRAM)
#endif
#endif
                lds     R16,OSRunning               ; Indicate that we are multitasking
    2a2e:	00 91 a3 03 	lds	r16, 0x03A3
                inc     R16                         ;
    2a32:	03 95       	inc	r16
                sts     OSRunning,R16               ;
    2a34:	00 93 a3 03 	sts	0x03A3, r16

                lds     R30,OSTCBHighRdy            ; Let Z point to TCB of highest priority task
    2a38:	e0 91 4a 04 	lds	r30, 0x044A
                lds     R31,OSTCBHighRdy+1          ; ready to run
    2a3c:	f0 91 4b 04 	lds	r31, 0x044B

                ld      R28,Z+                      ; Load stack L pointer
    2a40:	c1 91       	ld	r28, Z+
                out     _SFR_IO_ADDR(SPL),R28
    2a42:	cd bf       	out	0x3d, r28	; 61
                ld      R29,Z+                      ;
    2a44:	d1 91       	ld	r29, Z+
                out     _SFR_IO_ADDR(SPH),R29
    2a46:	de bf       	out	0x3e, r29	; 62

                POPSREG                             ; Pop the status register
    2a48:	0f 91       	pop	r16
    2a4a:	0f bf       	out	0x3f, r16	; 63
                POPRS                               ; Pop all registers
    2a4c:	ff 91       	pop	r31
    2a4e:	ef 91       	pop	r30
    2a50:	df 91       	pop	r29
    2a52:	cf 91       	pop	r28
    2a54:	bf 91       	pop	r27
    2a56:	af 91       	pop	r26
    2a58:	9f 91       	pop	r25
    2a5a:	8f 91       	pop	r24
    2a5c:	7f 91       	pop	r23
    2a5e:	6f 91       	pop	r22
    2a60:	5f 91       	pop	r21
    2a62:	4f 91       	pop	r20
    2a64:	3f 91       	pop	r19
    2a66:	2f 91       	pop	r18
    2a68:	1f 91       	pop	r17
    2a6a:	0f 91       	pop	r16
    2a6c:	ff 90       	pop	r15
    2a6e:	ef 90       	pop	r14
    2a70:	df 90       	pop	r13
    2a72:	cf 90       	pop	r12
    2a74:	bf 90       	pop	r11
    2a76:	af 90       	pop	r10
    2a78:	9f 90       	pop	r9
    2a7a:	8f 90       	pop	r8
    2a7c:	7f 90       	pop	r7
    2a7e:	6f 90       	pop	r6
    2a80:	5f 90       	pop	r5
    2a82:	4f 90       	pop	r4
    2a84:	3f 90       	pop	r3
    2a86:	2f 90       	pop	r2
    2a88:	1f 90       	pop	r1
    2a8a:	0f 90       	pop	r0
                ret                                 ; Start task
    2a8c:	08 95       	ret

00002a8e <OSCtxSw>:
;                                                R0
;                                                PCH
;                                                PCL                                     (High memory)
;********************************************************************************************************

OSCtxSw:        PUSHRS                              ; Save current tasks context
    2a8e:	0f 92       	push	r0
    2a90:	1f 92       	push	r1
    2a92:	2f 92       	push	r2
    2a94:	3f 92       	push	r3
    2a96:	4f 92       	push	r4
    2a98:	5f 92       	push	r5
    2a9a:	6f 92       	push	r6
    2a9c:	7f 92       	push	r7
    2a9e:	8f 92       	push	r8
    2aa0:	9f 92       	push	r9
    2aa2:	af 92       	push	r10
    2aa4:	bf 92       	push	r11
    2aa6:	cf 92       	push	r12
    2aa8:	df 92       	push	r13
    2aaa:	ef 92       	push	r14
    2aac:	ff 92       	push	r15
    2aae:	0f 93       	push	r16
    2ab0:	1f 93       	push	r17
    2ab2:	2f 93       	push	r18
    2ab4:	3f 93       	push	r19
    2ab6:	4f 93       	push	r20
    2ab8:	5f 93       	push	r21
    2aba:	6f 93       	push	r22
    2abc:	7f 93       	push	r23
    2abe:	8f 93       	push	r24
    2ac0:	9f 93       	push	r25
    2ac2:	af 93       	push	r26
    2ac4:	bf 93       	push	r27
    2ac6:	cf 93       	push	r28
    2ac8:	df 93       	push	r29
    2aca:	ef 93       	push	r30
    2acc:	ff 93       	push	r31
                PUSHSREG                            ; Save SREG
    2ace:	0f b7       	in	r16, 0x3f	; 63
    2ad0:	0f 93       	push	r16

                lds     R30,OSTCBCur                ; Z = OSTCBCur->OSTCBStkPtr
    2ad2:	e0 91 53 04 	lds	r30, 0x0453
                lds     R31,OSTCBCur+1              ;
    2ad6:	f0 91 54 04 	lds	r31, 0x0454

                in      r28,_SFR_IO_ADDR(SPL)
    2ada:	cd b7       	in	r28, 0x3d	; 61
                st      Z+,R28                      ; Save Y (R29:R28) pointer
    2adc:	c1 93       	st	Z+, r28
                in      r29,_SFR_IO_ADDR(SPH)
    2ade:	de b7       	in	r29, 0x3e	; 62
                st      Z+,R29                      ;
    2ae0:	d1 93       	st	Z+, r29

#if OS_TASK_SW_HOOK_EN > 0
#if FLASHEND >= 0x2000
	        call    OSTaskSwHook                ; Invoke user defined context switch hook
    2ae2:	0e 94 0e 15 	call	0x2a1c	; 0x2a1c <OSTaskSwHook>
#else
	        rcall   OSTaskSwHook                ; Use relative call with small devices (<=8 kB SRAM)
#endif
#endif

                lds     R16,OSPrioHighRdy           ; OSPrioCur = OSPrioHighRdy
    2ae6:	00 91 a8 03 	lds	r16, 0x03A8
                sts     OSPrioCur,R16
    2aea:	00 93 a9 03 	sts	0x03A9, r16

                lds     R30,OSTCBHighRdy            ; Let Z point to TCB of highest priority task
    2aee:	e0 91 4a 04 	lds	r30, 0x044A
                lds     R31,OSTCBHighRdy+1          ; ready to run
    2af2:	f0 91 4b 04 	lds	r31, 0x044B
                sts     OSTCBCur,R30                ; OSTCBCur = OSTCBHighRdy
    2af6:	e0 93 53 04 	sts	0x0453, r30
                sts     OSTCBCur+1,R31              ;
    2afa:	f0 93 54 04 	sts	0x0454, r31

                ld      R28,Z+                      ; Restore Y pointer
    2afe:	c1 91       	ld	r28, Z+
                out     _SFR_IO_ADDR(SPL),R28
    2b00:	cd bf       	out	0x3d, r28	; 61
                ld      R29,Z+                      ;
    2b02:	d1 91       	ld	r29, Z+
                out     _SFR_IO_ADDR(SPH),R29
    2b04:	de bf       	out	0x3e, r29	; 62

                POPSREG                             ; Restore the status register
    2b06:	0f 91       	pop	r16
    2b08:	0f bf       	out	0x3f, r16	; 63
                POPRS                               ; Restore all registers
    2b0a:	ff 91       	pop	r31
    2b0c:	ef 91       	pop	r30
    2b0e:	df 91       	pop	r29
    2b10:	cf 91       	pop	r28
    2b12:	bf 91       	pop	r27
    2b14:	af 91       	pop	r26
    2b16:	9f 91       	pop	r25
    2b18:	8f 91       	pop	r24
    2b1a:	7f 91       	pop	r23
    2b1c:	6f 91       	pop	r22
    2b1e:	5f 91       	pop	r21
    2b20:	4f 91       	pop	r20
    2b22:	3f 91       	pop	r19
    2b24:	2f 91       	pop	r18
    2b26:	1f 91       	pop	r17
    2b28:	0f 91       	pop	r16
    2b2a:	ff 90       	pop	r15
    2b2c:	ef 90       	pop	r14
    2b2e:	df 90       	pop	r13
    2b30:	cf 90       	pop	r12
    2b32:	bf 90       	pop	r11
    2b34:	af 90       	pop	r10
    2b36:	9f 90       	pop	r9
    2b38:	8f 90       	pop	r8
    2b3a:	7f 90       	pop	r7
    2b3c:	6f 90       	pop	r6
    2b3e:	5f 90       	pop	r5
    2b40:	4f 90       	pop	r4
    2b42:	3f 90       	pop	r3
    2b44:	2f 90       	pop	r2
    2b46:	1f 90       	pop	r1
    2b48:	0f 90       	pop	r0
                ret
    2b4a:	08 95       	ret

00002b4c <OSIntCtxSw>:
#endif
;*********************************************************************************************************

#if OS_TASK_SW_HOOK_EN > 0
#if FLASHEND >= 0x2000
	        call    OSTaskSwHook                ; Invoke user defined context switch hook
    2b4c:	0e 94 0e 15 	call	0x2a1c	; 0x2a1c <OSTaskSwHook>
#else
	        rcall   OSTaskSwHook                ; Use relative call with small devices (<=8 kB SRAM)
#endif
#endif
                lds     R16,OSPrioHighRdy           ; OSPrioCur = OSPrioHighRdy
    2b50:	00 91 a8 03 	lds	r16, 0x03A8
                sts     OSPrioCur,R16               ;
    2b54:	00 93 a9 03 	sts	0x03A9, r16

                lds     R30,OSTCBHighRdy            ; Z = OSTCBHighRdy->OSTCBStkPtr
    2b58:	e0 91 4a 04 	lds	r30, 0x044A
                lds     R31,OSTCBHighRdy+1          ;
    2b5c:	f0 91 4b 04 	lds	r31, 0x044B
                sts     OSTCBCur,R30                ; OSTCBCur = OSTCBHighRdy
    2b60:	e0 93 53 04 	sts	0x0453, r30
                sts     OSTCBCur+1,R31              ;
    2b64:	f0 93 54 04 	sts	0x0454, r31

                ld      R28,Z+                      ; Restore Y pointer
    2b68:	c1 91       	ld	r28, Z+
                out     _SFR_IO_ADDR(SPL),R28
    2b6a:	cd bf       	out	0x3d, r28	; 61
                ld      R29,Z+                      ;
    2b6c:	d1 91       	ld	r29, Z+
                out     _SFR_IO_ADDR(SPH),R29
    2b6e:	de bf       	out	0x3e, r29	; 62

                POPSREG                             ; Restore the status register
    2b70:	0f 91       	pop	r16
    2b72:	0f bf       	out	0x3f, r16	; 63
                POPRS                               ; Restore all registers
    2b74:	ff 91       	pop	r31
    2b76:	ef 91       	pop	r30
    2b78:	df 91       	pop	r29
    2b7a:	cf 91       	pop	r28
    2b7c:	bf 91       	pop	r27
    2b7e:	af 91       	pop	r26
    2b80:	9f 91       	pop	r25
    2b82:	8f 91       	pop	r24
    2b84:	7f 91       	pop	r23
    2b86:	6f 91       	pop	r22
    2b88:	5f 91       	pop	r21
    2b8a:	4f 91       	pop	r20
    2b8c:	3f 91       	pop	r19
    2b8e:	2f 91       	pop	r18
    2b90:	1f 91       	pop	r17
    2b92:	0f 91       	pop	r16
    2b94:	ff 90       	pop	r15
    2b96:	ef 90       	pop	r14
    2b98:	df 90       	pop	r13
    2b9a:	cf 90       	pop	r12
    2b9c:	bf 90       	pop	r11
    2b9e:	af 90       	pop	r10
    2ba0:	9f 90       	pop	r9
    2ba2:	8f 90       	pop	r8
    2ba4:	7f 90       	pop	r7
    2ba6:	6f 90       	pop	r6
    2ba8:	5f 90       	pop	r5
    2baa:	4f 90       	pop	r4
    2bac:	3f 90       	pop	r3
    2bae:	2f 90       	pop	r2
    2bb0:	1f 90       	pop	r1
    2bb2:	0f 90       	pop	r0
                ret
    2bb4:	08 95       	ret

00002bb6 <OSTickISR>:
; won't get vectored.
;
;********************************************************************************************************
.global	SIG_OVERFLOW0
SIG_OVERFLOW0:
OSTickISR:      PUSHRS                              ; Save all registers
    2bb6:	0f 92       	push	r0
    2bb8:	1f 92       	push	r1
    2bba:	2f 92       	push	r2
    2bbc:	3f 92       	push	r3
    2bbe:	4f 92       	push	r4
    2bc0:	5f 92       	push	r5
    2bc2:	6f 92       	push	r6
    2bc4:	7f 92       	push	r7
    2bc6:	8f 92       	push	r8
    2bc8:	9f 92       	push	r9
    2bca:	af 92       	push	r10
    2bcc:	bf 92       	push	r11
    2bce:	cf 92       	push	r12
    2bd0:	df 92       	push	r13
    2bd2:	ef 92       	push	r14
    2bd4:	ff 92       	push	r15
    2bd6:	0f 93       	push	r16
    2bd8:	1f 93       	push	r17
    2bda:	2f 93       	push	r18
    2bdc:	3f 93       	push	r19
    2bde:	4f 93       	push	r20
    2be0:	5f 93       	push	r21
    2be2:	6f 93       	push	r22
    2be4:	7f 93       	push	r23
    2be6:	8f 93       	push	r24
    2be8:	9f 93       	push	r25
    2bea:	af 93       	push	r26
    2bec:	bf 93       	push	r27
    2bee:	cf 93       	push	r28
    2bf0:	df 93       	push	r29
    2bf2:	ef 93       	push	r30
    2bf4:	ff 93       	push	r31
                PUSHSREGISR                         ; Save SREG with I bit set!
    2bf6:	0f b7       	in	r16, 0x3f	; 63
    2bf8:	00 68       	ori	r16, 0x80	; 128
    2bfa:	0f 93       	push	r16

                lds     R16,OSIntNesting            ; Notify uC/OS-II of ISR
    2bfc:	00 91 52 04 	lds	r16, 0x0452
                inc     R16                         ;
    2c00:	03 95       	inc	r16
                sts     OSIntNesting,R16            ;
    2c02:	00 93 52 04 	sts	0x0452, r16
; You should disable the lines between #if 1 and #endif if you use uC/OS-II version 2.51 or below!
; (Unfortunately OS_VERSION is not defined here (how to do it elegantly? On possibility would be to
;  code this ISR with C in os_cpu_c.c or use inline assembler in os_cpu_c.c)
;*********************************************************************************************************
#if 1
                cpi     R16,0x01
    2c06:	01 30       	cpi	r16, 0x01	; 1
                brne    _not_first_int
    2c08:	41 f4       	brne	.+16     	; 0x2c1a <_not_first_int>

                in      R28,_SFR_IO_ADDR(SPL)       ; Z = SP
    2c0a:	cd b7       	in	r28, 0x3d	; 61
                in      R29,_SFR_IO_ADDR(SPH)
    2c0c:	de b7       	in	r29, 0x3e	; 62
                lds     R30,OSTCBCur                ; Z = OSTCBCur->OSTCBStkPtr
    2c0e:	e0 91 53 04 	lds	r30, 0x0453
                lds     R31,OSTCBCur+1              ;
    2c12:	f0 91 54 04 	lds	r31, 0x0454
                st      Z+,R28                      ; Save Y pointer
    2c16:	c1 93       	st	Z+, r28
                st      Z+,R29                      ;
    2c18:	d1 93       	st	Z+, r29

00002c1a <_not_first_int>:
_not_first_int:
#endif
                ldi     R16,256-(CPU_CLOCK_HZ/OS_TICKS_PER_SEC/1024)   
    2c1a:	00 e0       	ldi	r16, 0x00	; 0
                                                    ; Reload timer to overflow at a rate of OS_TICKS_PER_SEC
                out     _SFR_IO_ADDR(TCNT0),R16     ; at a prescaler of 1024 and CPU_CLOCK_HZ AVR clock
    2c1c:	02 bf       	out	0x32, r16	; 50
	
                ldi     R31,0                       ; R1 must be zero in C
    2c1e:	f0 e0       	ldi	r31, 0x00	; 0
                mov     R1,R31                      ; thus it is cleard before calling C functions
    2c20:	1f 2e       	mov	r1, r31
        
                sei                                 ; Enable interrupts
    2c22:	78 94       	sei
                
#if FLASHEND >= 0x2000
                call    OSTimeTick                  ; Call uC/OS-IIs tick updating function
    2c24:	0e 94 a2 13 	call	0x2744	; 0x2744 <OSTimeTick>
#else
                rcall   OSTimeTick                  ; Call uC/OS-IIs tick updating function
#endif
                nop
    2c28:	00 00       	nop
#if FLASHEND >= 0x2000
                call    OSIntExit                   ; Notify uC/OS-II about end of ISR
    2c2a:	0e 94 19 14 	call	0x2832	; 0x2832 <OSIntExit>
#else
                rcall   OSIntExit                   ; Notify uC/OS-II about end of ISR
#endif

                POPSREG
    2c2e:	0f 91       	pop	r16
    2c30:	0f bf       	out	0x3f, r16	; 63
                POPRS                               ; Restore all registers and status register
    2c32:	ff 91       	pop	r31
    2c34:	ef 91       	pop	r30
    2c36:	df 91       	pop	r29
    2c38:	cf 91       	pop	r28
    2c3a:	bf 91       	pop	r27
    2c3c:	af 91       	pop	r26
    2c3e:	9f 91       	pop	r25
    2c40:	8f 91       	pop	r24
    2c42:	7f 91       	pop	r23
    2c44:	6f 91       	pop	r22
    2c46:	5f 91       	pop	r21
    2c48:	4f 91       	pop	r20
    2c4a:	3f 91       	pop	r19
    2c4c:	2f 91       	pop	r18
    2c4e:	1f 91       	pop	r17
    2c50:	0f 91       	pop	r16
    2c52:	ff 90       	pop	r15
    2c54:	ef 90       	pop	r14
    2c56:	df 90       	pop	r13
    2c58:	cf 90       	pop	r12
    2c5a:	bf 90       	pop	r11
    2c5c:	af 90       	pop	r10
    2c5e:	9f 90       	pop	r9
    2c60:	8f 90       	pop	r8
    2c62:	7f 90       	pop	r7
    2c64:	6f 90       	pop	r6
    2c66:	5f 90       	pop	r5
    2c68:	4f 90       	pop	r4
    2c6a:	3f 90       	pop	r3
    2c6c:	2f 90       	pop	r2
    2c6e:	1f 90       	pop	r1
    2c70:	0f 90       	pop	r0
                ret                                 ; Note: RET instead of RETI
    2c72:	08 95       	ret

00002c74 <__mulsi3>:
    2c74:	62 9f       	mul	r22, r18
    2c76:	d0 01       	movw	r26, r0
    2c78:	73 9f       	mul	r23, r19
    2c7a:	f0 01       	movw	r30, r0
    2c7c:	82 9f       	mul	r24, r18
    2c7e:	e0 0d       	add	r30, r0
    2c80:	f1 1d       	adc	r31, r1
    2c82:	64 9f       	mul	r22, r20
    2c84:	e0 0d       	add	r30, r0
    2c86:	f1 1d       	adc	r31, r1
    2c88:	92 9f       	mul	r25, r18
    2c8a:	f0 0d       	add	r31, r0
    2c8c:	83 9f       	mul	r24, r19
    2c8e:	f0 0d       	add	r31, r0
    2c90:	74 9f       	mul	r23, r20
    2c92:	f0 0d       	add	r31, r0
    2c94:	65 9f       	mul	r22, r21
    2c96:	f0 0d       	add	r31, r0
    2c98:	99 27       	eor	r25, r25
    2c9a:	72 9f       	mul	r23, r18
    2c9c:	b0 0d       	add	r27, r0
    2c9e:	e1 1d       	adc	r30, r1
    2ca0:	f9 1f       	adc	r31, r25
    2ca2:	63 9f       	mul	r22, r19
    2ca4:	b0 0d       	add	r27, r0
    2ca6:	e1 1d       	adc	r30, r1
    2ca8:	f9 1f       	adc	r31, r25
    2caa:	bd 01       	movw	r22, r26
    2cac:	cf 01       	movw	r24, r30
    2cae:	11 24       	eor	r1, r1
    2cb0:	08 95       	ret

00002cb2 <__divmodhi4>:
    2cb2:	97 fb       	bst	r25, 7
    2cb4:	09 2e       	mov	r0, r25
    2cb6:	07 26       	eor	r0, r23
    2cb8:	0a d0       	rcall	.+20     	; 0x2cce <__divmodhi4_neg1>
    2cba:	77 fd       	sbrc	r23, 7
    2cbc:	04 d0       	rcall	.+8      	; 0x2cc6 <__divmodhi4_neg2>
    2cbe:	2e d0       	rcall	.+92     	; 0x2d1c <__udivmodhi4>
    2cc0:	06 d0       	rcall	.+12     	; 0x2cce <__divmodhi4_neg1>
    2cc2:	00 20       	and	r0, r0
    2cc4:	1a f4       	brpl	.+6      	; 0x2ccc <__divmodhi4_exit>

00002cc6 <__divmodhi4_neg2>:
    2cc6:	70 95       	com	r23
    2cc8:	61 95       	neg	r22
    2cca:	7f 4f       	sbci	r23, 0xFF	; 255

00002ccc <__divmodhi4_exit>:
    2ccc:	08 95       	ret

00002cce <__divmodhi4_neg1>:
    2cce:	f6 f7       	brtc	.-4      	; 0x2ccc <__divmodhi4_exit>
    2cd0:	90 95       	com	r25
    2cd2:	81 95       	neg	r24
    2cd4:	9f 4f       	sbci	r25, 0xFF	; 255
    2cd6:	08 95       	ret

00002cd8 <__udivmodsi4>:
    2cd8:	a1 e2       	ldi	r26, 0x21	; 33
    2cda:	1a 2e       	mov	r1, r26
    2cdc:	aa 1b       	sub	r26, r26
    2cde:	bb 1b       	sub	r27, r27
    2ce0:	fd 01       	movw	r30, r26
    2ce2:	0d c0       	rjmp	.+26     	; 0x2cfe <__udivmodsi4_ep>

00002ce4 <__udivmodsi4_loop>:
    2ce4:	aa 1f       	adc	r26, r26
    2ce6:	bb 1f       	adc	r27, r27
    2ce8:	ee 1f       	adc	r30, r30
    2cea:	ff 1f       	adc	r31, r31
    2cec:	a2 17       	cp	r26, r18
    2cee:	b3 07       	cpc	r27, r19
    2cf0:	e4 07       	cpc	r30, r20
    2cf2:	f5 07       	cpc	r31, r21
    2cf4:	20 f0       	brcs	.+8      	; 0x2cfe <__udivmodsi4_ep>
    2cf6:	a2 1b       	sub	r26, r18
    2cf8:	b3 0b       	sbc	r27, r19
    2cfa:	e4 0b       	sbc	r30, r20
    2cfc:	f5 0b       	sbc	r31, r21

00002cfe <__udivmodsi4_ep>:
    2cfe:	66 1f       	adc	r22, r22
    2d00:	77 1f       	adc	r23, r23
    2d02:	88 1f       	adc	r24, r24
    2d04:	99 1f       	adc	r25, r25
    2d06:	1a 94       	dec	r1
    2d08:	69 f7       	brne	.-38     	; 0x2ce4 <__udivmodsi4_loop>
    2d0a:	60 95       	com	r22
    2d0c:	70 95       	com	r23
    2d0e:	80 95       	com	r24
    2d10:	90 95       	com	r25
    2d12:	9b 01       	movw	r18, r22
    2d14:	ac 01       	movw	r20, r24
    2d16:	bd 01       	movw	r22, r26
    2d18:	cf 01       	movw	r24, r30
    2d1a:	08 95       	ret

00002d1c <__udivmodhi4>:
    2d1c:	aa 1b       	sub	r26, r26
    2d1e:	bb 1b       	sub	r27, r27
    2d20:	51 e1       	ldi	r21, 0x11	; 17
    2d22:	07 c0       	rjmp	.+14     	; 0x2d32 <__udivmodhi4_ep>

00002d24 <__udivmodhi4_loop>:
    2d24:	aa 1f       	adc	r26, r26
    2d26:	bb 1f       	adc	r27, r27
    2d28:	a6 17       	cp	r26, r22
    2d2a:	b7 07       	cpc	r27, r23
    2d2c:	10 f0       	brcs	.+4      	; 0x2d32 <__udivmodhi4_ep>
    2d2e:	a6 1b       	sub	r26, r22
    2d30:	b7 0b       	sbc	r27, r23

00002d32 <__udivmodhi4_ep>:
    2d32:	88 1f       	adc	r24, r24
    2d34:	99 1f       	adc	r25, r25
    2d36:	5a 95       	dec	r21
    2d38:	a9 f7       	brne	.-22     	; 0x2d24 <__udivmodhi4_loop>
    2d3a:	80 95       	com	r24
    2d3c:	90 95       	com	r25
    2d3e:	bc 01       	movw	r22, r24
    2d40:	cd 01       	movw	r24, r26
    2d42:	08 95       	ret

00002d44 <_exit>:
    2d44:	f8 94       	cli

00002d46 <__stop_program>:
    2d46:	ff cf       	rjmp	.-2      	; 0x2d46 <__stop_program>
